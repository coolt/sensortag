//------------------------------------------------------------------------------
// TI Confidential - NDA Restrictions
//
// Copyright (c) 2011 Texas Instruments, Inc.
//
//    This is an unpublished work created in the year stated above.
//    Texas Instruments owns all rights in and to this work and
//    intends to maintain and protect it as an unpublished copyright.
//    In the event of either inadvertent or deliberate publication,
//    the above stated date shall be treated as the year of first
//    publication. In the event of such publication, Texas Instruments
//    intends to enforce its rights in the work under the copyright
//    laws as a published work.
//
//------------------------------------------------------------------------------
///
/// \file            ble_cmd.h
/// \brief           Definitions of API for Bluetooth Low Energy commands
///
///                  This file is generated by create_command.pl
///
/// \author          Low Power RF Wireless Business Unit
///                  Helge Coward (h.coward@ti.com)
///
/// \date            Thu Nov 17 10:26:10 CET 2011
///
//------------------------------------------------------------------------------

#ifndef __BLE_CMD_H
#define __BLE_CMD_H

#include <stdint.h>
#include "mailbox.h"

#define _POSITION_bleRadioOp_commandNo                          0
#define _TYPE_bleRadioOp_commandNo                              uint16_t
#define _POSITION_bleRadioOp_status                             2
#define _TYPE_bleRadioOp_status                                 uint16_t
#define _POSITION_bleRadioOp_pNextOp                            4
#define _TYPE_bleRadioOp_pNextOp                                uint8_t*
#define _POSITION_bleRadioOp_startTime                          8
#define _TYPE_bleRadioOp_startTime                              ratmr_t
#define _POSITION_bleRadioOp_startTrigger                       12
#define _TYPE_bleRadioOp_startTrigger                           uint8_t
#define _BITPOS_bleRadioOp_startTrigger_triggerType             0
#define _NBITS_bleRadioOp_startTrigger_triggerType              4
#define _BITPOS_bleRadioOp_startTrigger_bEnaCmd                 4
#define _NBITS_bleRadioOp_startTrigger_bEnaCmd                  1
#define _BITPOS_bleRadioOp_startTrigger_triggerNo               5
#define _NBITS_bleRadioOp_startTrigger_triggerNo                2
#define _BITPOS_bleRadioOp_startTrigger_pastTrig                7
#define _NBITS_bleRadioOp_startTrigger_pastTrig                 1
#define _POSITION_bleRadioOp_condition                          13
#define _TYPE_bleRadioOp_condition                              uint8_t
#define _BITPOS_bleRadioOp_condition_rule                       0
#define _NBITS_bleRadioOp_condition_rule                        4
#define _BITPOS_bleRadioOp_condition_nSkip                      4
#define _NBITS_bleRadioOp_condition_nSkip                       4
#define _POSITION_bleRadioOp_channel                            14
#define _TYPE_bleRadioOp_channel                                uint8_t
#define _POSITION_bleRadioOp_whitening                          15
#define _TYPE_bleRadioOp_whitening                              uint8_t
#define _BITPOS_bleRadioOp_whitening_init                       0
#define _NBITS_bleRadioOp_whitening_init                        7
#define _BITPOS_bleRadioOp_whitening_bOverride                  7
#define _NBITS_bleRadioOp_whitening_bOverride                   1
#define _POSITION_bleRadioOp_pParams                            16
#define _TYPE_bleRadioOp_pParams                                uint8_t*
#define _POSITION_bleRadioOp_pOutput                            20
#define _TYPE_bleRadioOp_pOutput                                uint8_t*
#define _LAST_POSITION_bleRadioOp                               20
#define _LAST_TYPE_bleRadioOp                                   uint8_t*

typedef struct {
   uint16_t commandNo;
   uint16_t status;
   uint8_t* pNextOp;
   ratmr_t startTime;
   struct {
      uint8_t triggerType:4;
      uint8_t bEnaCmd:1;
      uint8_t triggerNo:2;
      uint8_t pastTrig:1;
   } startTrigger;
   struct {
      uint8_t rule:4;
      uint8_t nSkip:4;
   } condition;
   uint8_t channel;
   struct {
      uint8_t init:7;
      uint8_t bOverride:1;
   } whitening;
   uint8_t* pParams;
   uint8_t* pOutput;
} rfCoreHal_bleRadioOp_t;

#define CMD_BLE_SLAVE                                           0x1801
#define _LAST_POSITION_CMD_BLE_SLAVE                            20
#define _LAST_TYPE_CMD_BLE_SLAVE                                uint8_t*

typedef struct {
   uint16_t commandNo;
   uint16_t status;
   uint8_t* pNextOp;
   ratmr_t startTime;
   struct {
      uint8_t triggerType:4;
      uint8_t bEnaCmd:1;
      uint8_t triggerNo:2;
      uint8_t pastTrig:1;
   } startTrigger;
   struct {
      uint8_t rule:4;
      uint8_t nSkip:4;
   } condition;
   uint8_t channel;
   struct {
      uint8_t init:7;
      uint8_t bOverride:1;
   } whitening;
   uint8_t* pParams;
   uint8_t* pOutput;
} rfCoreHal_CMD_BLE_SLAVE_t;

#define CMD_BLE_MASTER                                          0x1802
#define _LAST_POSITION_CMD_BLE_MASTER                           20
#define _LAST_TYPE_CMD_BLE_MASTER                               uint8_t*

typedef struct {
   uint16_t commandNo;
   uint16_t status;
   uint8_t* pNextOp;
   ratmr_t startTime;
   struct {
      uint8_t triggerType:4;
      uint8_t bEnaCmd:1;
      uint8_t triggerNo:2;
      uint8_t pastTrig:1;
   } startTrigger;
   struct {
      uint8_t rule:4;
      uint8_t nSkip:4;
   } condition;
   uint8_t channel;
   struct {
      uint8_t init:7;
      uint8_t bOverride:1;
   } whitening;
   uint8_t* pParams;
   uint8_t* pOutput;
} rfCoreHal_CMD_BLE_MASTER_t;

#define CMD_BLE_ADV                                             0x1803
#define _LAST_POSITION_CMD_BLE_ADV                              20
#define _LAST_TYPE_CMD_BLE_ADV                                  uint8_t*

typedef struct {
   uint16_t commandNo;
   uint16_t status;
   uint8_t* pNextOp;
   ratmr_t startTime;
   struct {
      uint8_t triggerType:4;
      uint8_t bEnaCmd:1;
      uint8_t triggerNo:2;
      uint8_t pastTrig:1;
   } startTrigger;
   struct {
      uint8_t rule:4;
      uint8_t nSkip:4;
   } condition;
   uint8_t channel;
   struct {
      uint8_t init:7;
      uint8_t bOverride:1;
   } whitening;
   uint8_t* pParams;
   uint8_t* pOutput;
} rfCoreHal_CMD_BLE_ADV_t;

#define CMD_BLE_ADV_DIR                                         0x1804
#define _LAST_POSITION_CMD_BLE_ADV_DIR                          20
#define _LAST_TYPE_CMD_BLE_ADV_DIR                              uint8_t*

typedef struct {
   uint16_t commandNo;
   uint16_t status;
   uint8_t* pNextOp;
   ratmr_t startTime;
   struct {
      uint8_t triggerType:4;
      uint8_t bEnaCmd:1;
      uint8_t triggerNo:2;
      uint8_t pastTrig:1;
   } startTrigger;
   struct {
      uint8_t rule:4;
      uint8_t nSkip:4;
   } condition;
   uint8_t channel;
   struct {
      uint8_t init:7;
      uint8_t bOverride:1;
   } whitening;
   uint8_t* pParams;
   uint8_t* pOutput;
} rfCoreHal_CMD_BLE_ADV_DIR_t;

#define CMD_BLE_ADV_NC                                          0x1805
#define _LAST_POSITION_CMD_BLE_ADV_NC                           20
#define _LAST_TYPE_CMD_BLE_ADV_NC                               uint8_t*

typedef struct {
   uint16_t commandNo;
   uint16_t status;
   uint8_t* pNextOp;
   ratmr_t startTime;
   struct {
      uint8_t triggerType:4;
      uint8_t bEnaCmd:1;
      uint8_t triggerNo:2;
      uint8_t pastTrig:1;
   } startTrigger;
   struct {
      uint8_t rule:4;
      uint8_t nSkip:4;
   } condition;
   uint8_t channel;
   struct {
      uint8_t init:7;
      uint8_t bOverride:1;
   } whitening;
   uint8_t* pParams;
   uint8_t* pOutput;
} rfCoreHal_CMD_BLE_ADV_NC_t;

#define CMD_BLE_ADV_SCAN                                        0x1806
#define _LAST_POSITION_CMD_BLE_ADV_SCAN                         20
#define _LAST_TYPE_CMD_BLE_ADV_SCAN                             uint8_t*

typedef struct {
   uint16_t commandNo;
   uint16_t status;
   uint8_t* pNextOp;
   ratmr_t startTime;
   struct {
      uint8_t triggerType:4;
      uint8_t bEnaCmd:1;
      uint8_t triggerNo:2;
      uint8_t pastTrig:1;
   } startTrigger;
   struct {
      uint8_t rule:4;
      uint8_t nSkip:4;
   } condition;
   uint8_t channel;
   struct {
      uint8_t init:7;
      uint8_t bOverride:1;
   } whitening;
   uint8_t* pParams;
   uint8_t* pOutput;
} rfCoreHal_CMD_BLE_ADV_SCAN_t;

#define CMD_BLE_SCANNER                                         0x1807
#define _LAST_POSITION_CMD_BLE_SCANNER                          20
#define _LAST_TYPE_CMD_BLE_SCANNER                              uint8_t*

typedef struct {
   uint16_t commandNo;
   uint16_t status;
   uint8_t* pNextOp;
   ratmr_t startTime;
   struct {
      uint8_t triggerType:4;
      uint8_t bEnaCmd:1;
      uint8_t triggerNo:2;
      uint8_t pastTrig:1;
   } startTrigger;
   struct {
      uint8_t rule:4;
      uint8_t nSkip:4;
   } condition;
   uint8_t channel;
   struct {
      uint8_t init:7;
      uint8_t bOverride:1;
   } whitening;
   uint8_t* pParams;
   uint8_t* pOutput;
} rfCoreHal_CMD_BLE_SCANNER_t;

#define CMD_BLE_INITIATOR                                       0x1808
#define _LAST_POSITION_CMD_BLE_INITIATOR                        20
#define _LAST_TYPE_CMD_BLE_INITIATOR                            uint8_t*

typedef struct {
   uint16_t commandNo;
   uint16_t status;
   uint8_t* pNextOp;
   ratmr_t startTime;
   struct {
      uint8_t triggerType:4;
      uint8_t bEnaCmd:1;
      uint8_t triggerNo:2;
      uint8_t pastTrig:1;
   } startTrigger;
   struct {
      uint8_t rule:4;
      uint8_t nSkip:4;
   } condition;
   uint8_t channel;
   struct {
      uint8_t init:7;
      uint8_t bOverride:1;
   } whitening;
   uint8_t* pParams;
   uint8_t* pOutput;
} rfCoreHal_CMD_BLE_INITIATOR_t;

#define CMD_BLE_GENERIC_RX                                      0x1809
#define _LAST_POSITION_CMD_BLE_GENERIC_RX                       20
#define _LAST_TYPE_CMD_BLE_GENERIC_RX                           uint8_t*

typedef struct {
   uint16_t commandNo;
   uint16_t status;
   uint8_t* pNextOp;
   ratmr_t startTime;
   struct {
      uint8_t triggerType:4;
      uint8_t bEnaCmd:1;
      uint8_t triggerNo:2;
      uint8_t pastTrig:1;
   } startTrigger;
   struct {
      uint8_t rule:4;
      uint8_t nSkip:4;
   } condition;
   uint8_t channel;
   struct {
      uint8_t init:7;
      uint8_t bOverride:1;
   } whitening;
   uint8_t* pParams;
   uint8_t* pOutput;
} rfCoreHal_CMD_BLE_GENERIC_RX_t;

#define CMD_BLE_TX_TEST                                         0x180A
#define _LAST_POSITION_CMD_BLE_TX_TEST                          20
#define _LAST_TYPE_CMD_BLE_TX_TEST                              uint8_t*

typedef struct {
   uint16_t commandNo;
   uint16_t status;
   uint8_t* pNextOp;
   ratmr_t startTime;
   struct {
      uint8_t triggerType:4;
      uint8_t bEnaCmd:1;
      uint8_t triggerNo:2;
      uint8_t pastTrig:1;
   } startTrigger;
   struct {
      uint8_t rule:4;
      uint8_t nSkip:4;
   } condition;
   uint8_t channel;
   struct {
      uint8_t init:7;
      uint8_t bOverride:1;
   } whitening;
   uint8_t* pParams;
   uint8_t* pOutput;
} rfCoreHal_CMD_BLE_TX_TEST_t;

#define CMD_BLE_ADV_PAYLOAD                                     0x1001
#define _POSITION_CMD_BLE_ADV_PAYLOAD_payloadType               2
#define _TYPE_CMD_BLE_ADV_PAYLOAD_payloadType                   uint8_t
#define _POSITION_CMD_BLE_ADV_PAYLOAD_newLen                    3
#define _TYPE_CMD_BLE_ADV_PAYLOAD_newLen                        uint8_t
#define _POSITION_CMD_BLE_ADV_PAYLOAD_pNewData                  4
#define _TYPE_CMD_BLE_ADV_PAYLOAD_pNewData                      uint8_t*
#define _POSITION_CMD_BLE_ADV_PAYLOAD_pParams                   8
#define _TYPE_CMD_BLE_ADV_PAYLOAD_pParams                       uint8_t*
#define _LAST_POSITION_CMD_BLE_ADV_PAYLOAD                      8
#define _LAST_TYPE_CMD_BLE_ADV_PAYLOAD                          uint8_t*

typedef struct {
   uint16_t commandNo;
   uint8_t payloadType;
   uint8_t newLen;
   uint8_t* pNewData;
   uint8_t* pParams;
} rfCoreHal_CMD_BLE_ADV_PAYLOAD_t;

#define _POSITION_bleMasterSlavePar_pRxQ                        0
#define _TYPE_bleMasterSlavePar_pRxQ                            dataQueue_t*
#define _POSITION_bleMasterSlavePar_pTxQ                        4
#define _TYPE_bleMasterSlavePar_pTxQ                            dataQueue_t*
#define _POSITION_bleMasterSlavePar_rxConfig                    8
#define _TYPE_bleMasterSlavePar_rxConfig                        uint8_t
#define _BITPOS_bleMasterSlavePar_rxConfig_bAutoFlushIgnored    0
#define _NBITS_bleMasterSlavePar_rxConfig_bAutoFlushIgnored     1
#define _BITPOS_bleMasterSlavePar_rxConfig_bAutoFlushCrcErr     1
#define _NBITS_bleMasterSlavePar_rxConfig_bAutoFlushCrcErr      1
#define _BITPOS_bleMasterSlavePar_rxConfig_bAutoFlushEmpty      2
#define _NBITS_bleMasterSlavePar_rxConfig_bAutoFlushEmpty       1
#define _BITPOS_bleMasterSlavePar_rxConfig_bIncludeLenByte      3
#define _NBITS_bleMasterSlavePar_rxConfig_bIncludeLenByte       1
#define _BITPOS_bleMasterSlavePar_rxConfig_bIncludeCrc          4
#define _NBITS_bleMasterSlavePar_rxConfig_bIncludeCrc           1
#define _BITPOS_bleMasterSlavePar_rxConfig_bAppendRssi          5
#define _NBITS_bleMasterSlavePar_rxConfig_bAppendRssi           1
#define _BITPOS_bleMasterSlavePar_rxConfig_bAppendStatus        6
#define _NBITS_bleMasterSlavePar_rxConfig_bAppendStatus         1
#define _BITPOS_bleMasterSlavePar_rxConfig_bAppendTimestamp     7
#define _NBITS_bleMasterSlavePar_rxConfig_bAppendTimestamp      1
#define _POSITION_bleMasterSlavePar_seqStat                     9
#define _TYPE_bleMasterSlavePar_seqStat                         uint8_t
#define _BITPOS_bleMasterSlavePar_seqStat_lastRxSn              0
#define _NBITS_bleMasterSlavePar_seqStat_lastRxSn               1
#define _BITPOS_bleMasterSlavePar_seqStat_lastTxSn              1
#define _NBITS_bleMasterSlavePar_seqStat_lastTxSn               1
#define _BITPOS_bleMasterSlavePar_seqStat_nextTxSn              2
#define _NBITS_bleMasterSlavePar_seqStat_nextTxSn               1
#define _BITPOS_bleMasterSlavePar_seqStat_bFirstPkt             3
#define _NBITS_bleMasterSlavePar_seqStat_bFirstPkt              1
#define _BITPOS_bleMasterSlavePar_seqStat_bAutoEmpty            4
#define _NBITS_bleMasterSlavePar_seqStat_bAutoEmpty             1
#define _BITPOS_bleMasterSlavePar_seqStat_bLlCtrlTx             5
#define _NBITS_bleMasterSlavePar_seqStat_bLlCtrlTx              1
#define _BITPOS_bleMasterSlavePar_seqStat_bLlCtrlAckRx          6
#define _NBITS_bleMasterSlavePar_seqStat_bLlCtrlAckRx           1
#define _BITPOS_bleMasterSlavePar_seqStat_bLlCtrlAckPending     7
#define _NBITS_bleMasterSlavePar_seqStat_bLlCtrlAckPending      1
#define _POSITION_bleMasterSlavePar_maxNack                     10
#define _TYPE_bleMasterSlavePar_maxNack                         uint8_t
#define _POSITION_bleMasterSlavePar_maxPkt                      11
#define _TYPE_bleMasterSlavePar_maxPkt                          uint8_t
#define _POSITION_bleMasterSlavePar_accessAddress               12
#define _TYPE_bleMasterSlavePar_accessAddress                   uint32_t
#define _POSITION_bleMasterSlavePar_crcInit                     16
#define _TYPE_bleMasterSlavePar_crcInit                         uint32_t
#define _LAST_POSITION_bleMasterSlavePar                        16
#define _LAST_TYPE_bleMasterSlavePar                            uint32_t

typedef struct {
   dataQueue_t* pRxQ;
   dataQueue_t* pTxQ;
   struct {
      uint8_t bAutoFlushIgnored:1;
      uint8_t bAutoFlushCrcErr:1;
      uint8_t bAutoFlushEmpty:1;
      uint8_t bIncludeLenByte:1;
      uint8_t bIncludeCrc:1;
      uint8_t bAppendRssi:1;
      uint8_t bAppendStatus:1;
      uint8_t bAppendTimestamp:1;
   } rxConfig;
   struct {
      uint8_t lastRxSn:1;
      uint8_t lastTxSn:1;
      uint8_t nextTxSn:1;
      uint8_t bFirstPkt:1;
      uint8_t bAutoEmpty:1;
      uint8_t bLlCtrlTx:1;
      uint8_t bLlCtrlAckRx:1;
      uint8_t bLlCtrlAckPending:1;
   } seqStat;
   uint8_t maxNack;
   uint8_t maxPkt;
   uint32_t accessAddress;
   uint32_t crcInit;
} rfCoreHal_bleMasterSlavePar_t;

#define _POSITION_bleMasterPar_endTrigger                       19
#define _TYPE_bleMasterPar_endTrigger                           uint8_t
#define _BITPOS_bleMasterPar_endTrigger_triggerType             0
#define _NBITS_bleMasterPar_endTrigger_triggerType              4
#define _BITPOS_bleMasterPar_endTrigger_bEnaCmd                 4
#define _NBITS_bleMasterPar_endTrigger_bEnaCmd                  1
#define _BITPOS_bleMasterPar_endTrigger_triggerNo               5
#define _NBITS_bleMasterPar_endTrigger_triggerNo                2
#define _BITPOS_bleMasterPar_endTrigger_pastTrig                7
#define _NBITS_bleMasterPar_endTrigger_pastTrig                 1
#define _POSITION_bleMasterPar_endTime                          20
#define _TYPE_bleMasterPar_endTime                              ratmr_t
#define _LAST_POSITION_bleMasterPar                             20
#define _LAST_TYPE_bleMasterPar                                 ratmr_t

typedef struct {
   dataQueue_t* pRxQ;
   dataQueue_t* pTxQ;
   struct {
      uint8_t bAutoFlushIgnored:1;
      uint8_t bAutoFlushCrcErr:1;
      uint8_t bAutoFlushEmpty:1;
      uint8_t bIncludeLenByte:1;
      uint8_t bIncludeCrc:1;
      uint8_t bAppendRssi:1;
      uint8_t bAppendStatus:1;
      uint8_t bAppendTimestamp:1;
   } rxConfig;
   struct {
      uint8_t lastRxSn:1;
      uint8_t lastTxSn:1;
      uint8_t nextTxSn:1;
      uint8_t bFirstPkt:1;
      uint8_t bAutoEmpty:1;
      uint8_t bLlCtrlTx:1;
      uint8_t bLlCtrlAckRx:1;
      uint8_t bLlCtrlAckPending:1;
   } seqStat;
   uint8_t maxNack;
   uint8_t maxPkt;
   uint32_t accessAddress;
   uint32_t crcInit;
   ratmr_t endTime;
} rfCoreHal_bleMasterPar_t;

#define _POSITION_bleSlavePar_timeoutTrigger                    19
#define _TYPE_bleSlavePar_timeoutTrigger                        uint8_t
#define _BITPOS_bleSlavePar_timeoutTrigger_triggerType          0
#define _NBITS_bleSlavePar_timeoutTrigger_triggerType           4
#define _BITPOS_bleSlavePar_timeoutTrigger_bEnaCmd              4
#define _NBITS_bleSlavePar_timeoutTrigger_bEnaCmd               1
#define _BITPOS_bleSlavePar_timeoutTrigger_triggerNo            5
#define _NBITS_bleSlavePar_timeoutTrigger_triggerNo             2
#define _BITPOS_bleSlavePar_timeoutTrigger_pastTrig             7
#define _NBITS_bleSlavePar_timeoutTrigger_pastTrig              1
#define _POSITION_bleSlavePar_timeoutTime                       20
#define _TYPE_bleSlavePar_timeoutTime                           ratmr_t
#define _POSITION_bleSlavePar_endTrigger                        27
#define _TYPE_bleSlavePar_endTrigger                            uint8_t
#define _BITPOS_bleSlavePar_endTrigger_triggerType              0
#define _NBITS_bleSlavePar_endTrigger_triggerType               4
#define _BITPOS_bleSlavePar_endTrigger_bEnaCmd                  4
#define _NBITS_bleSlavePar_endTrigger_bEnaCmd                   1
#define _BITPOS_bleSlavePar_endTrigger_triggerNo                5
#define _NBITS_bleSlavePar_endTrigger_triggerNo                 2
#define _BITPOS_bleSlavePar_endTrigger_pastTrig                 7
#define _NBITS_bleSlavePar_endTrigger_pastTrig                  1
#define _POSITION_bleSlavePar_endTime                           28
#define _TYPE_bleSlavePar_endTime                               ratmr_t
#define _LAST_POSITION_bleSlavePar                              28
#define _LAST_TYPE_bleSlavePar                                  ratmr_t

typedef struct {
   dataQueue_t* pRxQ;
   dataQueue_t* pTxQ;
   struct {
      uint8_t bAutoFlushIgnored:1;
      uint8_t bAutoFlushCrcErr:1;
      uint8_t bAutoFlushEmpty:1;
      uint8_t bIncludeLenByte:1;
      uint8_t bIncludeCrc:1;
      uint8_t bAppendRssi:1;
      uint8_t bAppendStatus:1;
      uint8_t bAppendTimestamp:1;
   } rxConfig;
   struct {
      uint8_t lastRxSn:1;
      uint8_t lastTxSn:1;
      uint8_t nextTxSn:1;
      uint8_t bFirstPkt:1;
      uint8_t bAutoEmpty:1;
      uint8_t bLlCtrlTx:1;
      uint8_t bLlCtrlAckRx:1;
      uint8_t bLlCtrlAckPending:1;
   } seqStat;
   uint8_t maxNack;
   uint8_t maxPkt;
   uint32_t accessAddress;
   uint32_t crcInit;
   ratmr_t timeoutTime;
   uint16_t __dummy0;
   uint8_t __dummy1;
   struct {
      uint8_t triggerType:4;
      uint8_t bEnaCmd:1;
      uint8_t triggerNo:2;
      uint8_t pastTrig:1;
   } endTrigger;
   ratmr_t endTime;
} rfCoreHal_bleSlavePar_t;

#define _POSITION_bleAdvPar_pRxQ                                0
#define _TYPE_bleAdvPar_pRxQ                                    dataQueue_t*
#define _POSITION_bleAdvPar_rxConfig                            4
#define _TYPE_bleAdvPar_rxConfig                                uint8_t
#define _BITPOS_bleAdvPar_rxConfig_bAutoFlushIgnored            0
#define _NBITS_bleAdvPar_rxConfig_bAutoFlushIgnored             1
#define _BITPOS_bleAdvPar_rxConfig_bAutoFlushCrcErr             1
#define _NBITS_bleAdvPar_rxConfig_bAutoFlushCrcErr              1
#define _BITPOS_bleAdvPar_rxConfig_bAutoFlushEmpty              2
#define _NBITS_bleAdvPar_rxConfig_bAutoFlushEmpty               1
#define _BITPOS_bleAdvPar_rxConfig_bIncludeLenByte              3
#define _NBITS_bleAdvPar_rxConfig_bIncludeLenByte               1
#define _BITPOS_bleAdvPar_rxConfig_bIncludeCrc                  4
#define _NBITS_bleAdvPar_rxConfig_bIncludeCrc                   1
#define _BITPOS_bleAdvPar_rxConfig_bAppendRssi                  5
#define _NBITS_bleAdvPar_rxConfig_bAppendRssi                   1
#define _BITPOS_bleAdvPar_rxConfig_bAppendStatus                6
#define _NBITS_bleAdvPar_rxConfig_bAppendStatus                 1
#define _BITPOS_bleAdvPar_rxConfig_bAppendTimestamp             7
#define _NBITS_bleAdvPar_rxConfig_bAppendTimestamp              1
#define _POSITION_bleAdvPar_advConfig                           5
#define _TYPE_bleAdvPar_advConfig                               uint8_t
#define _BITPOS_bleAdvPar_advConfig_advFilterPolicy             0
#define _NBITS_bleAdvPar_advConfig_advFilterPolicy              2
#define _BITPOS_bleAdvPar_advConfig_deviceAddrType              2
#define _NBITS_bleAdvPar_advConfig_deviceAddrType               1
#define _BITPOS_bleAdvPar_advConfig_peerAddrType                3
#define _NBITS_bleAdvPar_advConfig_peerAddrType                 1
#define _BITPOS_bleAdvPar_advConfig_bStrictLenFilter            4
#define _NBITS_bleAdvPar_advConfig_bStrictLenFilter             1
#define _POSITION_bleAdvPar_advLen                              6
#define _TYPE_bleAdvPar_advLen                                  uint8_t
#define _POSITION_bleAdvPar_scanRspLen                          7
#define _TYPE_bleAdvPar_scanRspLen                              uint8_t
#define _POSITION_bleAdvPar_pAdvData                            8
#define _TYPE_bleAdvPar_pAdvData                                uint8_t*
#define _POSITION_bleAdvPar_pScanRspData                        12
#define _TYPE_bleAdvPar_pScanRspData                            uint8_t*
#define _POSITION_bleAdvPar_pDeviceAddress                      16
#define _TYPE_bleAdvPar_pDeviceAddress                          uint16_t*
#define _POSITION_bleAdvPar_pWhiteList                          20
#define _TYPE_bleAdvPar_pWhiteList                              uint32_t*
#define _POSITION_bleAdvPar_endTrigger                          27
#define _TYPE_bleAdvPar_endTrigger                              uint8_t
#define _BITPOS_bleAdvPar_endTrigger_triggerType                0
#define _NBITS_bleAdvPar_endTrigger_triggerType                 4
#define _BITPOS_bleAdvPar_endTrigger_bEnaCmd                    4
#define _NBITS_bleAdvPar_endTrigger_bEnaCmd                     1
#define _BITPOS_bleAdvPar_endTrigger_triggerNo                  5
#define _NBITS_bleAdvPar_endTrigger_triggerNo                   2
#define _BITPOS_bleAdvPar_endTrigger_pastTrig                   7
#define _NBITS_bleAdvPar_endTrigger_pastTrig                    1
#define _POSITION_bleAdvPar_endTime                             28
#define _TYPE_bleAdvPar_endTime                                 ratmr_t
#define _LAST_POSITION_bleAdvPar                                28
#define _LAST_TYPE_bleAdvPar                                    ratmr_t

typedef struct {
   dataQueue_t* pRxQ;
   struct {
      uint8_t bAutoFlushIgnored:1;
      uint8_t bAutoFlushCrcErr:1;
      uint8_t bAutoFlushEmpty:1;
      uint8_t bIncludeLenByte:1;
      uint8_t bIncludeCrc:1;
      uint8_t bAppendRssi:1;
      uint8_t bAppendStatus:1;
      uint8_t bAppendTimestamp:1;
   } rxConfig;
   struct {
      uint8_t advFilterPolicy:2;
      uint8_t deviceAddrType:1;
      uint8_t peerAddrType:1;
      uint8_t bStrictLenFilter:1;
   } advConfig;
   uint8_t advLen;
   uint8_t scanRspLen;
   uint8_t* pAdvData;
   uint8_t* pScanRspData;
   uint16_t* pDeviceAddress;
   uint32_t* pWhiteList;
   uint16_t __dummy0;
   uint8_t __dummy1;
   struct {
      uint8_t triggerType:4;
      uint8_t bEnaCmd:1;
      uint8_t triggerNo:2;
      uint8_t pastTrig:1;
   } endTrigger;
   ratmr_t endTime;
} rfCoreHal_bleAdvPar_t;

#define _POSITION_bleScannerPar_pRxQ                            0
#define _TYPE_bleScannerPar_pRxQ                                dataQueue_t*
#define _POSITION_bleScannerPar_rxConfig                        4
#define _TYPE_bleScannerPar_rxConfig                            uint8_t
#define _BITPOS_bleScannerPar_rxConfig_bAutoFlushIgnored        0
#define _NBITS_bleScannerPar_rxConfig_bAutoFlushIgnored         1
#define _BITPOS_bleScannerPar_rxConfig_bAutoFlushCrcErr         1
#define _NBITS_bleScannerPar_rxConfig_bAutoFlushCrcErr          1
#define _BITPOS_bleScannerPar_rxConfig_bAutoFlushEmpty          2
#define _NBITS_bleScannerPar_rxConfig_bAutoFlushEmpty           1
#define _BITPOS_bleScannerPar_rxConfig_bIncludeLenByte          3
#define _NBITS_bleScannerPar_rxConfig_bIncludeLenByte           1
#define _BITPOS_bleScannerPar_rxConfig_bIncludeCrc              4
#define _NBITS_bleScannerPar_rxConfig_bIncludeCrc               1
#define _BITPOS_bleScannerPar_rxConfig_bAppendRssi              5
#define _NBITS_bleScannerPar_rxConfig_bAppendRssi               1
#define _BITPOS_bleScannerPar_rxConfig_bAppendStatus            6
#define _NBITS_bleScannerPar_rxConfig_bAppendStatus             1
#define _BITPOS_bleScannerPar_rxConfig_bAppendTimestamp         7
#define _NBITS_bleScannerPar_rxConfig_bAppendTimestamp          1
#define _POSITION_bleScannerPar_scanConfig                      5
#define _TYPE_bleScannerPar_scanConfig                          uint8_t
#define _BITPOS_bleScannerPar_scanConfig_scanFilterPolicy       0
#define _NBITS_bleScannerPar_scanConfig_scanFilterPolicy        1
#define _BITPOS_bleScannerPar_scanConfig_bActiveScan            1
#define _NBITS_bleScannerPar_scanConfig_bActiveScan             1
#define _BITPOS_bleScannerPar_scanConfig_deviceAddrType         2
#define _NBITS_bleScannerPar_scanConfig_deviceAddrType          1
#define _BITPOS_bleScannerPar_scanConfig_bStrictLenFilter       4
#define _NBITS_bleScannerPar_scanConfig_bStrictLenFilter        1
#define _BITPOS_bleScannerPar_scanConfig_bAutoWlIgnore          5
#define _NBITS_bleScannerPar_scanConfig_bAutoWlIgnore           1
#define _BITPOS_bleScannerPar_scanConfig_bEndOnRpt              6
#define _NBITS_bleScannerPar_scanConfig_bEndOnRpt               1
#define _POSITION_bleScannerPar_randomState                     6
#define _TYPE_bleScannerPar_randomState                         uint16_t
#define _POSITION_bleScannerPar_backoffCount                    8
#define _TYPE_bleScannerPar_backoffCount                        uint16_t
#define _POSITION_bleScannerPar_backoffPar                      10
#define _TYPE_bleScannerPar_backoffPar                          uint8_t
#define _BITPOS_bleScannerPar_backoffPar_logUpperLimit          0
#define _NBITS_bleScannerPar_backoffPar_logUpperLimit           4
#define _BITPOS_bleScannerPar_backoffPar_bLastSucceeded         4
#define _NBITS_bleScannerPar_backoffPar_bLastSucceeded          1
#define _BITPOS_bleScannerPar_backoffPar_bLastFailed            5
#define _NBITS_bleScannerPar_backoffPar_bLastFailed             1
#define _POSITION_bleScannerPar_scanReqLen                      11
#define _TYPE_bleScannerPar_scanReqLen                          uint8_t
#define _POSITION_bleScannerPar_pScanReqData                    12
#define _TYPE_bleScannerPar_pScanReqData                        uint8_t*
#define _POSITION_bleScannerPar_pDeviceAddress                  16
#define _TYPE_bleScannerPar_pDeviceAddress                      uint16_t*
#define _POSITION_bleScannerPar_pWhiteList                      20
#define _TYPE_bleScannerPar_pWhiteList                          uint32_t*
#define _POSITION_bleScannerPar_timeoutTrigger                  26
#define _TYPE_bleScannerPar_timeoutTrigger                      uint8_t
#define _BITPOS_bleScannerPar_timeoutTrigger_triggerType        0
#define _NBITS_bleScannerPar_timeoutTrigger_triggerType         4
#define _BITPOS_bleScannerPar_timeoutTrigger_bEnaCmd            4
#define _NBITS_bleScannerPar_timeoutTrigger_bEnaCmd             1
#define _BITPOS_bleScannerPar_timeoutTrigger_triggerNo          5
#define _NBITS_bleScannerPar_timeoutTrigger_triggerNo           2
#define _BITPOS_bleScannerPar_timeoutTrigger_pastTrig           7
#define _NBITS_bleScannerPar_timeoutTrigger_pastTrig            1
#define _POSITION_bleScannerPar_endTrigger                      27
#define _TYPE_bleScannerPar_endTrigger                          uint8_t
#define _BITPOS_bleScannerPar_endTrigger_triggerType            0
#define _NBITS_bleScannerPar_endTrigger_triggerType             4
#define _BITPOS_bleScannerPar_endTrigger_bEnaCmd                4
#define _NBITS_bleScannerPar_endTrigger_bEnaCmd                 1
#define _BITPOS_bleScannerPar_endTrigger_triggerNo              5
#define _NBITS_bleScannerPar_endTrigger_triggerNo               2
#define _BITPOS_bleScannerPar_endTrigger_pastTrig               7
#define _NBITS_bleScannerPar_endTrigger_pastTrig                1
#define _POSITION_bleScannerPar_timeoutTime                     28
#define _TYPE_bleScannerPar_timeoutTime                         ratmr_t
#define _POSITION_bleScannerPar_endTime                         32
#define _TYPE_bleScannerPar_endTime                             ratmr_t
#define _LAST_POSITION_bleScannerPar                            32
#define _LAST_TYPE_bleScannerPar                                ratmr_t

typedef struct {
   dataQueue_t* pRxQ;
   struct {
      uint8_t bAutoFlushIgnored:1;
      uint8_t bAutoFlushCrcErr:1;
      uint8_t bAutoFlushEmpty:1;
      uint8_t bIncludeLenByte:1;
      uint8_t bIncludeCrc:1;
      uint8_t bAppendRssi:1;
      uint8_t bAppendStatus:1;
      uint8_t bAppendTimestamp:1;
   } rxConfig;
   struct {
      uint8_t scanFilterPolicy:1;
      uint8_t bActiveScan:1;
      uint8_t deviceAddrType:1;
      uint8_t :1;
      uint8_t bStrictLenFilter:1;
      uint8_t bAutoWlIgnore:1;
      uint8_t bEndOnRpt:1;
   } scanConfig;
   uint16_t randomState;
   uint16_t backoffCount;
   struct {
      uint8_t logUpperLimit:4;
      uint8_t bLastSucceeded:1;
      uint8_t bLastFailed:1;
   } backoffPar;
   uint8_t scanReqLen;
   uint8_t* pScanReqData;
   uint16_t* pDeviceAddress;
   uint32_t* pWhiteList;
   uint16_t __dummy0;
   struct {
      uint8_t triggerType:4;
      uint8_t bEnaCmd:1;
      uint8_t triggerNo:2;
      uint8_t pastTrig:1;
   } timeoutTrigger;
   struct {
      uint8_t triggerType:4;
      uint8_t bEnaCmd:1;
      uint8_t triggerNo:2;
      uint8_t pastTrig:1;
   } endTrigger;
   ratmr_t timeoutTime;
   ratmr_t endTime;
} rfCoreHal_bleScannerPar_t;

#define _POSITION_bleInitiatorPar_pRxQ                          0
#define _TYPE_bleInitiatorPar_pRxQ                              dataQueue_t*
#define _POSITION_bleInitiatorPar_rxConfig                      4
#define _TYPE_bleInitiatorPar_rxConfig                          uint8_t
#define _BITPOS_bleInitiatorPar_rxConfig_bAutoFlushIgnored      0
#define _NBITS_bleInitiatorPar_rxConfig_bAutoFlushIgnored       1
#define _BITPOS_bleInitiatorPar_rxConfig_bAutoFlushCrcErr       1
#define _NBITS_bleInitiatorPar_rxConfig_bAutoFlushCrcErr        1
#define _BITPOS_bleInitiatorPar_rxConfig_bAutoFlushEmpty        2
#define _NBITS_bleInitiatorPar_rxConfig_bAutoFlushEmpty         1
#define _BITPOS_bleInitiatorPar_rxConfig_bIncludeLenByte        3
#define _NBITS_bleInitiatorPar_rxConfig_bIncludeLenByte         1
#define _BITPOS_bleInitiatorPar_rxConfig_bIncludeCrc            4
#define _NBITS_bleInitiatorPar_rxConfig_bIncludeCrc             1
#define _BITPOS_bleInitiatorPar_rxConfig_bAppendRssi            5
#define _NBITS_bleInitiatorPar_rxConfig_bAppendRssi             1
#define _BITPOS_bleInitiatorPar_rxConfig_bAppendStatus          6
#define _NBITS_bleInitiatorPar_rxConfig_bAppendStatus           1
#define _BITPOS_bleInitiatorPar_rxConfig_bAppendTimestamp       7
#define _NBITS_bleInitiatorPar_rxConfig_bAppendTimestamp        1
#define _POSITION_bleInitiatorPar_initConfig                    5
#define _TYPE_bleInitiatorPar_initConfig                        uint8_t
#define _BITPOS_bleInitiatorPar_initConfig_bUseWhiteList        0
#define _NBITS_bleInitiatorPar_initConfig_bUseWhiteList         1
#define _BITPOS_bleInitiatorPar_initConfig_bDynamicWinOffset    1
#define _NBITS_bleInitiatorPar_initConfig_bDynamicWinOffset     1
#define _BITPOS_bleInitiatorPar_initConfig_deviceAddrType       2
#define _NBITS_bleInitiatorPar_initConfig_deviceAddrType        1
#define _BITPOS_bleInitiatorPar_initConfig_peerAddrType         3
#define _NBITS_bleInitiatorPar_initConfig_peerAddrType          1
#define _BITPOS_bleInitiatorPar_initConfig_bStrictLenFilter     4
#define _NBITS_bleInitiatorPar_initConfig_bStrictLenFilter      1
#define _POSITION_bleInitiatorPar_connectReqLen                 7
#define _TYPE_bleInitiatorPar_connectReqLen                     uint8_t
#define _POSITION_bleInitiatorPar_pConnectReqData               8
#define _TYPE_bleInitiatorPar_pConnectReqData                   uint8_t*
#define _POSITION_bleInitiatorPar_pDeviceAddress                12
#define _TYPE_bleInitiatorPar_pDeviceAddress                    uint16_t*
#define _POSITION_bleInitiatorPar_pWhiteList                    16
#define _TYPE_bleInitiatorPar_pWhiteList                        uint32_t*
#define _POSITION_bleInitiatorPar_connectTime                   20
#define _TYPE_bleInitiatorPar_connectTime                       ratmr_t
#define _POSITION_bleInitiatorPar_timeoutTrigger                26
#define _TYPE_bleInitiatorPar_timeoutTrigger                    uint8_t
#define _BITPOS_bleInitiatorPar_timeoutTrigger_triggerType      0
#define _NBITS_bleInitiatorPar_timeoutTrigger_triggerType       4
#define _BITPOS_bleInitiatorPar_timeoutTrigger_bEnaCmd          4
#define _NBITS_bleInitiatorPar_timeoutTrigger_bEnaCmd           1
#define _BITPOS_bleInitiatorPar_timeoutTrigger_triggerNo        5
#define _NBITS_bleInitiatorPar_timeoutTrigger_triggerNo         2
#define _BITPOS_bleInitiatorPar_timeoutTrigger_pastTrig         7
#define _NBITS_bleInitiatorPar_timeoutTrigger_pastTrig          1
#define _POSITION_bleInitiatorPar_endTrigger                    27
#define _TYPE_bleInitiatorPar_endTrigger                        uint8_t
#define _BITPOS_bleInitiatorPar_endTrigger_triggerType          0
#define _NBITS_bleInitiatorPar_endTrigger_triggerType           4
#define _BITPOS_bleInitiatorPar_endTrigger_bEnaCmd              4
#define _NBITS_bleInitiatorPar_endTrigger_bEnaCmd               1
#define _BITPOS_bleInitiatorPar_endTrigger_triggerNo            5
#define _NBITS_bleInitiatorPar_endTrigger_triggerNo             2
#define _BITPOS_bleInitiatorPar_endTrigger_pastTrig             7
#define _NBITS_bleInitiatorPar_endTrigger_pastTrig              1
#define _POSITION_bleInitiatorPar_timeoutTime                   28
#define _TYPE_bleInitiatorPar_timeoutTime                       ratmr_t
#define _POSITION_bleInitiatorPar_endTime                       32
#define _TYPE_bleInitiatorPar_endTime                           ratmr_t
#define _LAST_POSITION_bleInitiatorPar                          32
#define _LAST_TYPE_bleInitiatorPar                              ratmr_t

typedef struct {
   dataQueue_t* pRxQ;
   struct {
      uint8_t bAutoFlushIgnored:1;
      uint8_t bAutoFlushCrcErr:1;
      uint8_t bAutoFlushEmpty:1;
      uint8_t bIncludeLenByte:1;
      uint8_t bIncludeCrc:1;
      uint8_t bAppendRssi:1;
      uint8_t bAppendStatus:1;
      uint8_t bAppendTimestamp:1;
   } rxConfig;
   struct {
      uint8_t bUseWhiteList:1;
      uint8_t bDynamicWinOffset:1;
      uint8_t deviceAddrType:1;
      uint8_t peerAddrType:1;
      uint8_t bStrictLenFilter:1;
   } initConfig;
   uint8_t __dummy0;
   uint8_t connectReqLen;
   uint8_t* pConnectReqData;
   uint16_t* pDeviceAddress;
   uint32_t* pWhiteList;
   ratmr_t connectTime;
   uint16_t __dummy1;
   struct {
      uint8_t triggerType:4;
      uint8_t bEnaCmd:1;
      uint8_t triggerNo:2;
      uint8_t pastTrig:1;
   } timeoutTrigger;
   struct {
      uint8_t triggerType:4;
      uint8_t bEnaCmd:1;
      uint8_t triggerNo:2;
      uint8_t pastTrig:1;
   } endTrigger;
   ratmr_t timeoutTime;
   ratmr_t endTime;
} rfCoreHal_bleInitiatorPar_t;

#define _POSITION_bleGenericRxPar_pRxQ                          0
#define _TYPE_bleGenericRxPar_pRxQ                              dataQueue_t*
#define _POSITION_bleGenericRxPar_rxConfig                      4
#define _TYPE_bleGenericRxPar_rxConfig                          uint8_t
#define _BITPOS_bleGenericRxPar_rxConfig_bAutoFlushIgnored      0
#define _NBITS_bleGenericRxPar_rxConfig_bAutoFlushIgnored       1
#define _BITPOS_bleGenericRxPar_rxConfig_bAutoFlushCrcErr       1
#define _NBITS_bleGenericRxPar_rxConfig_bAutoFlushCrcErr        1
#define _BITPOS_bleGenericRxPar_rxConfig_bAutoFlushEmpty        2
#define _NBITS_bleGenericRxPar_rxConfig_bAutoFlushEmpty         1
#define _BITPOS_bleGenericRxPar_rxConfig_bIncludeLenByte        3
#define _NBITS_bleGenericRxPar_rxConfig_bIncludeLenByte         1
#define _BITPOS_bleGenericRxPar_rxConfig_bIncludeCrc            4
#define _NBITS_bleGenericRxPar_rxConfig_bIncludeCrc             1
#define _BITPOS_bleGenericRxPar_rxConfig_bAppendRssi            5
#define _NBITS_bleGenericRxPar_rxConfig_bAppendRssi             1
#define _BITPOS_bleGenericRxPar_rxConfig_bAppendStatus          6
#define _NBITS_bleGenericRxPar_rxConfig_bAppendStatus           1
#define _BITPOS_bleGenericRxPar_rxConfig_bAppendTimestamp       7
#define _NBITS_bleGenericRxPar_rxConfig_bAppendTimestamp        1
#define _POSITION_bleGenericRxPar_bRepeat                       5
#define _TYPE_bleGenericRxPar_bRepeat                           uint8_t
#define _POSITION_bleGenericRxPar_accessAddress                 8
#define _TYPE_bleGenericRxPar_accessAddress                     uint32_t
#define _POSITION_bleGenericRxPar_crcInit                       12
#define _TYPE_bleGenericRxPar_crcInit                           uint32_t
#define _POSITION_bleGenericRxPar_endTrigger                    15
#define _TYPE_bleGenericRxPar_endTrigger                        uint8_t
#define _BITPOS_bleGenericRxPar_endTrigger_triggerType          0
#define _NBITS_bleGenericRxPar_endTrigger_triggerType           4
#define _BITPOS_bleGenericRxPar_endTrigger_bEnaCmd              4
#define _NBITS_bleGenericRxPar_endTrigger_bEnaCmd               1
#define _BITPOS_bleGenericRxPar_endTrigger_triggerNo            5
#define _NBITS_bleGenericRxPar_endTrigger_triggerNo             2
#define _BITPOS_bleGenericRxPar_endTrigger_pastTrig             7
#define _NBITS_bleGenericRxPar_endTrigger_pastTrig              1
#define _POSITION_bleGenericRxPar_endTime                       16
#define _TYPE_bleGenericRxPar_endTime                           ratmr_t
#define _LAST_POSITION_bleGenericRxPar                          16
#define _LAST_TYPE_bleGenericRxPar                              ratmr_t

typedef struct {
   dataQueue_t* pRxQ;
   struct {
      uint8_t bAutoFlushIgnored:1;
      uint8_t bAutoFlushCrcErr:1;
      uint8_t bAutoFlushEmpty:1;
      uint8_t bIncludeLenByte:1;
      uint8_t bIncludeCrc:1;
      uint8_t bAppendRssi:1;
      uint8_t bAppendStatus:1;
      uint8_t bAppendTimestamp:1;
   } rxConfig;
   uint8_t bRepeat;
   uint16_t __dummy0;
   uint32_t accessAddress;
   uint32_t crcInit;
   ratmr_t endTime;
} rfCoreHal_bleGenericRxPar_t;

#define _POSITION_bleTxTestPar_numPackets                       0
#define _TYPE_bleTxTestPar_numPackets                           uint16_t
#define _POSITION_bleTxTestPar_payloadLength                    2
#define _TYPE_bleTxTestPar_payloadLength                        uint8_t
#define _POSITION_bleTxTestPar_packetType                       3
#define _TYPE_bleTxTestPar_packetType                           uint8_t
#define _POSITION_bleTxTestPar_period                           4
#define _TYPE_bleTxTestPar_period                               ratmr_t
#define _POSITION_bleTxTestPar_config                           8
#define _TYPE_bleTxTestPar_config                               uint8_t
#define _BITPOS_bleTxTestPar_config_bOverrideDefault            0
#define _NBITS_bleTxTestPar_config_bOverrideDefault             1
#define _BITPOS_bleTxTestPar_config_bUsePrbs9                   1
#define _NBITS_bleTxTestPar_config_bUsePrbs9                    1
#define _BITPOS_bleTxTestPar_config_bUsePrbs15                  2
#define _NBITS_bleTxTestPar_config_bUsePrbs15                   1
#define _POSITION_bleTxTestPar_byteVal                          9
#define _TYPE_bleTxTestPar_byteVal                              uint8_t
#define _POSITION_bleTxTestPar_endTrigger                       11
#define _TYPE_bleTxTestPar_endTrigger                           uint8_t
#define _BITPOS_bleTxTestPar_endTrigger_triggerType             0
#define _NBITS_bleTxTestPar_endTrigger_triggerType              4
#define _BITPOS_bleTxTestPar_endTrigger_bEnaCmd                 4
#define _NBITS_bleTxTestPar_endTrigger_bEnaCmd                  1
#define _BITPOS_bleTxTestPar_endTrigger_triggerNo               5
#define _NBITS_bleTxTestPar_endTrigger_triggerNo                2
#define _BITPOS_bleTxTestPar_endTrigger_pastTrig                7
#define _NBITS_bleTxTestPar_endTrigger_pastTrig                 1
#define _POSITION_bleTxTestPar_endTime                          12
#define _TYPE_bleTxTestPar_endTime                              ratmr_t
#define _LAST_POSITION_bleTxTestPar                             12
#define _LAST_TYPE_bleTxTestPar                                 ratmr_t

typedef struct {
   uint16_t numPackets;
   uint8_t payloadLength;
   uint8_t packetType;
   ratmr_t period;
   struct {
      uint8_t bOverrideDefault:1;
      uint8_t bUsePrbs9:1;
      uint8_t bUsePrbs15:1;
   } config;
   uint8_t byteVal;
   uint8_t __dummy0;
   struct {
      uint8_t triggerType:4;
      uint8_t bEnaCmd:1;
      uint8_t triggerNo:2;
      uint8_t pastTrig:1;
   } endTrigger;
   ratmr_t endTime;
} rfCoreHal_bleTxTestPar_t;

#define _POSITION_bleMasterSlaveOutput_nTx                      0
#define _TYPE_bleMasterSlaveOutput_nTx                          uint8_t
#define _POSITION_bleMasterSlaveOutput_nTxAck                   1
#define _TYPE_bleMasterSlaveOutput_nTxAck                       uint8_t
#define _POSITION_bleMasterSlaveOutput_nTxCtrl                  2
#define _TYPE_bleMasterSlaveOutput_nTxCtrl                      uint8_t
#define _POSITION_bleMasterSlaveOutput_nTxCtrlAck               3
#define _TYPE_bleMasterSlaveOutput_nTxCtrlAck                   uint8_t
#define _POSITION_bleMasterSlaveOutput_nTxCtrlAckAck            4
#define _TYPE_bleMasterSlaveOutput_nTxCtrlAckAck                uint8_t
#define _POSITION_bleMasterSlaveOutput_nTxRetrans               5
#define _TYPE_bleMasterSlaveOutput_nTxRetrans                   uint8_t
#define _POSITION_bleMasterSlaveOutput_nTxEntryDone             6
#define _TYPE_bleMasterSlaveOutput_nTxEntryDone                 uint8_t
#define _POSITION_bleMasterSlaveOutput_nRxOk                    7
#define _TYPE_bleMasterSlaveOutput_nRxOk                        uint8_t
#define _POSITION_bleMasterSlaveOutput_nRxCtrl                  8
#define _TYPE_bleMasterSlaveOutput_nRxCtrl                      uint8_t
#define _POSITION_bleMasterSlaveOutput_nRxCtrlAck               9
#define _TYPE_bleMasterSlaveOutput_nRxCtrlAck                   uint8_t
#define _POSITION_bleMasterSlaveOutput_nRxNok                   10
#define _TYPE_bleMasterSlaveOutput_nRxNok                       uint8_t
#define _POSITION_bleMasterSlaveOutput_nRxIgnored               11
#define _TYPE_bleMasterSlaveOutput_nRxIgnored                   uint8_t
#define _POSITION_bleMasterSlaveOutput_nRxEmpty                 12
#define _TYPE_bleMasterSlaveOutput_nRxEmpty                     uint8_t
#define _POSITION_bleMasterSlaveOutput_nRxBufFull               13
#define _TYPE_bleMasterSlaveOutput_nRxBufFull                   uint8_t
#define _POSITION_bleMasterSlaveOutput_lastRssi                 14
#define _TYPE_bleMasterSlaveOutput_lastRssi                     int8_t
#define _POSITION_bleMasterSlaveOutput_pktStatus                15
#define _TYPE_bleMasterSlaveOutput_pktStatus                    uint8_t
#define _BITPOS_bleMasterSlaveOutput_pktStatus_bTimeStampValid  0
#define _NBITS_bleMasterSlaveOutput_pktStatus_bTimeStampValid   1
#define _BITPOS_bleMasterSlaveOutput_pktStatus_bLastCrcErr      1
#define _NBITS_bleMasterSlaveOutput_pktStatus_bLastCrcErr       1
#define _BITPOS_bleMasterSlaveOutput_pktStatus_bLastIgnored     2
#define _NBITS_bleMasterSlaveOutput_pktStatus_bLastIgnored      1
#define _BITPOS_bleMasterSlaveOutput_pktStatus_bLastEmpty       3
#define _NBITS_bleMasterSlaveOutput_pktStatus_bLastEmpty        1
#define _BITPOS_bleMasterSlaveOutput_pktStatus_bLastCtrl        4
#define _NBITS_bleMasterSlaveOutput_pktStatus_bLastCtrl         1
#define _BITPOS_bleMasterSlaveOutput_pktStatus_bLastMd          5
#define _NBITS_bleMasterSlaveOutput_pktStatus_bLastMd           1
#define _BITPOS_bleMasterSlaveOutput_pktStatus_bLastAck         6
#define _NBITS_bleMasterSlaveOutput_pktStatus_bLastAck          1
#define _POSITION_bleMasterSlaveOutput_timeStamp                16
#define _TYPE_bleMasterSlaveOutput_timeStamp                    ratmr_t
#define _LAST_POSITION_bleMasterSlaveOutput                     16
#define _LAST_TYPE_bleMasterSlaveOutput                         ratmr_t

typedef struct {
   uint8_t nTx;
   uint8_t nTxAck;
   uint8_t nTxCtrl;
   uint8_t nTxCtrlAck;
   uint8_t nTxCtrlAckAck;
   uint8_t nTxRetrans;
   uint8_t nTxEntryDone;
   uint8_t nRxOk;
   uint8_t nRxCtrl;
   uint8_t nRxCtrlAck;
   uint8_t nRxNok;
   uint8_t nRxIgnored;
   uint8_t nRxEmpty;
   uint8_t nRxBufFull;
   int8_t lastRssi;
   struct {
      uint8_t bTimeStampValid:1;
      uint8_t bLastCrcErr:1;
      uint8_t bLastIgnored:1;
      uint8_t bLastEmpty:1;
      uint8_t bLastCtrl:1;
      uint8_t bLastMd:1;
      uint8_t bLastAck:1;
   } pktStatus;
   ratmr_t timeStamp;
} rfCoreHal_bleMasterSlaveOutput_t;

#define _POSITION_bleAdvOutput_nTxAdvInd                        0
#define _TYPE_bleAdvOutput_nTxAdvInd                            uint16_t
#define _POSITION_bleAdvOutput_nTxScanRsp                       2
#define _TYPE_bleAdvOutput_nTxScanRsp                           uint8_t
#define _POSITION_bleAdvOutput_nRxScanReq                       3
#define _TYPE_bleAdvOutput_nRxScanReq                           uint8_t
#define _POSITION_bleAdvOutput_nRxConnectReq                    4
#define _TYPE_bleAdvOutput_nRxConnectReq                        uint8_t
#define _POSITION_bleAdvOutput_nRxNok                           6
#define _TYPE_bleAdvOutput_nRxNok                               uint16_t
#define _POSITION_bleAdvOutput_nRxIgnored                       8
#define _TYPE_bleAdvOutput_nRxIgnored                           uint16_t
#define _POSITION_bleAdvOutput_nRxBufFull                       10
#define _TYPE_bleAdvOutput_nRxBufFull                           uint8_t
#define _POSITION_bleAdvOutput_lastRssi                         11
#define _TYPE_bleAdvOutput_lastRssi                             int8_t
#define _POSITION_bleAdvOutput_timeStamp                        12
#define _TYPE_bleAdvOutput_timeStamp                            ratmr_t
#define _LAST_POSITION_bleAdvOutput                             12
#define _LAST_TYPE_bleAdvOutput                                 ratmr_t

typedef struct {
   uint16_t nTxAdvInd;
   uint8_t nTxScanRsp;
   uint8_t nRxScanReq;
   uint8_t nRxConnectReq;
   uint8_t __dummy0;
   uint16_t nRxNok;
   uint16_t nRxIgnored;
   uint8_t nRxBufFull;
   int8_t lastRssi;
   ratmr_t timeStamp;
} rfCoreHal_bleAdvOutput_t;

#define _POSITION_bleScannerOutput_nTxScanReq                   0
#define _TYPE_bleScannerOutput_nTxScanReq                       uint16_t
#define _POSITION_bleScannerOutput_nBackedOffScanReq            2
#define _TYPE_bleScannerOutput_nBackedOffScanReq                uint16_t
#define _POSITION_bleScannerOutput_nRxAdvOk                     4
#define _TYPE_bleScannerOutput_nRxAdvOk                         uint16_t
#define _POSITION_bleScannerOutput_nRxAdvIgnored                6
#define _TYPE_bleScannerOutput_nRxAdvIgnored                    uint16_t
#define _POSITION_bleScannerOutput_nRxAdvNok                    8
#define _TYPE_bleScannerOutput_nRxAdvNok                        uint16_t
#define _POSITION_bleScannerOutput_nRxScanRspOk                 10
#define _TYPE_bleScannerOutput_nRxScanRspOk                     uint16_t
#define _POSITION_bleScannerOutput_nRxScanRspIgnored            12
#define _TYPE_bleScannerOutput_nRxScanRspIgnored                uint16_t
#define _POSITION_bleScannerOutput_nRxScanRspNok                14
#define _TYPE_bleScannerOutput_nRxScanRspNok                    uint16_t
#define _POSITION_bleScannerOutput_nRxAdvBufFull                16
#define _TYPE_bleScannerOutput_nRxAdvBufFull                    uint8_t
#define _POSITION_bleScannerOutput_nRxScanRspBufFull            17
#define _TYPE_bleScannerOutput_nRxScanRspBufFull                uint8_t
#define _POSITION_bleScannerOutput_lastRssi                     18
#define _TYPE_bleScannerOutput_lastRssi                         int8_t
#define _POSITION_bleScannerOutput_timeStamp                    20
#define _TYPE_bleScannerOutput_timeStamp                        ratmr_t
#define _LAST_POSITION_bleScannerOutput                         20
#define _LAST_TYPE_bleScannerOutput                             ratmr_t

typedef struct {
   uint16_t nTxScanReq;
   uint16_t nBackedOffScanReq;
   uint16_t nRxAdvOk;
   uint16_t nRxAdvIgnored;
   uint16_t nRxAdvNok;
   uint16_t nRxScanRspOk;
   uint16_t nRxScanRspIgnored;
   uint16_t nRxScanRspNok;
   uint8_t nRxAdvBufFull;
   uint8_t nRxScanRspBufFull;
   int8_t lastRssi;
   uint8_t __dummy0;
   ratmr_t timeStamp;
} rfCoreHal_bleScannerOutput_t;

#define _POSITION_bleInitiatorOutput_nTxConnectReq              0
#define _TYPE_bleInitiatorOutput_nTxConnectReq                  uint8_t
#define _POSITION_bleInitiatorOutput_nRxAdvOk                   1
#define _TYPE_bleInitiatorOutput_nRxAdvOk                       uint8_t
#define _POSITION_bleInitiatorOutput_nRxAdvIgnored              2
#define _TYPE_bleInitiatorOutput_nRxAdvIgnored                  uint16_t
#define _POSITION_bleInitiatorOutput_nRxAdvNok                  4
#define _TYPE_bleInitiatorOutput_nRxAdvNok                      uint16_t
#define _POSITION_bleInitiatorOutput_nRxAdvBufFull              6
#define _TYPE_bleInitiatorOutput_nRxAdvBufFull                  uint8_t
#define _POSITION_bleInitiatorOutput_lastRssi                   7
#define _TYPE_bleInitiatorOutput_lastRssi                       int8_t
#define _POSITION_bleInitiatorOutput_timeStamp                  8
#define _TYPE_bleInitiatorOutput_timeStamp                      ratmr_t
#define _LAST_POSITION_bleInitiatorOutput                       8
#define _LAST_TYPE_bleInitiatorOutput                           ratmr_t

typedef struct {
   uint8_t nTxConnectReq;
   uint8_t nRxAdvOk;
   uint16_t nRxAdvIgnored;
   uint16_t nRxAdvNok;
   uint8_t nRxAdvBufFull;
   int8_t lastRssi;
   ratmr_t timeStamp;
} rfCoreHal_bleInitiatorOutput_t;

#define _POSITION_bleGenericRxOutput_nRxOk                      0
#define _TYPE_bleGenericRxOutput_nRxOk                          uint16_t
#define _POSITION_bleGenericRxOutput_nRxNok                     2
#define _TYPE_bleGenericRxOutput_nRxNok                         uint16_t
#define _POSITION_bleGenericRxOutput_nRxBufFull                 4
#define _TYPE_bleGenericRxOutput_nRxBufFull                     uint16_t
#define _POSITION_bleGenericRxOutput_lastRssi                   6
#define _TYPE_bleGenericRxOutput_lastRssi                       int8_t
#define _POSITION_bleGenericRxOutput_timeStamp                  8
#define _TYPE_bleGenericRxOutput_timeStamp                      ratmr_t
#define _LAST_POSITION_bleGenericRxOutput                       8
#define _LAST_TYPE_bleGenericRxOutput                           ratmr_t

typedef struct {
   uint16_t nRxOk;
   uint16_t nRxNok;
   uint16_t nRxBufFull;
   int8_t lastRssi;
   uint8_t __dummy0;
   ratmr_t timeStamp;
} rfCoreHal_bleGenericRxOutput_t;

#define _POSITION_bleTxTestOutput_nTx                           0
#define _TYPE_bleTxTestOutput_nTx                               uint16_t
#define _LAST_POSITION_bleTxTestOutput                          0
#define _LAST_TYPE_bleTxTestOutput                              uint16_t

typedef struct {
   uint16_t nTx;
} rfCoreHal_bleTxTestOutput_t;

#define _POSITION_bleWhiteListEntry_size                        0
#define _TYPE_bleWhiteListEntry_size                            uint8_t
#define _POSITION_bleWhiteListEntry_conf                        1
#define _TYPE_bleWhiteListEntry_conf                            uint8_t
#define _BITPOS_bleWhiteListEntry_conf_bEnable                  0
#define _NBITS_bleWhiteListEntry_conf_bEnable                   1
#define _BITPOS_bleWhiteListEntry_conf_addrType                 1
#define _NBITS_bleWhiteListEntry_conf_addrType                  1
#define _BITPOS_bleWhiteListEntry_conf_bWlIgn                   2
#define _NBITS_bleWhiteListEntry_conf_bWlIgn                    1
#define _POSITION_bleWhiteListEntry_address                     2
#define _TYPE_bleWhiteListEntry_address                         uint16_t
#define _POSITION_bleWhiteListEntry_addressHi                   4
#define _TYPE_bleWhiteListEntry_addressHi                       uint32_t
#define _LAST_POSITION_bleWhiteListEntry                        4
#define _LAST_TYPE_bleWhiteListEntry                            uint32_t

typedef struct {
   uint8_t size;
   struct {
      uint8_t bEnable:1;
      uint8_t addrType:1;
      uint8_t bWlIgn:1;
   } conf;
   uint16_t address;
   uint32_t addressHi;
} rfCoreHal_bleWhiteListEntry_t;

#define _POSITION_bleWhiteListEntryWords_entryLo                0
#define _TYPE_bleWhiteListEntryWords_entryLo                    uint32_t
#define _BITPOS_bleWhiteListEntryWords_entryLo_size             0
#define _NBITS_bleWhiteListEntryWords_entryLo_size              8
#define _BITPOS_bleWhiteListEntryWords_entryLo_conf             8
#define _NBITS_bleWhiteListEntryWords_entryLo_conf              8
#define _BITPOS_bleWhiteListEntryWords_entryLo_bEnable          8
#define _NBITS_bleWhiteListEntryWords_entryLo_bEnable           1
#define _BITPOS_bleWhiteListEntryWords_entryLo_addrType         9
#define _NBITS_bleWhiteListEntryWords_entryLo_addrType          1
#define _BITPOS_bleWhiteListEntryWords_entryLo_bWlIgn           10
#define _NBITS_bleWhiteListEntryWords_entryLo_bWlIgn            1
#define _BITPOS_bleWhiteListEntryWords_entryLo_addressLo        16
#define _NBITS_bleWhiteListEntryWords_entryLo_addressLo         16
#define _POSITION_bleWhiteListEntryWords_addressHi              4
#define _TYPE_bleWhiteListEntryWords_addressHi                  uint32_t
#define _LAST_POSITION_bleWhiteListEntryWords                   4
#define _LAST_TYPE_bleWhiteListEntryWords                       uint32_t

typedef struct {
   struct {
      uint32_t size:8;
      uint32_t conf:8;
      uint32_t addressLo:16;
   } entryLo;
   uint32_t addressHi;
} rfCoreHal_bleWhiteListEntryWords_t;

#define _POSITION_bleRxStatus_status                            0
#define _TYPE_bleRxStatus_status                                uint8_t
#define _BITPOS_bleRxStatus_status_channel                      0
#define _NBITS_bleRxStatus_status_channel                       6
#define _BITPOS_bleRxStatus_status_bIgnore                      6
#define _NBITS_bleRxStatus_status_bIgnore                       1
#define _BITPOS_bleRxStatus_status_bCrcErr                      7
#define _NBITS_bleRxStatus_status_bCrcErr                       1
#define _LAST_POSITION_bleRxStatus                              0
#define _LAST_TYPE_bleRxStatus                                  uint8_t

typedef struct {
   struct {
      uint8_t channel:6;
      uint8_t bIgnore:1;
      uint8_t bCrcErr:1;
   } status;
} rfCoreHal_bleRxStatus_t;

#endif
