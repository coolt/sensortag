//------------------------------------------------------------------------------
// TI Confidential - NDA Restrictions
//
// Copyright (c) 2011 Texas Instruments, Inc.
//
//    This is an unpublished work created in the year stated above.
//    Texas Instruments owns all rights in and to this work and
//    intends to maintain and protect it as an unpublished copyright.
//    In the event of either inadvertent or deliberate publication,
//    the above stated date shall be treated as the year of first
//    publication. In the event of such publication, Texas Instruments
//    intends to enforce its rights in the work under the copyright
//    laws as a published work.
//
//------------------------------------------------------------------------------
///
/// \file            data_entry.h
/// \brief           Definitions of API for data exchange
///
///                  This file is generated by create_command.pl
///
/// \author          Low Power RF Wireless Business Unit
///                  Helge Coward (h.coward@ti.com)
///
/// \date            Thu Nov 17 10:26:10 CET 2011
///
//------------------------------------------------------------------------------

#ifndef __DATA_ENTRY_H
#define __DATA_ENTRY_H

#include <stdint.h>
#include "mailbox.h"

#define _POSITION_dataEntry_pNextEntry                          0
#define _TYPE_dataEntry_pNextEntry                              uint8_t*
#define _POSITION_dataEntry_status                              4
#define _TYPE_dataEntry_status                                  uint8_t
#define _POSITION_dataEntry_config                              5
#define _TYPE_dataEntry_config                                  uint8_t
#define _BITPOS_dataEntry_config_type                           0
#define _NBITS_dataEntry_config_type                            2
#define _BITPOS_dataEntry_config_lenSz                          2
#define _NBITS_dataEntry_config_lenSz                           2
#define _BITPOS_dataEntry_config_irqIntv                        4
#define _NBITS_dataEntry_config_irqIntv                         4
#define _POSITION_dataEntry_length                              6
#define _TYPE_dataEntry_length                                  uint16_t
#define _POSITION_dataEntry_data                                8
#define _TYPE_dataEntry_data                                    uint8_t
#define _POSITION_dataEntry_pData                               8
#define _TYPE_dataEntry_pData                                   uint8_t*
#define _POSITION_dataEntry_numElements                         8
#define _TYPE_dataEntry_numElements                             uint16_t
#define _POSITION_dataEntry_pktStatus                           8
#define _TYPE_dataEntry_pktStatus                               uint16_t
#define _BITPOS_dataEntry_pktStatus_numElements                 0
#define _NBITS_dataEntry_pktStatus_numElements                  13
#define _BITPOS_dataEntry_pktStatus_bEntryOpen                  13
#define _NBITS_dataEntry_pktStatus_bEntryOpen                   1
#define _BITPOS_dataEntry_pktStatus_bFirstCont                  14
#define _NBITS_dataEntry_pktStatus_bFirstCont                   1
#define _BITPOS_dataEntry_pktStatus_bLastCont                   15
#define _NBITS_dataEntry_pktStatus_bLastCont                    1
#define _POSITION_dataEntry_nextIndex                           10
#define _TYPE_dataEntry_nextIndex                               uint16_t
#define _POSITION_dataEntry_rxData                              12
#define _TYPE_dataEntry_rxData                                  uint8_t
#define _LAST_POSITION_dataEntry                                12
#define _LAST_TYPE_dataEntry                                    uint8_t

typedef struct {
   uint8_t* pNextEntry;
   uint8_t status;
   struct {
      uint8_t type:2;
      uint8_t lenSz:2;
      uint8_t irqIntv:4;
   } config;
   uint16_t length;
   uint8_t data;
   uint8_t __dummy0;
   uint16_t nextIndex;
   uint8_t rxData;
} rfCoreHal_dataEntry_t;

#endif
