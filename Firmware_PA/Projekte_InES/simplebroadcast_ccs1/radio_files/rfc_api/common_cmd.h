//------------------------------------------------------------------------------
// TI Confidential - NDA Restrictions
//
// Copyright (c) 2011 Texas Instruments, Inc.
//
//    This is an unpublished work created in the year stated above.
//    Texas Instruments owns all rights in and to this work and
//    intends to maintain and protect it as an unpublished copyright.
//    In the event of either inadvertent or deliberate publication,
//    the above stated date shall be treated as the year of first
//    publication. In the event of such publication, Texas Instruments
//    intends to enforce its rights in the work under the copyright
//    laws as a published work.
//
//------------------------------------------------------------------------------
///
/// \file            common_cmd.h
/// \brief           Definitions of API for common/generic commands 
///
///                  This file is generated by create_command.pl
///
/// \author          Low Power RF Wireless Business Unit
///                  Helge Coward (h.coward@ti.com)
///
/// \date            Thu Nov 17 10:26:10 CET 2011
///
//------------------------------------------------------------------------------

#ifndef __COMMON_CMD_H
#define __COMMON_CMD_H

#include <stdint.h>
#include "mailbox.h"

#define _POSITION_command_commandNo                             0
#define _TYPE_command_commandNo                                 uint16_t
#define _LAST_POSITION_command                                  0
#define _LAST_TYPE_command                                      uint16_t

typedef struct {
   uint16_t commandNo;
} rfCoreHal_command_t;

#define _POSITION_radioOp_commandNo                             0
#define _TYPE_radioOp_commandNo                                 uint16_t
#define _POSITION_radioOp_status                                2
#define _TYPE_radioOp_status                                    uint16_t
#define _POSITION_radioOp_pNextOp                               4
#define _TYPE_radioOp_pNextOp                                   uint8_t*
#define _POSITION_radioOp_startTime                             8
#define _TYPE_radioOp_startTime                                 ratmr_t
#define _POSITION_radioOp_startTrigger                          12
#define _TYPE_radioOp_startTrigger                              uint8_t
#define _BITPOS_radioOp_startTrigger_triggerType                0
#define _NBITS_radioOp_startTrigger_triggerType                 4
#define _BITPOS_radioOp_startTrigger_bEnaCmd                    4
#define _NBITS_radioOp_startTrigger_bEnaCmd                     1
#define _BITPOS_radioOp_startTrigger_triggerNo                  5
#define _NBITS_radioOp_startTrigger_triggerNo                   2
#define _BITPOS_radioOp_startTrigger_pastTrig                   7
#define _NBITS_radioOp_startTrigger_pastTrig                    1
#define _POSITION_radioOp_condition                             13
#define _TYPE_radioOp_condition                                 uint8_t
#define _BITPOS_radioOp_condition_rule                          0
#define _NBITS_radioOp_condition_rule                           4
#define _BITPOS_radioOp_condition_nSkip                         4
#define _NBITS_radioOp_condition_nSkip                          4
#define _LAST_POSITION_radioOp                                  13
#define _LAST_TYPE_radioOp                                      uint8_t

typedef struct {
   uint16_t commandNo;
   uint16_t status;
   uint8_t* pNextOp;
   ratmr_t startTime;
   struct {
      uint8_t triggerType:4;
      uint8_t bEnaCmd:1;
      uint8_t triggerNo:2;
      uint8_t pastTrig:1;
   } startTrigger;
   struct {
      uint8_t rule:4;
      uint8_t nSkip:4;
   } condition;
} rfCoreHal_radioOp_t;

#define CMD_NOP                                                 0x0801
#define _LAST_POSITION_CMD_NOP                                  13
#define _LAST_TYPE_CMD_NOP                                      uint8_t

typedef struct {
   uint16_t commandNo;
   uint16_t status;
   uint8_t* pNextOp;
   ratmr_t startTime;
   struct {
      uint8_t triggerType:4;
      uint8_t bEnaCmd:1;
      uint8_t triggerNo:2;
      uint8_t pastTrig:1;
   } startTrigger;
   struct {
      uint8_t rule:4;
      uint8_t nSkip:4;
   } condition;
} rfCoreHal_CMD_NOP_t;

#define CMD_RADIO_SETUP                                         0x0802
#define _POSITION_CMD_RADIO_SETUP_mode                          14
#define _TYPE_CMD_RADIO_SETUP_mode                              uint8_t
#define _POSITION_CMD_RADIO_SETUP_config                        16
#define _TYPE_CMD_RADIO_SETUP_config                            uint16_t
#define _BITPOS_CMD_RADIO_SETUP_config_frontEndMode             0
#define _NBITS_CMD_RADIO_SETUP_config_frontEndMode              3
#define _BITPOS_CMD_RADIO_SETUP_config_biasMode                 3
#define _NBITS_CMD_RADIO_SETUP_config_biasMode                  1
#define _BITPOS_CMD_RADIO_SETUP_config_bNoAdi0Setup             4
#define _NBITS_CMD_RADIO_SETUP_config_bNoAdi0Setup              1
#define _BITPOS_CMD_RADIO_SETUP_config_bNoAdi0Trim              5
#define _NBITS_CMD_RADIO_SETUP_config_bNoAdi0Trim               1
#define _BITPOS_CMD_RADIO_SETUP_config_bNoAdi0Ovr               6
#define _NBITS_CMD_RADIO_SETUP_config_bNoAdi0Ovr                1
#define _BITPOS_CMD_RADIO_SETUP_config_bNoAdi1Setup             7
#define _NBITS_CMD_RADIO_SETUP_config_bNoAdi1Setup              1
#define _BITPOS_CMD_RADIO_SETUP_config_bNoAdi1Trim              8
#define _NBITS_CMD_RADIO_SETUP_config_bNoAdi1Trim               1
#define _BITPOS_CMD_RADIO_SETUP_config_bNoAdi1Ovr               9
#define _NBITS_CMD_RADIO_SETUP_config_bNoAdi1Ovr                1
#define _BITPOS_CMD_RADIO_SETUP_config_bNoFsPowerUp             10
#define _NBITS_CMD_RADIO_SETUP_config_bNoFsPowerUp              1
#define _POSITION_CMD_RADIO_SETUP_txPower                       18
#define _TYPE_CMD_RADIO_SETUP_txPower                           uint16_t
#define _BITPOS_CMD_RADIO_SETUP_txPower_IB                      0
#define _NBITS_CMD_RADIO_SETUP_txPower_IB                       6
#define _BITPOS_CMD_RADIO_SETUP_txPower_GC                      6
#define _NBITS_CMD_RADIO_SETUP_txPower_GC                       2
#define _BITPOS_CMD_RADIO_SETUP_txPower_tempCoeff               8
#define _NBITS_CMD_RADIO_SETUP_txPower_tempCoeff                8
#define _POSITION_CMD_RADIO_SETUP_pRegOverride                  20
#define _TYPE_CMD_RADIO_SETUP_pRegOverride                      uint32_t*
#define _LAST_POSITION_CMD_RADIO_SETUP                          20
#define _LAST_TYPE_CMD_RADIO_SETUP                              uint32_t*

typedef struct {
   uint16_t commandNo;
   uint16_t status;
   uint8_t* pNextOp;
   ratmr_t startTime;
   struct {
      uint8_t triggerType:4;
      uint8_t bEnaCmd:1;
      uint8_t triggerNo:2;
      uint8_t pastTrig:1;
   } startTrigger;
   struct {
      uint8_t rule:4;
      uint8_t nSkip:4;
   } condition;
   uint8_t mode;
   uint8_t __dummy0;
   struct {
      uint16_t frontEndMode:3;
      uint16_t biasMode:1;
      uint16_t bNoAdi0Setup:1;
      uint16_t bNoAdi0Trim:1;
      uint16_t bNoAdi0Ovr:1;
      uint16_t bNoAdi1Setup:1;
      uint16_t bNoAdi1Trim:1;
      uint16_t bNoAdi1Ovr:1;
      uint16_t bNoFsPowerUp:1;
   } config;
   struct {
      uint16_t IB:6;
      uint16_t GC:2;
      uint16_t tempCoeff:8;
   } txPower;
   uint32_t* pRegOverride;
} rfCoreHal_CMD_RADIO_SETUP_t;

#define CMD_FS                                                  0x0803
#define _POSITION_CMD_FS_frequency                              14
#define _TYPE_CMD_FS_frequency                                  uint16_t
#define _POSITION_CMD_FS_fractFreq                              16
#define _TYPE_CMD_FS_fractFreq                                  uint16_t
#define _POSITION_CMD_FS_synthConf                              18
#define _TYPE_CMD_FS_synthConf                                  uint8_t
#define _BITPOS_CMD_FS_synthConf_bTxMode                        0
#define _NBITS_CMD_FS_synthConf_bTxMode                         1
#define _BITPOS_CMD_FS_synthConf_refFreq                        1
#define _NBITS_CMD_FS_synthConf_refFreq                         6
#define _POSITION_CMD_FS_calibConf                              19
#define _TYPE_CMD_FS_calibConf                                  uint8_t
#define _BITPOS_CMD_FS_calibConf_bOverrideCalib                 0
#define _NBITS_CMD_FS_calibConf_bOverrideCalib                  1
#define _BITPOS_CMD_FS_calibConf_bSkipTdcCalib                  1
#define _NBITS_CMD_FS_calibConf_bSkipTdcCalib                   1
#define _BITPOS_CMD_FS_calibConf_bSkipCoarseCalib               2
#define _NBITS_CMD_FS_calibConf_bSkipCoarseCalib                1
#define _BITPOS_CMD_FS_calibConf_bSkipMidCalib                  3
#define _NBITS_CMD_FS_calibConf_bSkipMidCalib                   1
#define _BITPOS_CMD_FS_calibConf_coarsePrecal                   4
#define _NBITS_CMD_FS_calibConf_coarsePrecal                    4
#define _POSITION_CMD_FS_midPrecal                              20
#define _TYPE_CMD_FS_midPrecal                                  uint8_t
#define _POSITION_CMD_FS_ktPrecal                               21
#define _TYPE_CMD_FS_ktPrecal                                   uint8_t
#define _POSITION_CMD_FS_tdcPrecal                              22
#define _TYPE_CMD_FS_tdcPrecal                                  uint16_t
#define _LAST_POSITION_CMD_FS                                   22
#define _LAST_TYPE_CMD_FS                                       uint16_t

typedef struct {
   uint16_t commandNo;
   uint16_t status;
   uint8_t* pNextOp;
   ratmr_t startTime;
   struct {
      uint8_t triggerType:4;
      uint8_t bEnaCmd:1;
      uint8_t triggerNo:2;
      uint8_t pastTrig:1;
   } startTrigger;
   struct {
      uint8_t rule:4;
      uint8_t nSkip:4;
   } condition;
   uint16_t frequency;
   uint16_t fractFreq;
   struct {
      uint8_t bTxMode:1;
      uint8_t refFreq:6;
   } synthConf;
   struct {
      uint8_t bOverrideCalib:1;
      uint8_t bSkipTdcCalib:1;
      uint8_t bSkipCoarseCalib:1;
      uint8_t bSkipMidCalib:1;
      uint8_t coarsePrecal:4;
   } calibConf;
   uint8_t midPrecal;
   uint8_t ktPrecal;
   uint16_t tdcPrecal;
} rfCoreHal_CMD_FS_t;

#define CMD_FS_OFF                                              0x0804
#define _LAST_POSITION_CMD_FS_OFF                               13
#define _LAST_TYPE_CMD_FS_OFF                                   uint8_t

typedef struct {
   uint16_t commandNo;
   uint16_t status;
   uint8_t* pNextOp;
   ratmr_t startTime;
   struct {
      uint8_t triggerType:4;
      uint8_t bEnaCmd:1;
      uint8_t triggerNo:2;
      uint8_t pastTrig:1;
   } startTrigger;
   struct {
      uint8_t rule:4;
      uint8_t nSkip:4;
   } condition;
} rfCoreHal_CMD_FS_OFF_t;

#define CMD_RX                                                  0x0805
#define _POSITION_CMD_RX_pktConfig                              14
#define _TYPE_CMD_RX_pktConfig                                  uint16_t
#define _BITPOS_CMD_RX_pktConfig_endianness                     0
#define _NBITS_CMD_RX_pktConfig_endianness                      1
#define _BITPOS_CMD_RX_pktConfig_numHdrBits                     1
#define _NBITS_CMD_RX_pktConfig_numHdrBits                      6
#define _BITPOS_CMD_RX_pktConfig_bFsOff                         7
#define _NBITS_CMD_RX_pktConfig_bFsOff                          1
#define _BITPOS_CMD_RX_pktConfig_bUseCrc                        8
#define _NBITS_CMD_RX_pktConfig_bUseCrc                         1
#define _BITPOS_CMD_RX_pktConfig_bCrcIncSw                      9
#define _NBITS_CMD_RX_pktConfig_bCrcIncSw                       1
#define _BITPOS_CMD_RX_pktConfig_bCrcIncHdr                     10
#define _NBITS_CMD_RX_pktConfig_bCrcIncHdr                      1
#define _BITPOS_CMD_RX_pktConfig_bReportCrc                     11
#define _NBITS_CMD_RX_pktConfig_bReportCrc                      1
#define _BITPOS_CMD_RX_pktConfig_endType                        12
#define _NBITS_CMD_RX_pktConfig_endType                         1
#define _BITPOS_CMD_RX_pktConfig_bDualSw                        13
#define _NBITS_CMD_RX_pktConfig_bDualSw                         1
#define _POSITION_CMD_RX_syncWord                               16
#define _TYPE_CMD_RX_syncWord                                   uint32_t
#define _POSITION_CMD_RX_syncWord2                              20
#define _TYPE_CMD_RX_syncWord2                                  uint32_t
#define _POSITION_CMD_RX_lenConfig                              24
#define _TYPE_CMD_RX_lenConfig                                  uint16_t
#define _BITPOS_CMD_RX_lenConfig_numLenBits                     0
#define _NBITS_CMD_RX_lenConfig_numLenBits                      4
#define _BITPOS_CMD_RX_lenConfig_lenFieldPos                    4
#define _NBITS_CMD_RX_lenConfig_lenFieldPos                     5
#define _BITPOS_CMD_RX_lenConfig_lenOffset                      9
#define _NBITS_CMD_RX_lenConfig_lenOffset                       7
#define _POSITION_CMD_RX_maxLen                                 26
#define _TYPE_CMD_RX_maxLen                                     uint16_t
#define _POSITION_CMD_RX_pRecPkt                                28
#define _TYPE_CMD_RX_pRecPkt                                    uint8_t*
#define _POSITION_CMD_RX_endTime                                32
#define _TYPE_CMD_RX_endTime                                    ratmr_t
#define _POSITION_CMD_RX_endTrigger                             36
#define _TYPE_CMD_RX_endTrigger                                 uint8_t
#define _BITPOS_CMD_RX_endTrigger_triggerType                   0
#define _NBITS_CMD_RX_endTrigger_triggerType                    4
#define _BITPOS_CMD_RX_endTrigger_bEnaCmd                       4
#define _NBITS_CMD_RX_endTrigger_bEnaCmd                        1
#define _BITPOS_CMD_RX_endTrigger_triggerNo                     5
#define _NBITS_CMD_RX_endTrigger_triggerNo                      2
#define _BITPOS_CMD_RX_endTrigger_pastTrig                      7
#define _NBITS_CMD_RX_endTrigger_pastTrig                       1
#define _POSITION_CMD_RX_rssi                                   37
#define _TYPE_CMD_RX_rssi                                       int8_t
#define _POSITION_CMD_RX_recLen                                 38
#define _TYPE_CMD_RX_recLen                                     uint16_t
#define _POSITION_CMD_RX_timeStamp                              40
#define _TYPE_CMD_RX_timeStamp                                  ratmr_t
#define _POSITION_CMD_RX_nRxOk                                  44
#define _TYPE_CMD_RX_nRxOk                                      uint16_t
#define _POSITION_CMD_RX_nRxNok                                 46
#define _TYPE_CMD_RX_nRxNok                                     uint16_t
#define _POSITION_CMD_RX_nRx2Ok                                 48
#define _TYPE_CMD_RX_nRx2Ok                                     uint16_t
#define _POSITION_CMD_RX_nRx2Nok                                50
#define _TYPE_CMD_RX_nRx2Nok                                    uint16_t
#define _LAST_POSITION_CMD_RX                                   50
#define _LAST_TYPE_CMD_RX                                       uint16_t

typedef struct {
   uint16_t commandNo;
   uint16_t status;
   uint8_t* pNextOp;
   ratmr_t startTime;
   struct {
      uint8_t triggerType:4;
      uint8_t bEnaCmd:1;
      uint8_t triggerNo:2;
      uint8_t pastTrig:1;
   } startTrigger;
   struct {
      uint8_t rule:4;
      uint8_t nSkip:4;
   } condition;
   struct {
      uint16_t endianness:1;
      uint16_t numHdrBits:6;
      uint16_t bFsOff:1;
      uint16_t bUseCrc:1;
      uint16_t bCrcIncSw:1;
      uint16_t bCrcIncHdr:1;
      uint16_t bReportCrc:1;
      uint16_t endType:1;
      uint16_t bDualSw:1;
   } pktConfig;
   uint32_t syncWord;
   uint32_t syncWord2;
   struct {
      uint16_t numLenBits:4;
      uint16_t lenFieldPos:5;
      uint16_t lenOffset:7;
   } lenConfig;
   uint16_t maxLen;
   uint8_t* pRecPkt;
   ratmr_t endTime;
   struct {
      uint8_t triggerType:4;
      uint8_t bEnaCmd:1;
      uint8_t triggerNo:2;
      uint8_t pastTrig:1;
   } endTrigger;
   int8_t rssi;
   uint16_t recLen;
   ratmr_t timeStamp;
   uint16_t nRxOk;
   uint16_t nRxNok;
   uint16_t nRx2Ok;
   uint16_t nRx2Nok;
} rfCoreHal_CMD_RX_t;

#define CMD_TX                                                  0x0806
#define _POSITION_CMD_TX_pktConfig                              14
#define _TYPE_CMD_TX_pktConfig                                  uint16_t
#define _BITPOS_CMD_TX_pktConfig_endianness                     0
#define _NBITS_CMD_TX_pktConfig_endianness                      1
#define _BITPOS_CMD_TX_pktConfig_numHdrBits                     1
#define _NBITS_CMD_TX_pktConfig_numHdrBits                      6
#define _BITPOS_CMD_TX_pktConfig_bFsOff                         7
#define _NBITS_CMD_TX_pktConfig_bFsOff                          1
#define _BITPOS_CMD_TX_pktConfig_bUseCrc                        8
#define _NBITS_CMD_TX_pktConfig_bUseCrc                         1
#define _BITPOS_CMD_TX_pktConfig_bCrcIncSw                      9
#define _NBITS_CMD_TX_pktConfig_bCrcIncSw                       1
#define _BITPOS_CMD_TX_pktConfig_bCrcIncHdr                     10
#define _NBITS_CMD_TX_pktConfig_bCrcIncHdr                      1
#define _BITPOS_CMD_TX_pktConfig_bReportCrc                     11
#define _NBITS_CMD_TX_pktConfig_bReportCrc                      1
#define _BITPOS_CMD_TX_pktConfig_endType                        12
#define _NBITS_CMD_TX_pktConfig_endType                         1
#define _BITPOS_CMD_TX_pktConfig_bDualSw                        13
#define _NBITS_CMD_TX_pktConfig_bDualSw                         1
#define _POSITION_CMD_TX_syncWord                               16
#define _TYPE_CMD_TX_syncWord                                   uint32_t
#define _POSITION_CMD_TX_pTxPkt                                 20
#define _TYPE_CMD_TX_pTxPkt                                     uint8_t*
#define _POSITION_CMD_TX_pktLen                                 24
#define _TYPE_CMD_TX_pktLen                                     uint16_t
#define _LAST_POSITION_CMD_TX                                   24
#define _LAST_TYPE_CMD_TX                                       uint16_t

typedef struct {
   uint16_t commandNo;
   uint16_t status;
   uint8_t* pNextOp;
   ratmr_t startTime;
   struct {
      uint8_t triggerType:4;
      uint8_t bEnaCmd:1;
      uint8_t triggerNo:2;
      uint8_t pastTrig:1;
   } startTrigger;
   struct {
      uint8_t rule:4;
      uint8_t nSkip:4;
   } condition;
   struct {
      uint16_t endianness:1;
      uint16_t numHdrBits:6;
      uint16_t bFsOff:1;
      uint16_t bUseCrc:1;
      uint16_t bCrcIncSw:1;
      uint16_t bCrcIncHdr:1;
      uint16_t bReportCrc:1;
      uint16_t endType:1;
      uint16_t bDualSw:1;
   } pktConfig;
   uint32_t syncWord;
   uint8_t* pTxPkt;
   uint16_t pktLen;
} rfCoreHal_CMD_TX_t;

#define CMD_RX_TEST                                             0x0807
#define _POSITION_CMD_RX_TEST_config                            14
#define _TYPE_CMD_RX_TEST_config                                uint8_t
#define _BITPOS_CMD_RX_TEST_config_bEnaFifo                     0
#define _NBITS_CMD_RX_TEST_config_bEnaFifo                      1
#define _BITPOS_CMD_RX_TEST_config_bFsOff                       1
#define _NBITS_CMD_RX_TEST_config_bFsOff                        1
#define _BITPOS_CMD_RX_TEST_config_bNoSync                      2
#define _NBITS_CMD_RX_TEST_config_bNoSync                       1
#define _POSITION_CMD_RX_TEST_endTrigger                        15
#define _TYPE_CMD_RX_TEST_endTrigger                            uint8_t
#define _BITPOS_CMD_RX_TEST_endTrigger_triggerType              0
#define _NBITS_CMD_RX_TEST_endTrigger_triggerType               4
#define _BITPOS_CMD_RX_TEST_endTrigger_bEnaCmd                  4
#define _NBITS_CMD_RX_TEST_endTrigger_bEnaCmd                   1
#define _BITPOS_CMD_RX_TEST_endTrigger_triggerNo                5
#define _NBITS_CMD_RX_TEST_endTrigger_triggerNo                 2
#define _BITPOS_CMD_RX_TEST_endTrigger_pastTrig                 7
#define _NBITS_CMD_RX_TEST_endTrigger_pastTrig                  1
#define _POSITION_CMD_RX_TEST_syncWord                          16
#define _TYPE_CMD_RX_TEST_syncWord                              uint32_t
#define _POSITION_CMD_RX_TEST_endTime                           20
#define _TYPE_CMD_RX_TEST_endTime                               ratmr_t
#define _LAST_POSITION_CMD_RX_TEST                              20
#define _LAST_TYPE_CMD_RX_TEST                                  ratmr_t

typedef struct {
   uint16_t commandNo;
   uint16_t status;
   uint8_t* pNextOp;
   ratmr_t startTime;
   struct {
      uint8_t triggerType:4;
      uint8_t bEnaCmd:1;
      uint8_t triggerNo:2;
      uint8_t pastTrig:1;
   } startTrigger;
   struct {
      uint8_t rule:4;
      uint8_t nSkip:4;
   } condition;
   struct {
      uint8_t bEnaFifo:1;
      uint8_t bFsOff:1;
      uint8_t bNoSync:1;
   } config;
   struct {
      uint8_t triggerType:4;
      uint8_t bEnaCmd:1;
      uint8_t triggerNo:2;
      uint8_t pastTrig:1;
   } endTrigger;
   uint32_t syncWord;
   ratmr_t endTime;
} rfCoreHal_CMD_RX_TEST_t;

#define CMD_TX_TEST                                             0x0808
#define _POSITION_CMD_TX_TEST_config                            14
#define _TYPE_CMD_TX_TEST_config                                uint8_t
#define _BITPOS_CMD_TX_TEST_config_bUseCw                       0
#define _NBITS_CMD_TX_TEST_config_bUseCw                        1
#define _BITPOS_CMD_TX_TEST_config_bFsOff                       1
#define _NBITS_CMD_TX_TEST_config_bFsOff                        1
#define _BITPOS_CMD_TX_TEST_config_whitenMode                   2
#define _NBITS_CMD_TX_TEST_config_whitenMode                    2
#define _POSITION_CMD_TX_TEST_txWord                            16
#define _TYPE_CMD_TX_TEST_txWord                                uint16_t
#define _POSITION_CMD_TX_TEST_endTrigger                        19
#define _TYPE_CMD_TX_TEST_endTrigger                            uint8_t
#define _BITPOS_CMD_TX_TEST_endTrigger_triggerType              0
#define _NBITS_CMD_TX_TEST_endTrigger_triggerType               4
#define _BITPOS_CMD_TX_TEST_endTrigger_bEnaCmd                  4
#define _NBITS_CMD_TX_TEST_endTrigger_bEnaCmd                   1
#define _BITPOS_CMD_TX_TEST_endTrigger_triggerNo                5
#define _NBITS_CMD_TX_TEST_endTrigger_triggerNo                 2
#define _BITPOS_CMD_TX_TEST_endTrigger_pastTrig                 7
#define _NBITS_CMD_TX_TEST_endTrigger_pastTrig                  1
#define _POSITION_CMD_TX_TEST_syncWord                          20
#define _TYPE_CMD_TX_TEST_syncWord                              uint32_t
#define _POSITION_CMD_TX_TEST_endTime                           24
#define _TYPE_CMD_TX_TEST_endTime                               ratmr_t
#define _LAST_POSITION_CMD_TX_TEST                              24
#define _LAST_TYPE_CMD_TX_TEST                                  ratmr_t

typedef struct {
   uint16_t commandNo;
   uint16_t status;
   uint8_t* pNextOp;
   ratmr_t startTime;
   struct {
      uint8_t triggerType:4;
      uint8_t bEnaCmd:1;
      uint8_t triggerNo:2;
      uint8_t pastTrig:1;
   } startTrigger;
   struct {
      uint8_t rule:4;
      uint8_t nSkip:4;
   } condition;
   struct {
      uint8_t bUseCw:1;
      uint8_t bFsOff:1;
      uint8_t whitenMode:2;
   } config;
   uint8_t __dummy0;
   uint16_t txWord;
   uint8_t __dummy1;
   struct {
      uint8_t triggerType:4;
      uint8_t bEnaCmd:1;
      uint8_t triggerNo:2;
      uint8_t pastTrig:1;
   } endTrigger;
   uint32_t syncWord;
   ratmr_t endTime;
} rfCoreHal_CMD_TX_TEST_t;

#define CMD_SYNC_STOP_RAT                                       0x0809
#define _POSITION_CMD_SYNC_STOP_RAT_rat0                        16
#define _TYPE_CMD_SYNC_STOP_RAT_rat0                            ratmr_t
#define _LAST_POSITION_CMD_SYNC_STOP_RAT                        16
#define _LAST_TYPE_CMD_SYNC_STOP_RAT                            ratmr_t

typedef struct {
   uint16_t commandNo;
   uint16_t status;
   uint8_t* pNextOp;
   ratmr_t startTime;
   struct {
      uint8_t triggerType:4;
      uint8_t bEnaCmd:1;
      uint8_t triggerNo:2;
      uint8_t pastTrig:1;
   } startTrigger;
   struct {
      uint8_t rule:4;
      uint8_t nSkip:4;
   } condition;
   uint16_t __dummy0;
   ratmr_t rat0;
} rfCoreHal_CMD_SYNC_STOP_RAT_t;

#define CMD_SYNC_START_RAT                                      0x080A
#define _POSITION_CMD_SYNC_START_RAT_rat0                       16
#define _TYPE_CMD_SYNC_START_RAT_rat0                           ratmr_t
#define _LAST_POSITION_CMD_SYNC_START_RAT                       16
#define _LAST_TYPE_CMD_SYNC_START_RAT                           ratmr_t

typedef struct {
   uint16_t commandNo;
   uint16_t status;
   uint8_t* pNextOp;
   ratmr_t startTime;
   struct {
      uint8_t triggerType:4;
      uint8_t bEnaCmd:1;
      uint8_t triggerNo:2;
      uint8_t pastTrig:1;
   } startTrigger;
   struct {
      uint8_t rule:4;
      uint8_t nSkip:4;
   } condition;
   uint16_t __dummy0;
   ratmr_t rat0;
} rfCoreHal_CMD_SYNC_START_RAT_t;

#define CMD_COUNT                                               0x080B
#define _POSITION_CMD_COUNT_counter                             14
#define _TYPE_CMD_COUNT_counter                                 uint16_t
#define _LAST_POSITION_CMD_COUNT                                14
#define _LAST_TYPE_CMD_COUNT                                    uint16_t

typedef struct {
   uint16_t commandNo;
   uint16_t status;
   uint8_t* pNextOp;
   ratmr_t startTime;
   struct {
      uint8_t triggerType:4;
      uint8_t bEnaCmd:1;
      uint8_t triggerNo:2;
      uint8_t pastTrig:1;
   } startTrigger;
   struct {
      uint8_t rule:4;
      uint8_t nSkip:4;
   } condition;
   uint16_t counter;
} rfCoreHal_CMD_COUNT_t;

#define CMD_FS_POWERUP                                          0x080C
#define _POSITION_CMD_FS_POWERUP_pRegOverride                   16
#define _TYPE_CMD_FS_POWERUP_pRegOverride                       uint32_t*
#define _LAST_POSITION_CMD_FS_POWERUP                           16
#define _LAST_TYPE_CMD_FS_POWERUP                               uint32_t*

typedef struct {
   uint16_t commandNo;
   uint16_t status;
   uint8_t* pNextOp;
   ratmr_t startTime;
   struct {
      uint8_t triggerType:4;
      uint8_t bEnaCmd:1;
      uint8_t triggerNo:2;
      uint8_t pastTrig:1;
   } startTrigger;
   struct {
      uint8_t rule:4;
      uint8_t nSkip:4;
   } condition;
   uint16_t __dummy0;
   uint32_t* pRegOverride;
} rfCoreHal_CMD_FS_POWERUP_t;

#define CMD_FS_POWERDOWN                                        0x080D
#define _LAST_POSITION_CMD_FS_POWERDOWN                         13
#define _LAST_TYPE_CMD_FS_POWERDOWN                             uint8_t

typedef struct {
   uint16_t commandNo;
   uint16_t status;
   uint8_t* pNextOp;
   ratmr_t startTime;
   struct {
      uint8_t triggerType:4;
      uint8_t bEnaCmd:1;
      uint8_t triggerNo:2;
      uint8_t pastTrig:1;
   } startTrigger;
   struct {
      uint8_t rule:4;
      uint8_t nSkip:4;
   } condition;
} rfCoreHal_CMD_FS_POWERDOWN_t;

#define CMD_TOPSM_COPY                                          0x080E
#define _POSITION_CMD_TOPSM_COPY_mceBank                        14
#define _TYPE_CMD_TOPSM_COPY_mceBank                            int8_t
#define _POSITION_CMD_TOPSM_COPY_rfeBank                        15
#define _TYPE_CMD_TOPSM_COPY_rfeBank                            int8_t
#define _POSITION_CMD_TOPSM_COPY_mceStopAddr                    16
#define _TYPE_CMD_TOPSM_COPY_mceStopAddr                        uint16_t
#define _POSITION_CMD_TOPSM_COPY_rfeStopAddr                    18
#define _TYPE_CMD_TOPSM_COPY_rfeStopAddr                        uint16_t
#define _LAST_POSITION_CMD_TOPSM_COPY                           18
#define _LAST_TYPE_CMD_TOPSM_COPY                               uint16_t

typedef struct {
   uint16_t commandNo;
   uint16_t status;
   uint8_t* pNextOp;
   ratmr_t startTime;
   struct {
      uint8_t triggerType:4;
      uint8_t bEnaCmd:1;
      uint8_t triggerNo:2;
      uint8_t pastTrig:1;
   } startTrigger;
   struct {
      uint8_t rule:4;
      uint8_t nSkip:4;
   } condition;
   int8_t mceBank;
   int8_t rfeBank;
   uint16_t mceStopAddr;
   uint16_t rfeStopAddr;
} rfCoreHal_CMD_TOPSM_COPY_t;

#define CMD_WRITE_ADDR                                          0x080F
#define _POSITION_CMD_WRITE_ADDR_type                           14
#define _TYPE_CMD_WRITE_ADDR_type                               uint8_t
#define _POSITION_CMD_WRITE_ADDR_address                        16
#define _TYPE_CMD_WRITE_ADDR_address                            uint8_t*
#define _POSITION_CMD_WRITE_ADDR_value                          20
#define _TYPE_CMD_WRITE_ADDR_value                              uint32_t
#define _LAST_POSITION_CMD_WRITE_ADDR                           20
#define _LAST_TYPE_CMD_WRITE_ADDR                               uint32_t

typedef struct {
   uint16_t commandNo;
   uint16_t status;
   uint8_t* pNextOp;
   ratmr_t startTime;
   struct {
      uint8_t triggerType:4;
      uint8_t bEnaCmd:1;
      uint8_t triggerNo:2;
      uint8_t pastTrig:1;
   } startTrigger;
   struct {
      uint8_t rule:4;
      uint8_t nSkip:4;
   } condition;
   uint8_t type;
   uint8_t __dummy0;
   uint8_t* address;
   uint32_t value;
} rfCoreHal_CMD_WRITE_ADDR_t;

#define CMD_SCH_IMM                                             0x0810
#define _POSITION_CMD_SCH_IMM_cmdrVal                           16
#define _TYPE_CMD_SCH_IMM_cmdrVal                               uint32_t
#define _POSITION_CMD_SCH_IMM_cmdstaVal                         20
#define _TYPE_CMD_SCH_IMM_cmdstaVal                             uint32_t
#define _LAST_POSITION_CMD_SCH_IMM                              20
#define _LAST_TYPE_CMD_SCH_IMM                                  uint32_t

typedef struct {
   uint16_t commandNo;
   uint16_t status;
   uint8_t* pNextOp;
   ratmr_t startTime;
   struct {
      uint8_t triggerType:4;
      uint8_t bEnaCmd:1;
      uint8_t triggerNo:2;
      uint8_t pastTrig:1;
   } startTrigger;
   struct {
      uint8_t rule:4;
      uint8_t nSkip:4;
   } condition;
   uint16_t __dummy0;
   uint32_t cmdrVal;
   uint32_t cmdstaVal;
} rfCoreHal_CMD_SCH_IMM_t;

#define CMD_USER_FUN                                            0x0811
#define _POSITION_CMD_USER_FUN_userFunAddr                      16
#define _TYPE_CMD_USER_FUN_userFunAddr                          uint32_t
#define _LAST_POSITION_CMD_USER_FUN                             16
#define _LAST_TYPE_CMD_USER_FUN                                 uint32_t

typedef struct {
   uint16_t commandNo;
   uint16_t status;
   uint8_t* pNextOp;
   ratmr_t startTime;
   struct {
      uint8_t triggerType:4;
      uint8_t bEnaCmd:1;
      uint8_t triggerNo:2;
      uint8_t pastTrig:1;
   } startTrigger;
   struct {
      uint8_t rule:4;
      uint8_t nSkip:4;
   } condition;
   uint16_t __dummy0;
   uint32_t userFunAddr;
} rfCoreHal_CMD_USER_FUN_t;

#define CMD_COUNT_BRANCH                                        0x0812
#define _POSITION_CMD_COUNT_BRANCH_counter                      14
#define _TYPE_CMD_COUNT_BRANCH_counter                          uint16_t
#define _POSITION_CMD_COUNT_BRANCH_pNextOpIfOk                  16
#define _TYPE_CMD_COUNT_BRANCH_pNextOpIfOk                      uint8_t*
#define _LAST_POSITION_CMD_COUNT_BRANCH                         16
#define _LAST_TYPE_CMD_COUNT_BRANCH                             uint8_t*

typedef struct {
   uint16_t commandNo;
   uint16_t status;
   uint8_t* pNextOp;
   ratmr_t startTime;
   struct {
      uint8_t triggerType:4;
      uint8_t bEnaCmd:1;
      uint8_t triggerNo:2;
      uint8_t pastTrig:1;
   } startTrigger;
   struct {
      uint8_t rule:4;
      uint8_t nSkip:4;
   } condition;
   uint16_t counter;
   uint8_t* pNextOpIfOk;
} rfCoreHal_CMD_COUNT_BRANCH_t;

#define CMD_PATTERN_CHECK                                       0x0813
#define _POSITION_CMD_PATTERN_CHECK_patternOpt                  14
#define _TYPE_CMD_PATTERN_CHECK_patternOpt                      uint16_t
#define _BITPOS_CMD_PATTERN_CHECK_patternOpt_operation          0
#define _NBITS_CMD_PATTERN_CHECK_patternOpt_operation           2
#define _BITPOS_CMD_PATTERN_CHECK_patternOpt_bByteRev           2
#define _NBITS_CMD_PATTERN_CHECK_patternOpt_bByteRev            1
#define _BITPOS_CMD_PATTERN_CHECK_patternOpt_bBitRev            3
#define _NBITS_CMD_PATTERN_CHECK_patternOpt_bBitRev             1
#define _BITPOS_CMD_PATTERN_CHECK_patternOpt_signExtend         4
#define _NBITS_CMD_PATTERN_CHECK_patternOpt_signExtend          5
#define _BITPOS_CMD_PATTERN_CHECK_patternOpt_bRxVal             9
#define _NBITS_CMD_PATTERN_CHECK_patternOpt_bRxVal              1
#define _POSITION_CMD_PATTERN_CHECK_pNextOpIfOk                 16
#define _TYPE_CMD_PATTERN_CHECK_pNextOpIfOk                     uint8_t*
#define _POSITION_CMD_PATTERN_CHECK_pValue                      20
#define _TYPE_CMD_PATTERN_CHECK_pValue                          uint8_t*
#define _POSITION_CMD_PATTERN_CHECK_mask                        24
#define _TYPE_CMD_PATTERN_CHECK_mask                            uint32_t
#define _POSITION_CMD_PATTERN_CHECK_compareVal                  28
#define _TYPE_CMD_PATTERN_CHECK_compareVal                      uint32_t
#define _LAST_POSITION_CMD_PATTERN_CHECK                        28
#define _LAST_TYPE_CMD_PATTERN_CHECK                            uint32_t

typedef struct {
   uint16_t commandNo;
   uint16_t status;
   uint8_t* pNextOp;
   ratmr_t startTime;
   struct {
      uint8_t triggerType:4;
      uint8_t bEnaCmd:1;
      uint8_t triggerNo:2;
      uint8_t pastTrig:1;
   } startTrigger;
   struct {
      uint8_t rule:4;
      uint8_t nSkip:4;
   } condition;
   struct {
      uint16_t operation:2;
      uint16_t bByteRev:1;
      uint16_t bBitRev:1;
      uint16_t signExtend:5;
      uint16_t bRxVal:1;
   } patternOpt;
   uint8_t* pNextOpIfOk;
   uint8_t* pValue;
   uint32_t mask;
   uint32_t compareVal;
} rfCoreHal_CMD_PATTERN_CHECK_t;

#define CMD_ANALOG_POWERDOWN                                    0x0814
#define _LAST_POSITION_CMD_ANALOG_POWERDOWN                     13
#define _LAST_TYPE_CMD_ANALOG_POWERDOWN                         uint8_t

typedef struct {
   uint16_t commandNo;
   uint16_t status;
   uint8_t* pNextOp;
   ratmr_t startTime;
   struct {
      uint8_t triggerType:4;
      uint8_t bEnaCmd:1;
      uint8_t triggerNo:2;
      uint8_t pastTrig:1;
   } startTrigger;
   struct {
      uint8_t rule:4;
      uint8_t nSkip:4;
   } condition;
} rfCoreHal_CMD_ANALOG_POWERDOWN_t;

#define CMD_FG_NOP                                              0x0C01
#define _LAST_POSITION_CMD_FG_NOP                               13
#define _LAST_TYPE_CMD_FG_NOP                                   uint8_t

typedef struct {
   uint16_t commandNo;
   uint16_t status;
   uint8_t* pNextOp;
   ratmr_t startTime;
   struct {
      uint8_t triggerType:4;
      uint8_t bEnaCmd:1;
      uint8_t triggerNo:2;
      uint8_t pastTrig:1;
   } startTrigger;
   struct {
      uint8_t rule:4;
      uint8_t nSkip:4;
   } condition;
} rfCoreHal_CMD_FG_NOP_t;

#define CMD_FG_COUNT                                            0x0C0B
#define _POSITION_CMD_FG_COUNT_counter                          14
#define _TYPE_CMD_FG_COUNT_counter                              uint16_t
#define _LAST_POSITION_CMD_FG_COUNT                             14
#define _LAST_TYPE_CMD_FG_COUNT                                 uint16_t

typedef struct {
   uint16_t commandNo;
   uint16_t status;
   uint8_t* pNextOp;
   ratmr_t startTime;
   struct {
      uint8_t triggerType:4;
      uint8_t bEnaCmd:1;
      uint8_t triggerNo:2;
      uint8_t pastTrig:1;
   } startTrigger;
   struct {
      uint8_t rule:4;
      uint8_t nSkip:4;
   } condition;
   uint16_t counter;
} rfCoreHal_CMD_FG_COUNT_t;

#define CMD_FG_SCH_IMM                                          0x0C10
#define _POSITION_CMD_FG_SCH_IMM_cmdrVal                        16
#define _TYPE_CMD_FG_SCH_IMM_cmdrVal                            uint32_t
#define _POSITION_CMD_FG_SCH_IMM_cmdstaVal                      20
#define _TYPE_CMD_FG_SCH_IMM_cmdstaVal                          uint32_t
#define _LAST_POSITION_CMD_FG_SCH_IMM                           20
#define _LAST_TYPE_CMD_FG_SCH_IMM                               uint32_t

typedef struct {
   uint16_t commandNo;
   uint16_t status;
   uint8_t* pNextOp;
   ratmr_t startTime;
   struct {
      uint8_t triggerType:4;
      uint8_t bEnaCmd:1;
      uint8_t triggerNo:2;
      uint8_t pastTrig:1;
   } startTrigger;
   struct {
      uint8_t rule:4;
      uint8_t nSkip:4;
   } condition;
   uint16_t __dummy0;
   uint32_t cmdrVal;
   uint32_t cmdstaVal;
} rfCoreHal_CMD_FG_SCH_IMM_t;

#define CMD_FG_COUNT_BRANCH                                     0x0C12
#define _POSITION_CMD_FG_COUNT_BRANCH_counter                   14
#define _TYPE_CMD_FG_COUNT_BRANCH_counter                       uint16_t
#define _POSITION_CMD_FG_COUNT_BRANCH_pNextOpIfOk               16
#define _TYPE_CMD_FG_COUNT_BRANCH_pNextOpIfOk                   uint8_t*
#define _LAST_POSITION_CMD_FG_COUNT_BRANCH                      16
#define _LAST_TYPE_CMD_FG_COUNT_BRANCH                          uint8_t*

typedef struct {
   uint16_t commandNo;
   uint16_t status;
   uint8_t* pNextOp;
   ratmr_t startTime;
   struct {
      uint8_t triggerType:4;
      uint8_t bEnaCmd:1;
      uint8_t triggerNo:2;
      uint8_t pastTrig:1;
   } startTrigger;
   struct {
      uint8_t rule:4;
      uint8_t nSkip:4;
   } condition;
   uint16_t counter;
   uint8_t* pNextOpIfOk;
} rfCoreHal_CMD_FG_COUNT_BRANCH_t;

#define CMD_FG_PATTERN_CHECK                                    0x0C13
#define _POSITION_CMD_FG_PATTERN_CHECK_patternOpt               14
#define _TYPE_CMD_FG_PATTERN_CHECK_patternOpt                   uint16_t
#define _BITPOS_CMD_FG_PATTERN_CHECK_patternOpt_operation       0
#define _NBITS_CMD_FG_PATTERN_CHECK_patternOpt_operation        2
#define _BITPOS_CMD_FG_PATTERN_CHECK_patternOpt_bByteRev        2
#define _NBITS_CMD_FG_PATTERN_CHECK_patternOpt_bByteRev         1
#define _BITPOS_CMD_FG_PATTERN_CHECK_patternOpt_bBitRev         3
#define _NBITS_CMD_FG_PATTERN_CHECK_patternOpt_bBitRev          1
#define _BITPOS_CMD_FG_PATTERN_CHECK_patternOpt_signExtend      4
#define _NBITS_CMD_FG_PATTERN_CHECK_patternOpt_signExtend       5
#define _BITPOS_CMD_FG_PATTERN_CHECK_patternOpt_bRxVal          9
#define _NBITS_CMD_FG_PATTERN_CHECK_patternOpt_bRxVal           1
#define _POSITION_CMD_FG_PATTERN_CHECK_pNextOpIfOk              16
#define _TYPE_CMD_FG_PATTERN_CHECK_pNextOpIfOk                  uint8_t*
#define _POSITION_CMD_FG_PATTERN_CHECK_pValue                   20
#define _TYPE_CMD_FG_PATTERN_CHECK_pValue                       uint8_t*
#define _POSITION_CMD_FG_PATTERN_CHECK_mask                     24
#define _TYPE_CMD_FG_PATTERN_CHECK_mask                         uint32_t
#define _POSITION_CMD_FG_PATTERN_CHECK_compareVal               28
#define _TYPE_CMD_FG_PATTERN_CHECK_compareVal                   uint32_t
#define _LAST_POSITION_CMD_FG_PATTERN_CHECK                     28
#define _LAST_TYPE_CMD_FG_PATTERN_CHECK                         uint32_t

typedef struct {
   uint16_t commandNo;
   uint16_t status;
   uint8_t* pNextOp;
   ratmr_t startTime;
   struct {
      uint8_t triggerType:4;
      uint8_t bEnaCmd:1;
      uint8_t triggerNo:2;
      uint8_t pastTrig:1;
   } startTrigger;
   struct {
      uint8_t rule:4;
      uint8_t nSkip:4;
   } condition;
   struct {
      uint16_t operation:2;
      uint16_t bByteRev:1;
      uint16_t bBitRev:1;
      uint16_t signExtend:5;
      uint16_t bRxVal:1;
   } patternOpt;
   uint8_t* pNextOpIfOk;
   uint8_t* pValue;
   uint32_t mask;
   uint32_t compareVal;
} rfCoreHal_CMD_FG_PATTERN_CHECK_t;

#define CMD_ABORT                                               0x0401
#define _LAST_POSITION_CMD_ABORT                                0
#define _LAST_TYPE_CMD_ABORT                                    uint16_t

typedef struct {
   uint16_t commandNo;
} rfCoreHal_CMD_ABORT_t;

#define CMD_STOP                                                0x0402
#define _LAST_POSITION_CMD_STOP                                 0
#define _LAST_TYPE_CMD_STOP                                     uint16_t

typedef struct {
   uint16_t commandNo;
} rfCoreHal_CMD_STOP_t;

#define CMD_GET_RSSI                                            0x0403
#define _LAST_POSITION_CMD_GET_RSSI                             0
#define _LAST_TYPE_CMD_GET_RSSI                                 uint16_t

typedef struct {
   uint16_t commandNo;
} rfCoreHal_CMD_GET_RSSI_t;

#define CMD_UPDATE_RADIO_SETUP                                  0x0001
#define _POSITION_CMD_UPDATE_RADIO_SETUP_pRegOverride           4
#define _TYPE_CMD_UPDATE_RADIO_SETUP_pRegOverride               uint32_t*
#define _LAST_POSITION_CMD_UPDATE_RADIO_SETUP                   4
#define _LAST_TYPE_CMD_UPDATE_RADIO_SETUP                       uint32_t*

typedef struct {
   uint16_t commandNo;
   uint16_t __dummy0;
   uint32_t* pRegOverride;
} rfCoreHal_CMD_UPDATE_RADIO_SETUP_t;

#define CMD_TRIGGER                                             0x0404
#define _POSITION_CMD_TRIGGER_triggerNo                         2
#define _TYPE_CMD_TRIGGER_triggerNo                             uint8_t
#define _LAST_POSITION_CMD_TRIGGER                              2
#define _LAST_TYPE_CMD_TRIGGER                                  uint8_t

typedef struct {
   uint16_t commandNo;
   uint8_t triggerNo;
} rfCoreHal_CMD_TRIGGER_t;

#define CMD_GET_FW_INFO                                         0x0002
#define _POSITION_CMD_GET_FW_INFO_versionNo                     2
#define _TYPE_CMD_GET_FW_INFO_versionNo                         uint16_t
#define _POSITION_CMD_GET_FW_INFO_startOffset                   4
#define _TYPE_CMD_GET_FW_INFO_startOffset                       uint16_t
#define _POSITION_CMD_GET_FW_INFO_freeRamSz                     6
#define _TYPE_CMD_GET_FW_INFO_freeRamSz                         uint16_t
#define _POSITION_CMD_GET_FW_INFO_availRatCh                    8
#define _TYPE_CMD_GET_FW_INFO_availRatCh                        uint16_t
#define _LAST_POSITION_CMD_GET_FW_INFO                          8
#define _LAST_TYPE_CMD_GET_FW_INFO                              uint16_t

typedef struct {
   uint16_t commandNo;
   uint16_t versionNo;
   uint16_t startOffset;
   uint16_t freeRamSz;
   uint16_t availRatCh;
} rfCoreHal_CMD_GET_FW_INFO_t;

#define CMD_START_RAT                                           0x0405
#define _LAST_POSITION_CMD_START_RAT                            0
#define _LAST_TYPE_CMD_START_RAT                                uint16_t

typedef struct {
   uint16_t commandNo;
} rfCoreHal_CMD_START_RAT_t;

#define CMD_PING                                                0x0406
#define _LAST_POSITION_CMD_PING                                 0
#define _LAST_TYPE_CMD_PING                                     uint16_t

typedef struct {
   uint16_t commandNo;
} rfCoreHal_CMD_PING_t;

#define CMD_READ_RFREG                                          0x0601
#define _POSITION_CMD_READ_RFREG_address                        2
#define _TYPE_CMD_READ_RFREG_address                            uint16_t
#define _POSITION_CMD_READ_RFREG_value                          4
#define _TYPE_CMD_READ_RFREG_value                              uint32_t
#define _LAST_POSITION_CMD_READ_RFREG                           4
#define _LAST_TYPE_CMD_READ_RFREG                               uint32_t

typedef struct {
   uint16_t commandNo;
   uint16_t address;
   uint32_t value;
} rfCoreHal_CMD_READ_RFREG_t;

#define CMD_WRITE_RFREG                                         0x0003
#define _POSITION_CMD_WRITE_RFREG_address                       2
#define _TYPE_CMD_WRITE_RFREG_address                           uint16_t
#define _POSITION_CMD_WRITE_RFREG_value                         4
#define _TYPE_CMD_WRITE_RFREG_value                             uint32_t
#define _LAST_POSITION_CMD_WRITE_RFREG                          4
#define _LAST_TYPE_CMD_WRITE_RFREG                              uint32_t

typedef struct {
   uint16_t commandNo;
   uint16_t address;
   uint32_t value;
} rfCoreHal_CMD_WRITE_RFREG_t;

#define CMD_MODIFY_RFREG                                        0x0004
#define _POSITION_CMD_MODIFY_RFREG_address                      2
#define _TYPE_CMD_MODIFY_RFREG_address                          uint16_t
#define _POSITION_CMD_MODIFY_RFREG_clearMask                    4
#define _TYPE_CMD_MODIFY_RFREG_clearMask                        uint32_t
#define _POSITION_CMD_MODIFY_RFREG_setMask                      8
#define _TYPE_CMD_MODIFY_RFREG_setMask                          uint32_t
#define _LAST_POSITION_CMD_MODIFY_RFREG                         8
#define _LAST_TYPE_CMD_MODIFY_RFREG                             uint32_t

typedef struct {
   uint16_t commandNo;
   uint16_t address;
   uint32_t clearMask;
   uint32_t setMask;
} rfCoreHal_CMD_MODIFY_RFREG_t;

#define CMD_READ_ADI0REG                                        0x040B
#define _POSITION_CMD_READ_ADI0REG_adiAddr                      2
#define _TYPE_CMD_READ_ADI0REG_adiAddr                          uint8_t
#define _BITPOS_CMD_READ_ADI0REG_adiAddr_bHalfSize              0
#define _NBITS_CMD_READ_ADI0REG_adiAddr_bHalfSize               1
#define _BITPOS_CMD_READ_ADI0REG_adiAddr_address                2
#define _NBITS_CMD_READ_ADI0REG_adiAddr_address                 6
#define _POSITION_CMD_READ_ADI0REG_adiValue                     3
#define _TYPE_CMD_READ_ADI0REG_adiValue                         uint8_t
#define _LAST_POSITION_CMD_READ_ADI0REG                         3
#define _LAST_TYPE_CMD_READ_ADI0REG                             uint8_t

typedef struct {
   uint16_t commandNo;
   struct {
      uint8_t bHalfSize:1;
      uint8_t :1;
      uint8_t address:6;
   } adiAddr;
   uint8_t adiValue;
} rfCoreHal_CMD_READ_ADI0REG_t;

#define CMD_WRITE_ADI0REG                                       0x0605
#define _POSITION_CMD_WRITE_ADI0REG_adiAddr                     2
#define _TYPE_CMD_WRITE_ADI0REG_adiAddr                         uint8_t
#define _BITPOS_CMD_WRITE_ADI0REG_adiAddr_bHalfSize             0
#define _NBITS_CMD_WRITE_ADI0REG_adiAddr_bHalfSize              1
#define _BITPOS_CMD_WRITE_ADI0REG_adiAddr_address               2
#define _NBITS_CMD_WRITE_ADI0REG_adiAddr_address                6
#define _POSITION_CMD_WRITE_ADI0REG_adiValue                    3
#define _TYPE_CMD_WRITE_ADI0REG_adiValue                        uint8_t
#define _LAST_POSITION_CMD_WRITE_ADI0REG                        3
#define _LAST_TYPE_CMD_WRITE_ADI0REG                            uint8_t

typedef struct {
   uint16_t commandNo;
   struct {
      uint8_t bHalfSize:1;
      uint8_t :1;
      uint8_t address:6;
   } adiAddr;
   uint8_t adiValue;
} rfCoreHal_CMD_WRITE_ADI0REG_t;

#define CMD_READ_ADI1REG                                        0x040C
#define _POSITION_CMD_READ_ADI1REG_adiAddr                      2
#define _TYPE_CMD_READ_ADI1REG_adiAddr                          uint8_t
#define _BITPOS_CMD_READ_ADI1REG_adiAddr_bHalfSize              0
#define _NBITS_CMD_READ_ADI1REG_adiAddr_bHalfSize               1
#define _BITPOS_CMD_READ_ADI1REG_adiAddr_address                2
#define _NBITS_CMD_READ_ADI1REG_adiAddr_address                 6
#define _POSITION_CMD_READ_ADI1REG_adiValue                     3
#define _TYPE_CMD_READ_ADI1REG_adiValue                         uint8_t
#define _LAST_POSITION_CMD_READ_ADI1REG                         3
#define _LAST_TYPE_CMD_READ_ADI1REG                             uint8_t

typedef struct {
   uint16_t commandNo;
   struct {
      uint8_t bHalfSize:1;
      uint8_t :1;
      uint8_t address:6;
   } adiAddr;
   uint8_t adiValue;
} rfCoreHal_CMD_READ_ADI1REG_t;

#define CMD_WRITE_ADI1REG                                       0x0606
#define _POSITION_CMD_WRITE_ADI1REG_adiAddr                     2
#define _TYPE_CMD_WRITE_ADI1REG_adiAddr                         uint8_t
#define _BITPOS_CMD_WRITE_ADI1REG_adiAddr_bHalfSize             0
#define _NBITS_CMD_WRITE_ADI1REG_adiAddr_bHalfSize              1
#define _BITPOS_CMD_WRITE_ADI1REG_adiAddr_address               2
#define _NBITS_CMD_WRITE_ADI1REG_adiAddr_address                6
#define _POSITION_CMD_WRITE_ADI1REG_adiValue                    3
#define _TYPE_CMD_WRITE_ADI1REG_adiValue                        uint8_t
#define _LAST_POSITION_CMD_WRITE_ADI1REG                        3
#define _LAST_TYPE_CMD_WRITE_ADI1REG                            uint8_t

typedef struct {
   uint16_t commandNo;
   struct {
      uint8_t bHalfSize:1;
      uint8_t :1;
      uint8_t address:6;
   } adiAddr;
   uint8_t adiValue;
} rfCoreHal_CMD_WRITE_ADI1REG_t;

#define CMD_FORCE_CLK_ENA                                       0x0607
#define _POSITION_CMD_FORCE_CLK_ENA_forceClkEna                 2
#define _TYPE_CMD_FORCE_CLK_ENA_forceClkEna                     uint16_t
#define _LAST_POSITION_CMD_FORCE_CLK_ENA                        2
#define _LAST_TYPE_CMD_FORCE_CLK_ENA                            uint16_t

typedef struct {
   uint16_t commandNo;
   uint16_t forceClkEna;
} rfCoreHal_CMD_FORCE_CLK_ENA_t;

#define CMD_ADD_DATA_ENTRY                                      0x0005
#define _POSITION_CMD_ADD_DATA_ENTRY_pQueue                     4
#define _TYPE_CMD_ADD_DATA_ENTRY_pQueue                         dataQueue_t*
#define _POSITION_CMD_ADD_DATA_ENTRY_pEntry                     8
#define _TYPE_CMD_ADD_DATA_ENTRY_pEntry                         uint8_t*
#define _LAST_POSITION_CMD_ADD_DATA_ENTRY                       8
#define _LAST_TYPE_CMD_ADD_DATA_ENTRY                           uint8_t*

typedef struct {
   uint16_t commandNo;
   uint16_t __dummy0;
   dataQueue_t* pQueue;
   uint8_t* pEntry;
} rfCoreHal_CMD_ADD_DATA_ENTRY_t;

#define CMD_READ_FWPAR                                          0x000B
#define _POSITION_CMD_READ_FWPAR_address                        2
#define _TYPE_CMD_READ_FWPAR_address                            uint16_t
#define _BITPOS_CMD_READ_FWPAR_address_fwAddr                   0
#define _NBITS_CMD_READ_FWPAR_address_fwAddr                    11
#define _BITPOS_CMD_READ_FWPAR_address_type                     11
#define _NBITS_CMD_READ_FWPAR_address_type                      2
#define _POSITION_CMD_READ_FWPAR_value                          4
#define _TYPE_CMD_READ_FWPAR_value                              uint32_t
#define _LAST_POSITION_CMD_READ_FWPAR                           4
#define _LAST_TYPE_CMD_READ_FWPAR                               uint32_t

typedef struct {
   uint16_t commandNo;
   struct {
      uint16_t fwAddr:11;
      uint16_t type:2;
   } address;
   uint32_t value;
} rfCoreHal_CMD_READ_FWPAR_t;

#define CMD_WRITE_FWPAR                                         0x000C
#define _POSITION_CMD_WRITE_FWPAR_address                       2
#define _TYPE_CMD_WRITE_FWPAR_address                           uint16_t
#define _BITPOS_CMD_WRITE_FWPAR_address_fwAddr                  0
#define _NBITS_CMD_WRITE_FWPAR_address_fwAddr                   11
#define _BITPOS_CMD_WRITE_FWPAR_address_type                    11
#define _NBITS_CMD_WRITE_FWPAR_address_type                     2
#define _POSITION_CMD_WRITE_FWPAR_value                         4
#define _TYPE_CMD_WRITE_FWPAR_value                             uint32_t
#define _LAST_POSITION_CMD_WRITE_FWPAR                          4
#define _LAST_TYPE_CMD_WRITE_FWPAR                              uint32_t

typedef struct {
   uint16_t commandNo;
   struct {
      uint16_t fwAddr:11;
      uint16_t type:2;
   } address;
   uint32_t value;
} rfCoreHal_CMD_WRITE_FWPAR_t;

#define CMD_READ_FS_CAL                                         0x000D
#define _POSITION_CMD_READ_FS_CAL_coarseCal                     3
#define _TYPE_CMD_READ_FS_CAL_coarseCal                         uint8_t
#define _POSITION_CMD_READ_FS_CAL_midCal                        4
#define _TYPE_CMD_READ_FS_CAL_midCal                            uint8_t
#define _POSITION_CMD_READ_FS_CAL_ktCal                         5
#define _TYPE_CMD_READ_FS_CAL_ktCal                             uint8_t
#define _POSITION_CMD_READ_FS_CAL_tdcCal                        6
#define _TYPE_CMD_READ_FS_CAL_tdcCal                            uint16_t
#define _LAST_POSITION_CMD_READ_FS_CAL                          6
#define _LAST_TYPE_CMD_READ_FS_CAL                              uint16_t

typedef struct {
   uint16_t commandNo;
   uint8_t __dummy0;
   uint8_t coarseCal;
   uint8_t midCal;
   uint8_t ktCal;
   uint16_t tdcCal;
} rfCoreHal_CMD_READ_FS_CAL_t;

#define CMD_REMOVE_DATA_ENTRY                                   0x0006
#define _POSITION_CMD_REMOVE_DATA_ENTRY_pQueue                  4
#define _TYPE_CMD_REMOVE_DATA_ENTRY_pQueue                      dataQueue_t*
#define _POSITION_CMD_REMOVE_DATA_ENTRY_pEntry                  8
#define _TYPE_CMD_REMOVE_DATA_ENTRY_pEntry                      uint8_t*
#define _LAST_POSITION_CMD_REMOVE_DATA_ENTRY                    8
#define _LAST_TYPE_CMD_REMOVE_DATA_ENTRY                        uint8_t*

typedef struct {
   uint16_t commandNo;
   uint16_t __dummy0;
   dataQueue_t* pQueue;
   uint8_t* pEntry;
} rfCoreHal_CMD_REMOVE_DATA_ENTRY_t;

#define CMD_FLUSH_QUEUE                                         0x0007
#define _POSITION_CMD_FLUSH_QUEUE_pQueue                        4
#define _TYPE_CMD_FLUSH_QUEUE_pQueue                            dataQueue_t*
#define _POSITION_CMD_FLUSH_QUEUE_pFirstEntry                   8
#define _TYPE_CMD_FLUSH_QUEUE_pFirstEntry                       uint8_t*
#define _LAST_POSITION_CMD_FLUSH_QUEUE                          8
#define _LAST_TYPE_CMD_FLUSH_QUEUE                              uint8_t*

typedef struct {
   uint16_t commandNo;
   uint16_t __dummy0;
   dataQueue_t* pQueue;
   uint8_t* pFirstEntry;
} rfCoreHal_CMD_FLUSH_QUEUE_t;

#define CMD_CLEAR_RX                                            0x0008
#define _POSITION_CMD_CLEAR_RX_pQueue                           4
#define _TYPE_CMD_CLEAR_RX_pQueue                               dataQueue_t*
#define _LAST_POSITION_CMD_CLEAR_RX                             4
#define _LAST_TYPE_CMD_CLEAR_RX                                 dataQueue_t*

typedef struct {
   uint16_t commandNo;
   uint16_t __dummy0;
   dataQueue_t* pQueue;
} rfCoreHal_CMD_CLEAR_RX_t;

#define CMD_REMOVE_PENDING_ENTRIES                              0x0009
#define _POSITION_CMD_REMOVE_PENDING_ENTRIES_pQueue             4
#define _TYPE_CMD_REMOVE_PENDING_ENTRIES_pQueue                 dataQueue_t*
#define _POSITION_CMD_REMOVE_PENDING_ENTRIES_pFirstEntry        8
#define _TYPE_CMD_REMOVE_PENDING_ENTRIES_pFirstEntry            uint8_t*
#define _LAST_POSITION_CMD_REMOVE_PENDING_ENTRIES               8
#define _LAST_TYPE_CMD_REMOVE_PENDING_ENTRIES                   uint8_t*

typedef struct {
   uint16_t commandNo;
   uint16_t __dummy0;
   dataQueue_t* pQueue;
   uint8_t* pFirstEntry;
} rfCoreHal_CMD_REMOVE_PENDING_ENTRIES_t;

#define CMD_ENABLE_DBG                                          0x0602
#define _POSITION_CMD_ENABLE_DBG_config                         2
#define _TYPE_CMD_ENABLE_DBG_config                             uint16_t
#define _BITPOS_CMD_ENABLE_DBG_config_sysTickCh                 6
#define _NBITS_CMD_ENABLE_DBG_config_sysTickCh                  2
#define _BITPOS_CMD_ENABLE_DBG_config_mode1                     8
#define _NBITS_CMD_ENABLE_DBG_config_mode1                      1
#define _BITPOS_CMD_ENABLE_DBG_config_mode2                     9
#define _NBITS_CMD_ENABLE_DBG_config_mode2                      2
#define _BITPOS_CMD_ENABLE_DBG_config_mode3                     11
#define _NBITS_CMD_ENABLE_DBG_config_mode3                      1
#define _BITPOS_CMD_ENABLE_DBG_config_tsEn                      12
#define _NBITS_CMD_ENABLE_DBG_config_tsEn                       1
#define _BITPOS_CMD_ENABLE_DBG_config_prescaler                 14
#define _NBITS_CMD_ENABLE_DBG_config_prescaler                  2
#define _POSITION_CMD_ENABLE_DBG_trccfg                         3
#define _TYPE_CMD_ENABLE_DBG_trccfg                             uint8_t
#define _LAST_POSITION_CMD_ENABLE_DBG                           3
#define _LAST_TYPE_CMD_ENABLE_DBG                               uint8_t

typedef struct {
   uint16_t commandNo;
   struct {
      uint16_t :6;
      uint16_t sysTickCh:2;
      uint16_t mode1:1;
      uint16_t mode2:2;
      uint16_t mode3:1;
      uint16_t tsEn:1;
      uint16_t :1;
      uint16_t prescaler:2;
   } config;
} rfCoreHal_CMD_ENABLE_DBG_t;

#define CMD_DISABLE_DBG                                         0x0407
#define _LAST_POSITION_CMD_DISABLE_DBG                          0
#define _LAST_TYPE_CMD_DISABLE_DBG                              uint16_t

typedef struct {
   uint16_t commandNo;
} rfCoreHal_CMD_DISABLE_DBG_t;

#define CMD_SET_RAT_CMP                                         0x000A
#define _POSITION_CMD_SET_RAT_CMP_ratCh                         2
#define _TYPE_CMD_SET_RAT_CMP_ratCh                             uint8_t
#define _POSITION_CMD_SET_RAT_CMP_compareTime                   4
#define _TYPE_CMD_SET_RAT_CMP_compareTime                       ratmr_t
#define _LAST_POSITION_CMD_SET_RAT_CMP                          4
#define _LAST_TYPE_CMD_SET_RAT_CMP                              ratmr_t

typedef struct {
   uint16_t commandNo;
   uint8_t ratCh;
   uint8_t __dummy0;
   ratmr_t compareTime;
} rfCoreHal_CMD_SET_RAT_CMP_t;

#define CMD_SET_RAT_CPT                                         0x0603
#define _POSITION_CMD_SET_RAT_CPT_config                        2
#define _TYPE_CMD_SET_RAT_CPT_config                            uint16_t
#define _BITPOS_CMD_SET_RAT_CPT_config_inputSrc                 3
#define _NBITS_CMD_SET_RAT_CPT_config_inputSrc                  5
#define _BITPOS_CMD_SET_RAT_CPT_config_ratCh                    8
#define _NBITS_CMD_SET_RAT_CPT_config_ratCh                     4
#define _BITPOS_CMD_SET_RAT_CPT_config_bRepeated                12
#define _NBITS_CMD_SET_RAT_CPT_config_bRepeated                 1
#define _BITPOS_CMD_SET_RAT_CPT_config_inputMode                13
#define _NBITS_CMD_SET_RAT_CPT_config_inputMode                 2
#define _LAST_POSITION_CMD_SET_RAT_CPT                          2
#define _LAST_TYPE_CMD_SET_RAT_CPT                              uint16_t

typedef struct {
   uint16_t commandNo;
   struct {
      uint16_t :3;
      uint16_t inputSrc:5;
      uint16_t ratCh:4;
      uint16_t bRepeated:1;
      uint16_t inputMode:2;
   } config;
} rfCoreHal_CMD_SET_RAT_CPT_t;

#define CMD_DISABLE_RAT_CH                                      0x0408
#define _POSITION_CMD_DISABLE_RAT_CH_ratCh                      2
#define _TYPE_CMD_DISABLE_RAT_CH_ratCh                          uint8_t
#define _LAST_POSITION_CMD_DISABLE_RAT_CH                       2
#define _LAST_TYPE_CMD_DISABLE_RAT_CH                           uint8_t

typedef struct {
   uint16_t commandNo;
   uint8_t ratCh;
} rfCoreHal_CMD_DISABLE_RAT_CH_t;

#define CMD_SET_RAT_OUTPUT                                      0x0604
#define _POSITION_CMD_SET_RAT_OUTPUT_config                     2
#define _TYPE_CMD_SET_RAT_OUTPUT_config                         uint16_t
#define _BITPOS_CMD_SET_RAT_OUTPUT_config_outputSel             2
#define _NBITS_CMD_SET_RAT_OUTPUT_config_outputSel              3
#define _BITPOS_CMD_SET_RAT_OUTPUT_config_outputMode            5
#define _NBITS_CMD_SET_RAT_OUTPUT_config_outputMode             3
#define _BITPOS_CMD_SET_RAT_OUTPUT_config_ratCh                 8
#define _NBITS_CMD_SET_RAT_OUTPUT_config_ratCh                  4
#define _LAST_POSITION_CMD_SET_RAT_OUTPUT                       2
#define _LAST_TYPE_CMD_SET_RAT_OUTPUT                           uint16_t

typedef struct {
   uint16_t commandNo;
   struct {
      uint16_t :2;
      uint16_t outputSel:3;
      uint16_t outputMode:3;
      uint16_t ratCh:4;
   } config;
} rfCoreHal_CMD_SET_RAT_OUTPUT_t;

#define CMD_ARM_RAT_CH                                          0x0409
#define _POSITION_CMD_ARM_RAT_CH_ratCh                          2
#define _TYPE_CMD_ARM_RAT_CH_ratCh                              uint8_t
#define _LAST_POSITION_CMD_ARM_RAT_CH                           2
#define _LAST_TYPE_CMD_ARM_RAT_CH                               uint8_t

typedef struct {
   uint16_t commandNo;
   uint8_t ratCh;
} rfCoreHal_CMD_ARM_RAT_CH_t;

#define CMD_DISARM_RAT_CH                                       0x040A
#define _POSITION_CMD_DISARM_RAT_CH_ratCh                       2
#define _TYPE_CMD_DISARM_RAT_CH_ratCh                           uint8_t
#define _LAST_POSITION_CMD_DISARM_RAT_CH                        2
#define _LAST_TYPE_CMD_DISARM_RAT_CH                            uint8_t

typedef struct {
   uint16_t commandNo;
   uint8_t ratCh;
} rfCoreHal_CMD_DISARM_RAT_CH_t;

#define CMD_MEMCPY                                              0x000E
#define _POSITION_CMD_MEMCPY_nWords                             2
#define _TYPE_CMD_MEMCPY_nWords                                 uint16_t
#define _POSITION_CMD_MEMCPY_pDestAddr                          4
#define _TYPE_CMD_MEMCPY_pDestAddr                              uint32_t*
#define _POSITION_CMD_MEMCPY_pSrcAddr                           8
#define _TYPE_CMD_MEMCPY_pSrcAddr                               uint32_t*
#define _LAST_POSITION_CMD_MEMCPY                               8
#define _LAST_TYPE_CMD_MEMCPY                                   uint32_t*

typedef struct {
   uint16_t commandNo;
   uint16_t nWords;
   uint32_t* pDestAddr;
   uint32_t* pSrcAddr;
} rfCoreHal_CMD_MEMCPY_t;

#define CMD_MEMSET                                              0x000F
#define _POSITION_CMD_MEMSET_nWords                             2
#define _TYPE_CMD_MEMSET_nWords                                 uint16_t
#define _POSITION_CMD_MEMSET_pDestAddr                          4
#define _TYPE_CMD_MEMSET_pDestAddr                              uint32_t*
#define _POSITION_CMD_MEMSET_value                              8
#define _TYPE_CMD_MEMSET_value                                  uint32_t
#define _LAST_POSITION_CMD_MEMSET                               8
#define _LAST_TYPE_CMD_MEMSET                                   uint32_t

typedef struct {
   uint16_t commandNo;
   uint16_t nWords;
   uint32_t* pDestAddr;
   uint32_t value;
} rfCoreHal_CMD_MEMSET_t;

#define CMD_SET_TX_POWER                                        0x0010
#define _POSITION_CMD_SET_TX_POWER_txPower                      2
#define _TYPE_CMD_SET_TX_POWER_txPower                          uint16_t
#define _BITPOS_CMD_SET_TX_POWER_txPower_IB                     0
#define _NBITS_CMD_SET_TX_POWER_txPower_IB                      6
#define _BITPOS_CMD_SET_TX_POWER_txPower_GC                     6
#define _NBITS_CMD_SET_TX_POWER_txPower_GC                      2
#define _BITPOS_CMD_SET_TX_POWER_txPower_tempCoeff              8
#define _NBITS_CMD_SET_TX_POWER_txPower_tempCoeff               8
#define _LAST_POSITION_CMD_SET_TX_POWER                         2
#define _LAST_TYPE_CMD_SET_TX_POWER                             uint16_t

typedef struct {
   uint16_t commandNo;
   struct {
      uint16_t IB:6;
      uint16_t GC:2;
      uint16_t tempCoeff:8;
   } txPower;
} rfCoreHal_CMD_SET_TX_POWER_t;

#define CMD_SET_TX_SHAPE                                        0x040D
#define _LAST_POSITION_CMD_SET_TX_SHAPE                         0
#define _LAST_TYPE_CMD_SET_TX_SHAPE                             uint16_t

typedef struct {
   uint16_t commandNo;
} rfCoreHal_CMD_SET_TX_SHAPE_t;

#define CMD_UPDATE_BAW_FREQ                                     0x0608
#define _POSITION_CMD_UPDATE_BAW_FREQ_freqOffset                2
#define _TYPE_CMD_UPDATE_BAW_FREQ_freqOffset                    int16_t
#define _LAST_POSITION_CMD_UPDATE_BAW_FREQ                      2
#define _LAST_TYPE_CMD_UPDATE_BAW_FREQ                          int16_t

typedef struct {
   uint16_t commandNo;
   int16_t freqOffset;
} rfCoreHal_CMD_UPDATE_BAW_FREQ_t;

#define CMD_UPDATE_FS                                           0x0011
#define _POSITION_CMD_UPDATE_FS_frequency                       2
#define _TYPE_CMD_UPDATE_FS_frequency                           uint16_t
#define _POSITION_CMD_UPDATE_FS_fractFreq                       4
#define _TYPE_CMD_UPDATE_FS_fractFreq                           uint16_t
#define _LAST_POSITION_CMD_UPDATE_FS                            4
#define _LAST_TYPE_CMD_UPDATE_FS                                uint16_t

typedef struct {
   uint16_t commandNo;
   uint16_t frequency;
   uint16_t fractFreq;
} rfCoreHal_CMD_UPDATE_FS_t;

#define CMD_BUS_REQUEST                                         0x040E
#define _POSITION_CMD_BUS_REQUEST_bSysBusNeeded                 2
#define _TYPE_CMD_BUS_REQUEST_bSysBusNeeded                     uint8_t
#define _LAST_POSITION_CMD_BUS_REQUEST                          2
#define _LAST_TYPE_CMD_BUS_REQUEST                              uint8_t

typedef struct {
   uint16_t commandNo;
   uint8_t bSysBusNeeded;
} rfCoreHal_CMD_BUS_REQUEST_t;

#define CMD_READ_TRIM                                           0x040F
#define _LAST_POSITION_CMD_READ_TRIM                            0
#define _LAST_TYPE_CMD_READ_TRIM                                uint16_t

typedef struct {
   uint16_t commandNo;
} rfCoreHal_CMD_READ_TRIM_t;

#define CMD_SET_TRIM                                            0x0012
#define _POSITION_CMD_SET_TRIM_configIfAdc                      4
#define _TYPE_CMD_SET_TRIM_configIfAdc                          uint32_t
#define _POSITION_CMD_SET_TRIM_configRfFrontend                 8
#define _TYPE_CMD_SET_TRIM_configRfFrontend                     uint32_t
#define _POSITION_CMD_SET_TRIM_configSynth                      12
#define _TYPE_CMD_SET_TRIM_configSynth                          uint32_t
#define _POSITION_CMD_SET_TRIM_configMiscAdc                    16
#define _TYPE_CMD_SET_TRIM_configMiscAdc                        uint32_t
#define _LAST_POSITION_CMD_SET_TRIM                             16
#define _LAST_TYPE_CMD_SET_TRIM                                 uint32_t

typedef struct {
   uint16_t commandNo;
   uint16_t __dummy0;
   uint32_t configIfAdc;
   uint32_t configRfFrontend;
   uint32_t configSynth;
   uint32_t configMiscAdc;
} rfCoreHal_CMD_SET_TRIM_t;

#endif
