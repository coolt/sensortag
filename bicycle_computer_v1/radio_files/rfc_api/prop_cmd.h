//------------------------------------------------------------------------------
// TI Confidential - NDA Restrictions
//
// Copyright (c) 2013 Texas Instruments, Inc.
//
//    This is an unpublished work created in the year stated above.
//    Texas Instruments owns all rights in and to this work and
//    intends to maintain and protect it as an unpublished copyright.
//    In the event of either inadvertent or deliberate publication,
//    the above stated date shall be treated as the year of first
//    publication. In the event of such publication, Texas Instruments
//    intends to enforce its rights in the work under the copyright
//    laws as a published work.
//
//------------------------------------------------------------------------------
///
/// \file            prop_cmd.h
/// \brief           Definitions of API for Proprietary mode commands
///
///                  This file is generated by create_command.pl
///
/// \author          Low Power RF Wireless Business Unit
///                  Helge Coward (h.coward@ti.com)
///
/// \date            Wed Jan 30 18:58:41 CET 2013
///
//------------------------------------------------------------------------------

#ifndef __PROP_CMD_H
#define __PROP_CMD_H

#include <stdint.h>
#include "mailbox.h"

#define CMD_PROP_TX                                             0x3801
#define _POSITION_CMD_PROP_TX_pktConf                           14
#define _TYPE_CMD_PROP_TX_pktConf                               uint8_t
#define _BITPOS_CMD_PROP_TX_pktConf_bFsOff                      0
#define _NBITS_CMD_PROP_TX_pktConf_bFsOff                       1
#define _BITPOS_CMD_PROP_TX_pktConf_bUseCrc                     3
#define _NBITS_CMD_PROP_TX_pktConf_bUseCrc                      1
#define _BITPOS_CMD_PROP_TX_pktConf_bVarLen                     4
#define _NBITS_CMD_PROP_TX_pktConf_bVarLen                      1
#define _POSITION_CMD_PROP_TX_pktLen                            15
#define _TYPE_CMD_PROP_TX_pktLen                                uint8_t
#define _POSITION_CMD_PROP_TX_syncWord                          16
#define _TYPE_CMD_PROP_TX_syncWord                              uint32_t
#define _POSITION_CMD_PROP_TX_pPkt                              20
#define _TYPE_CMD_PROP_TX_pPkt                                  uint8_t*
#define _LAST_POSITION_CMD_PROP_TX                              20
#define _LAST_TYPE_CMD_PROP_TX                                  uint8_t*

typedef struct {
   uint16_t commandNo;
   uint16_t status;
   uint8_t* pNextOp;
   ratmr_t startTime;
   struct {
      uint8_t triggerType:4;
      uint8_t bEnaCmd:1;
      uint8_t triggerNo:2;
      uint8_t pastTrig:1;
   } startTrigger;
   struct {
      uint8_t rule:4;
      uint8_t nSkip:4;
   } condition;
   struct {
      uint8_t bFsOff:1;
      uint8_t :2;
      uint8_t bUseCrc:1;
      uint8_t bVarLen:1;
   } pktConf;
   uint8_t pktLen;
   uint32_t syncWord;
   uint8_t* pPkt;
} rfCoreHal_CMD_PROP_TX_t;

#define CMD_PROP_RX                                             0x3802
#define _POSITION_CMD_PROP_RX_pktConf                           14
#define _TYPE_CMD_PROP_RX_pktConf                               uint8_t
#define _BITPOS_CMD_PROP_RX_pktConf_bFsOff                      0
#define _NBITS_CMD_PROP_RX_pktConf_bFsOff                       1
#define _BITPOS_CMD_PROP_RX_pktConf_bRepeatOk                   1
#define _NBITS_CMD_PROP_RX_pktConf_bRepeatOk                    1
#define _BITPOS_CMD_PROP_RX_pktConf_bRepeatNok                  2
#define _NBITS_CMD_PROP_RX_pktConf_bRepeatNok                   1
#define _BITPOS_CMD_PROP_RX_pktConf_bUseCrc                     3
#define _NBITS_CMD_PROP_RX_pktConf_bUseCrc                      1
#define _BITPOS_CMD_PROP_RX_pktConf_bVarLen                     4
#define _NBITS_CMD_PROP_RX_pktConf_bVarLen                      1
#define _BITPOS_CMD_PROP_RX_pktConf_bChkAddress                 5
#define _NBITS_CMD_PROP_RX_pktConf_bChkAddress                  1
#define _BITPOS_CMD_PROP_RX_pktConf_endType                     6
#define _NBITS_CMD_PROP_RX_pktConf_endType                      1
#define _BITPOS_CMD_PROP_RX_pktConf_filterOp                    7
#define _NBITS_CMD_PROP_RX_pktConf_filterOp                     1
#define _POSITION_CMD_PROP_RX_rxConf                            15
#define _TYPE_CMD_PROP_RX_rxConf                                uint8_t
#define _BITPOS_CMD_PROP_RX_rxConf_bAutoFlushIgnored            0
#define _NBITS_CMD_PROP_RX_rxConf_bAutoFlushIgnored             1
#define _BITPOS_CMD_PROP_RX_rxConf_bAutoFlushCrcErr             1
#define _NBITS_CMD_PROP_RX_rxConf_bAutoFlushCrcErr              1
#define _BITPOS_CMD_PROP_RX_rxConf_bIncludeHdr                  3
#define _NBITS_CMD_PROP_RX_rxConf_bIncludeHdr                   1
#define _BITPOS_CMD_PROP_RX_rxConf_bIncludeCrc                  4
#define _NBITS_CMD_PROP_RX_rxConf_bIncludeCrc                   1
#define _BITPOS_CMD_PROP_RX_rxConf_bAppendRssi                  5
#define _NBITS_CMD_PROP_RX_rxConf_bAppendRssi                   1
#define _BITPOS_CMD_PROP_RX_rxConf_bAppendTimestamp             6
#define _NBITS_CMD_PROP_RX_rxConf_bAppendTimestamp              1
#define _BITPOS_CMD_PROP_RX_rxConf_bAppendStatus                7
#define _NBITS_CMD_PROP_RX_rxConf_bAppendStatus                 1
#define _POSITION_CMD_PROP_RX_syncWord                          16
#define _TYPE_CMD_PROP_RX_syncWord                              uint32_t
#define _POSITION_CMD_PROP_RX_maxPktLen                         20
#define _TYPE_CMD_PROP_RX_maxPktLen                             uint8_t
#define _POSITION_CMD_PROP_RX_address0                          21
#define _TYPE_CMD_PROP_RX_address0                              uint8_t
#define _POSITION_CMD_PROP_RX_address1                          22
#define _TYPE_CMD_PROP_RX_address1                              uint8_t
#define _POSITION_CMD_PROP_RX_endTrigger                        23
#define _TYPE_CMD_PROP_RX_endTrigger                            uint8_t
#define _BITPOS_CMD_PROP_RX_endTrigger_triggerType              0
#define _NBITS_CMD_PROP_RX_endTrigger_triggerType               4
#define _BITPOS_CMD_PROP_RX_endTrigger_bEnaCmd                  4
#define _NBITS_CMD_PROP_RX_endTrigger_bEnaCmd                   1
#define _BITPOS_CMD_PROP_RX_endTrigger_triggerNo                5
#define _NBITS_CMD_PROP_RX_endTrigger_triggerNo                 2
#define _BITPOS_CMD_PROP_RX_endTrigger_pastTrig                 7
#define _NBITS_CMD_PROP_RX_endTrigger_pastTrig                  1
#define _POSITION_CMD_PROP_RX_endTime                           24
#define _TYPE_CMD_PROP_RX_endTime                               ratmr_t
#define _POSITION_CMD_PROP_RX_pQueue                            28
#define _TYPE_CMD_PROP_RX_pQueue                                dataQueue_t*
#define _POSITION_CMD_PROP_RX_pOutput                           32
#define _TYPE_CMD_PROP_RX_pOutput                               uint8_t*
#define _LAST_POSITION_CMD_PROP_RX                              32
#define _LAST_TYPE_CMD_PROP_RX                                  uint8_t*

typedef struct {
   uint16_t commandNo;
   uint16_t status;
   uint8_t* pNextOp;
   ratmr_t startTime;
   struct {
      uint8_t triggerType:4;
      uint8_t bEnaCmd:1;
      uint8_t triggerNo:2;
      uint8_t pastTrig:1;
   } startTrigger;
   struct {
      uint8_t rule:4;
      uint8_t nSkip:4;
   } condition;
   struct {
      uint8_t bFsOff:1;
      uint8_t bRepeatOk:1;
      uint8_t bRepeatNok:1;
      uint8_t bUseCrc:1;
      uint8_t bVarLen:1;
      uint8_t bChkAddress:1;
      uint8_t endType:1;
      uint8_t filterOp:1;
   } pktConf;
   struct {
      uint8_t bAutoFlushIgnored:1;
      uint8_t bAutoFlushCrcErr:1;
      uint8_t :1;
      uint8_t bIncludeHdr:1;
      uint8_t bIncludeCrc:1;
      uint8_t bAppendRssi:1;
      uint8_t bAppendTimestamp:1;
      uint8_t bAppendStatus:1;
   } rxConf;
   uint32_t syncWord;
   uint8_t maxPktLen;
   uint8_t address0;
   uint8_t address1;
   struct {
      uint8_t triggerType:4;
      uint8_t bEnaCmd:1;
      uint8_t triggerNo:2;
      uint8_t pastTrig:1;
   } endTrigger;
   ratmr_t endTime;
   dataQueue_t* pQueue;
   uint8_t* pOutput;
} rfCoreHal_CMD_PROP_RX_t;

#define CMD_PROP_TX_ADV                                         0x3803
#define _POSITION_CMD_PROP_TX_ADV_pktConf                       14
#define _TYPE_CMD_PROP_TX_ADV_pktConf                           uint8_t
#define _BITPOS_CMD_PROP_TX_ADV_pktConf_bFsOff                  0
#define _NBITS_CMD_PROP_TX_ADV_pktConf_bFsOff                   1
#define _BITPOS_CMD_PROP_TX_ADV_pktConf_bUseCrc                 3
#define _NBITS_CMD_PROP_TX_ADV_pktConf_bUseCrc                  1
#define _BITPOS_CMD_PROP_TX_ADV_pktConf_bCrcIncSw               4
#define _NBITS_CMD_PROP_TX_ADV_pktConf_bCrcIncSw                1
#define _BITPOS_CMD_PROP_TX_ADV_pktConf_bCrcIncHdr              5
#define _NBITS_CMD_PROP_TX_ADV_pktConf_bCrcIncHdr               1
#define _POSITION_CMD_PROP_TX_ADV_numHdrBits                    15
#define _TYPE_CMD_PROP_TX_ADV_numHdrBits                        uint8_t
#define _POSITION_CMD_PROP_TX_ADV_pktLen                        16
#define _TYPE_CMD_PROP_TX_ADV_pktLen                            uint16_t
#define _POSITION_CMD_PROP_TX_ADV_startConf                     18
#define _TYPE_CMD_PROP_TX_ADV_startConf                         uint8_t
#define _BITPOS_CMD_PROP_TX_ADV_startConf_bExtTxTrig            0
#define _NBITS_CMD_PROP_TX_ADV_startConf_bExtTxTrig             1
#define _BITPOS_CMD_PROP_TX_ADV_startConf_inputMode             1
#define _NBITS_CMD_PROP_TX_ADV_startConf_inputMode              2
#define _BITPOS_CMD_PROP_TX_ADV_startConf_source                3
#define _NBITS_CMD_PROP_TX_ADV_startConf_source                 5
#define _POSITION_CMD_PROP_TX_ADV_preTrigger                    19
#define _TYPE_CMD_PROP_TX_ADV_preTrigger                        uint8_t
#define _BITPOS_CMD_PROP_TX_ADV_preTrigger_triggerType          0
#define _NBITS_CMD_PROP_TX_ADV_preTrigger_triggerType           4
#define _BITPOS_CMD_PROP_TX_ADV_preTrigger_bEnaCmd              4
#define _NBITS_CMD_PROP_TX_ADV_preTrigger_bEnaCmd               1
#define _BITPOS_CMD_PROP_TX_ADV_preTrigger_triggerNo            5
#define _NBITS_CMD_PROP_TX_ADV_preTrigger_triggerNo             2
#define _BITPOS_CMD_PROP_TX_ADV_preTrigger_pastTrig             7
#define _NBITS_CMD_PROP_TX_ADV_preTrigger_pastTrig              1
#define _POSITION_CMD_PROP_TX_ADV_preTime                       20
#define _TYPE_CMD_PROP_TX_ADV_preTime                           ratmr_t
#define _POSITION_CMD_PROP_TX_ADV_syncWord                      24
#define _TYPE_CMD_PROP_TX_ADV_syncWord                          uint32_t
#define _POSITION_CMD_PROP_TX_ADV_pPkt                          28
#define _TYPE_CMD_PROP_TX_ADV_pPkt                              uint8_t*
#define _LAST_POSITION_CMD_PROP_TX_ADV                          28
#define _LAST_TYPE_CMD_PROP_TX_ADV                              uint8_t*

typedef struct {
   uint16_t commandNo;
   uint16_t status;
   uint8_t* pNextOp;
   ratmr_t startTime;
   struct {
      uint8_t triggerType:4;
      uint8_t bEnaCmd:1;
      uint8_t triggerNo:2;
      uint8_t pastTrig:1;
   } startTrigger;
   struct {
      uint8_t rule:4;
      uint8_t nSkip:4;
   } condition;
   struct {
      uint8_t bFsOff:1;
      uint8_t :2;
      uint8_t bUseCrc:1;
      uint8_t bCrcIncSw:1;
      uint8_t bCrcIncHdr:1;
   } pktConf;
   uint8_t numHdrBits;
   uint16_t pktLen;
   struct {
      uint8_t bExtTxTrig:1;
      uint8_t inputMode:2;
      uint8_t source:5;
   } startConf;
   struct {
      uint8_t triggerType:4;
      uint8_t bEnaCmd:1;
      uint8_t triggerNo:2;
      uint8_t pastTrig:1;
   } preTrigger;
   ratmr_t preTime;
   uint32_t syncWord;
   uint8_t* pPkt;
} rfCoreHal_CMD_PROP_TX_ADV_t;

#define CMD_PROP_RX_ADV                                         0x3804
#define _POSITION_CMD_PROP_RX_ADV_pktConf                       14
#define _TYPE_CMD_PROP_RX_ADV_pktConf                           uint8_t
#define _BITPOS_CMD_PROP_RX_ADV_pktConf_bFsOff                  0
#define _NBITS_CMD_PROP_RX_ADV_pktConf_bFsOff                   1
#define _BITPOS_CMD_PROP_RX_ADV_pktConf_bRepeatOk               1
#define _NBITS_CMD_PROP_RX_ADV_pktConf_bRepeatOk                1
#define _BITPOS_CMD_PROP_RX_ADV_pktConf_bRepeatNok              2
#define _NBITS_CMD_PROP_RX_ADV_pktConf_bRepeatNok               1
#define _BITPOS_CMD_PROP_RX_ADV_pktConf_bUseCrc                 3
#define _NBITS_CMD_PROP_RX_ADV_pktConf_bUseCrc                  1
#define _BITPOS_CMD_PROP_RX_ADV_pktConf_bCrcIncSw               4
#define _NBITS_CMD_PROP_RX_ADV_pktConf_bCrcIncSw                1
#define _BITPOS_CMD_PROP_RX_ADV_pktConf_bCrcIncHdr              5
#define _NBITS_CMD_PROP_RX_ADV_pktConf_bCrcIncHdr               1
#define _BITPOS_CMD_PROP_RX_ADV_pktConf_endType                 6
#define _NBITS_CMD_PROP_RX_ADV_pktConf_endType                  1
#define _BITPOS_CMD_PROP_RX_ADV_pktConf_filterOp                7
#define _NBITS_CMD_PROP_RX_ADV_pktConf_filterOp                 1
#define _POSITION_CMD_PROP_RX_ADV_rxConf                        15
#define _TYPE_CMD_PROP_RX_ADV_rxConf                            uint8_t
#define _BITPOS_CMD_PROP_RX_ADV_rxConf_bAutoFlushIgnored        0
#define _NBITS_CMD_PROP_RX_ADV_rxConf_bAutoFlushIgnored         1
#define _BITPOS_CMD_PROP_RX_ADV_rxConf_bAutoFlushCrcErr         1
#define _NBITS_CMD_PROP_RX_ADV_rxConf_bAutoFlushCrcErr          1
#define _BITPOS_CMD_PROP_RX_ADV_rxConf_bIncludeHdr              3
#define _NBITS_CMD_PROP_RX_ADV_rxConf_bIncludeHdr               1
#define _BITPOS_CMD_PROP_RX_ADV_rxConf_bIncludeCrc              4
#define _NBITS_CMD_PROP_RX_ADV_rxConf_bIncludeCrc               1
#define _BITPOS_CMD_PROP_RX_ADV_rxConf_bAppendRssi              5
#define _NBITS_CMD_PROP_RX_ADV_rxConf_bAppendRssi               1
#define _BITPOS_CMD_PROP_RX_ADV_rxConf_bAppendTimestamp         6
#define _NBITS_CMD_PROP_RX_ADV_rxConf_bAppendTimestamp          1
#define _BITPOS_CMD_PROP_RX_ADV_rxConf_bAppendStatus            7
#define _NBITS_CMD_PROP_RX_ADV_rxConf_bAppendStatus             1
#define _POSITION_CMD_PROP_RX_ADV_syncWord0                     16
#define _TYPE_CMD_PROP_RX_ADV_syncWord0                         uint32_t
#define _POSITION_CMD_PROP_RX_ADV_syncWord1                     20
#define _TYPE_CMD_PROP_RX_ADV_syncWord1                         uint32_t
#define _POSITION_CMD_PROP_RX_ADV_maxPktLen                     24
#define _TYPE_CMD_PROP_RX_ADV_maxPktLen                         uint16_t
#define _POSITION_CMD_PROP_RX_ADV_hdrConf                       26
#define _TYPE_CMD_PROP_RX_ADV_hdrConf                           uint16_t
#define _BITPOS_CMD_PROP_RX_ADV_hdrConf_numHdrBits              0
#define _NBITS_CMD_PROP_RX_ADV_hdrConf_numHdrBits               6
#define _BITPOS_CMD_PROP_RX_ADV_hdrConf_lenPos                  6
#define _NBITS_CMD_PROP_RX_ADV_hdrConf_lenPos                   5
#define _BITPOS_CMD_PROP_RX_ADV_hdrConf_numLenBits              11
#define _NBITS_CMD_PROP_RX_ADV_hdrConf_numLenBits               5
#define _POSITION_CMD_PROP_RX_ADV_addrConf                      28
#define _TYPE_CMD_PROP_RX_ADV_addrConf                          uint16_t
#define _BITPOS_CMD_PROP_RX_ADV_addrConf_addrType               0
#define _NBITS_CMD_PROP_RX_ADV_addrConf_addrType                1
#define _BITPOS_CMD_PROP_RX_ADV_addrConf_addrSize               1
#define _NBITS_CMD_PROP_RX_ADV_addrConf_addrSize                5
#define _BITPOS_CMD_PROP_RX_ADV_addrConf_addrPos                6
#define _NBITS_CMD_PROP_RX_ADV_addrConf_addrPos                 5
#define _BITPOS_CMD_PROP_RX_ADV_addrConf_numAddr                11
#define _NBITS_CMD_PROP_RX_ADV_addrConf_numAddr                 5
#define _POSITION_CMD_PROP_RX_ADV_lenOffset                     30
#define _TYPE_CMD_PROP_RX_ADV_lenOffset                         int8_t
#define _POSITION_CMD_PROP_RX_ADV_endTrigger                    31
#define _TYPE_CMD_PROP_RX_ADV_endTrigger                        uint8_t
#define _BITPOS_CMD_PROP_RX_ADV_endTrigger_triggerType          0
#define _NBITS_CMD_PROP_RX_ADV_endTrigger_triggerType           4
#define _BITPOS_CMD_PROP_RX_ADV_endTrigger_bEnaCmd              4
#define _NBITS_CMD_PROP_RX_ADV_endTrigger_bEnaCmd               1
#define _BITPOS_CMD_PROP_RX_ADV_endTrigger_triggerNo            5
#define _NBITS_CMD_PROP_RX_ADV_endTrigger_triggerNo             2
#define _BITPOS_CMD_PROP_RX_ADV_endTrigger_pastTrig             7
#define _NBITS_CMD_PROP_RX_ADV_endTrigger_pastTrig              1
#define _POSITION_CMD_PROP_RX_ADV_endTime                       32
#define _TYPE_CMD_PROP_RX_ADV_endTime                           ratmr_t
#define _POSITION_CMD_PROP_RX_ADV_pAddr                         36
#define _TYPE_CMD_PROP_RX_ADV_pAddr                             uint8_t*
#define _POSITION_CMD_PROP_RX_ADV_pQueue                        40
#define _TYPE_CMD_PROP_RX_ADV_pQueue                            dataQueue_t*
#define _POSITION_CMD_PROP_RX_ADV_pOutput                       44
#define _TYPE_CMD_PROP_RX_ADV_pOutput                           uint8_t*
#define _LAST_POSITION_CMD_PROP_RX_ADV                          44
#define _LAST_TYPE_CMD_PROP_RX_ADV                              uint8_t*

typedef struct {
   uint16_t commandNo;
   uint16_t status;
   uint8_t* pNextOp;
   ratmr_t startTime;
   struct {
      uint8_t triggerType:4;
      uint8_t bEnaCmd:1;
      uint8_t triggerNo:2;
      uint8_t pastTrig:1;
   } startTrigger;
   struct {
      uint8_t rule:4;
      uint8_t nSkip:4;
   } condition;
   struct {
      uint8_t bFsOff:1;
      uint8_t bRepeatOk:1;
      uint8_t bRepeatNok:1;
      uint8_t bUseCrc:1;
      uint8_t bCrcIncSw:1;
      uint8_t bCrcIncHdr:1;
      uint8_t endType:1;
      uint8_t filterOp:1;
   } pktConf;
   struct {
      uint8_t bAutoFlushIgnored:1;
      uint8_t bAutoFlushCrcErr:1;
      uint8_t :1;
      uint8_t bIncludeHdr:1;
      uint8_t bIncludeCrc:1;
      uint8_t bAppendRssi:1;
      uint8_t bAppendTimestamp:1;
      uint8_t bAppendStatus:1;
   } rxConf;
   uint32_t syncWord0;
   uint32_t syncWord1;
   uint16_t maxPktLen;
   struct {
      uint16_t numHdrBits:6;
      uint16_t lenPos:5;
      uint16_t numLenBits:5;
   } hdrConf;
   struct {
      uint16_t addrType:1;
      uint16_t addrSize:5;
      uint16_t addrPos:5;
      uint16_t numAddr:5;
   } addrConf;
   int8_t lenOffset;
   struct {
      uint8_t triggerType:4;
      uint8_t bEnaCmd:1;
      uint8_t triggerNo:2;
      uint8_t pastTrig:1;
   } endTrigger;
   ratmr_t endTime;
   uint8_t* pAddr;
   dataQueue_t* pQueue;
   uint8_t* pOutput;
} rfCoreHal_CMD_PROP_RX_ADV_t;

#define CMD_PROP_CS                                             0x3805
#define _POSITION_CMD_PROP_CS_csConf                            14
#define _TYPE_CMD_PROP_CS_csConf                                uint16_t
#define _BITPOS_CMD_PROP_CS_csConf_bEnaRssi                     0
#define _NBITS_CMD_PROP_CS_csConf_bEnaRssi                      1
#define _BITPOS_CMD_PROP_CS_csConf_bEnaCorr                     1
#define _NBITS_CMD_PROP_CS_csConf_bEnaCorr                      1
#define _BITPOS_CMD_PROP_CS_csConf_operation                    2
#define _NBITS_CMD_PROP_CS_csConf_operation                     1
#define _BITPOS_CMD_PROP_CS_csConf_busyOp                       3
#define _NBITS_CMD_PROP_CS_csConf_busyOp                        2
#define _BITPOS_CMD_PROP_CS_csConf_idleOp                       5
#define _NBITS_CMD_PROP_CS_csConf_idleOp                        2
#define _BITPOS_CMD_PROP_CS_csConf_timeoutRes                   7
#define _NBITS_CMD_PROP_CS_csConf_timeoutRes                    1
#define _BITPOS_CMD_PROP_CS_csConf_busyTimeoutOp                8
#define _NBITS_CMD_PROP_CS_csConf_busyTimeoutOp                 1
#define _BITPOS_CMD_PROP_CS_csConf_idleTimeoutOp                9
#define _NBITS_CMD_PROP_CS_csConf_idleTimeoutOp                 1
#define _POSITION_CMD_PROP_CS_rssiThr                           16
#define _TYPE_CMD_PROP_CS_rssiThr                               int8_t
#define _POSITION_CMD_PROP_CS_numRssiIdle                       17
#define _TYPE_CMD_PROP_CS_numRssiIdle                           uint8_t
#define _POSITION_CMD_PROP_CS_numRssiBusy                       18
#define _TYPE_CMD_PROP_CS_numRssiBusy                           uint8_t
#define _POSITION_CMD_PROP_CS_timeoutTrigger                    19
#define _TYPE_CMD_PROP_CS_timeoutTrigger                        uint8_t
#define _BITPOS_CMD_PROP_CS_timeoutTrigger_triggerType          0
#define _NBITS_CMD_PROP_CS_timeoutTrigger_triggerType           4
#define _BITPOS_CMD_PROP_CS_timeoutTrigger_bEnaCmd              4
#define _NBITS_CMD_PROP_CS_timeoutTrigger_bEnaCmd               1
#define _BITPOS_CMD_PROP_CS_timeoutTrigger_triggerNo            5
#define _NBITS_CMD_PROP_CS_timeoutTrigger_triggerNo             2
#define _BITPOS_CMD_PROP_CS_timeoutTrigger_pastTrig             7
#define _NBITS_CMD_PROP_CS_timeoutTrigger_pastTrig              1
#define _POSITION_CMD_PROP_CS_timeoutTime                       20
#define _TYPE_CMD_PROP_CS_timeoutTime                           ratmr_t
#define _POSITION_CMD_PROP_CS_corrTime                          24
#define _TYPE_CMD_PROP_CS_corrTime                              uint16_t
#define _LAST_POSITION_CMD_PROP_CS                              24
#define _LAST_TYPE_CMD_PROP_CS                                  uint16_t

typedef struct {
   uint16_t commandNo;
   uint16_t status;
   uint8_t* pNextOp;
   ratmr_t startTime;
   struct {
      uint8_t triggerType:4;
      uint8_t bEnaCmd:1;
      uint8_t triggerNo:2;
      uint8_t pastTrig:1;
   } startTrigger;
   struct {
      uint8_t rule:4;
      uint8_t nSkip:4;
   } condition;
   struct {
      uint16_t bEnaRssi:1;
      uint16_t bEnaCorr:1;
      uint16_t operation:1;
      uint16_t busyOp:2;
      uint16_t idleOp:2;
      uint16_t timeoutRes:1;
      uint16_t busyTimeoutOp:1;
      uint16_t idleTimeoutOp:1;
   } csConf;
   int8_t rssiThr;
   uint8_t numRssiIdle;
   uint8_t numRssiBusy;
   struct {
      uint8_t triggerType:4;
      uint8_t bEnaCmd:1;
      uint8_t triggerNo:2;
      uint8_t pastTrig:1;
   } timeoutTrigger;
   ratmr_t timeoutTime;
   uint16_t corrTime;
} rfCoreHal_CMD_PROP_CS_t;

#define CMD_PROP_RADIO_SETUP                                    0x3806
#define _POSITION_CMD_PROP_RADIO_SETUP_modulation               14
#define _TYPE_CMD_PROP_RADIO_SETUP_modulation                   uint16_t
#define _BITPOS_CMD_PROP_RADIO_SETUP_modulation_modType         0
#define _NBITS_CMD_PROP_RADIO_SETUP_modulation_modType          3
#define _BITPOS_CMD_PROP_RADIO_SETUP_modulation_deviation       3
#define _NBITS_CMD_PROP_RADIO_SETUP_modulation_deviation        13
#define _POSITION_CMD_PROP_RADIO_SETUP_symbolRate               16
#define _TYPE_CMD_PROP_RADIO_SETUP_symbolRate                   uint32_t
#define _BITPOS_CMD_PROP_RADIO_SETUP_symbolRate_preScale        0
#define _NBITS_CMD_PROP_RADIO_SETUP_symbolRate_preScale         4
#define _BITPOS_CMD_PROP_RADIO_SETUP_symbolRate_rateWord        8
#define _NBITS_CMD_PROP_RADIO_SETUP_symbolRate_rateWord         21
#define _POSITION_CMD_PROP_RADIO_SETUP_rxBw                     20
#define _TYPE_CMD_PROP_RADIO_SETUP_rxBw                         uint8_t
#define _POSITION_CMD_PROP_RADIO_SETUP_preamConf                21
#define _TYPE_CMD_PROP_RADIO_SETUP_preamConf                    uint8_t
#define _BITPOS_CMD_PROP_RADIO_SETUP_preamConf_nPreamBytes      0
#define _NBITS_CMD_PROP_RADIO_SETUP_preamConf_nPreamBytes       6
#define _BITPOS_CMD_PROP_RADIO_SETUP_preamConf_preamMode        6
#define _NBITS_CMD_PROP_RADIO_SETUP_preamConf_preamMode         2
#define _POSITION_CMD_PROP_RADIO_SETUP_formatConf               22
#define _TYPE_CMD_PROP_RADIO_SETUP_formatConf                   uint16_t
#define _BITPOS_CMD_PROP_RADIO_SETUP_formatConf_nSwBits         0
#define _NBITS_CMD_PROP_RADIO_SETUP_formatConf_nSwBits          6
#define _BITPOS_CMD_PROP_RADIO_SETUP_formatConf_bBitReversal    6
#define _NBITS_CMD_PROP_RADIO_SETUP_formatConf_bBitReversal     1
#define _BITPOS_CMD_PROP_RADIO_SETUP_formatConf_bMsbFirst       7
#define _NBITS_CMD_PROP_RADIO_SETUP_formatConf_bMsbFirst        1
#define _BITPOS_CMD_PROP_RADIO_SETUP_formatConf_fecMode         8
#define _NBITS_CMD_PROP_RADIO_SETUP_formatConf_fecMode          4
#define _BITPOS_CMD_PROP_RADIO_SETUP_formatConf_bOuterCode      12
#define _NBITS_CMD_PROP_RADIO_SETUP_formatConf_bOuterCode       1
#define _BITPOS_CMD_PROP_RADIO_SETUP_formatConf_whitenMode      13
#define _NBITS_CMD_PROP_RADIO_SETUP_formatConf_whitenMode       2
#define _BITPOS_CMD_PROP_RADIO_SETUP_formatConf_bAgcDisable     15
#define _NBITS_CMD_PROP_RADIO_SETUP_formatConf_bAgcDisable      1
#define _POSITION_CMD_PROP_RADIO_SETUP_config                   24
#define _TYPE_CMD_PROP_RADIO_SETUP_config                       uint16_t
#define _BITPOS_CMD_PROP_RADIO_SETUP_config_frontEndMode        0
#define _NBITS_CMD_PROP_RADIO_SETUP_config_frontEndMode         3
#define _BITPOS_CMD_PROP_RADIO_SETUP_config_biasMode            3
#define _NBITS_CMD_PROP_RADIO_SETUP_config_biasMode             1
#define _BITPOS_CMD_PROP_RADIO_SETUP_config_bNoAdi0Setup        4
#define _NBITS_CMD_PROP_RADIO_SETUP_config_bNoAdi0Setup         1
#define _BITPOS_CMD_PROP_RADIO_SETUP_config_bNoAdi0Trim         5
#define _NBITS_CMD_PROP_RADIO_SETUP_config_bNoAdi0Trim          1
#define _BITPOS_CMD_PROP_RADIO_SETUP_config_bNoAdi0Ovr          6
#define _NBITS_CMD_PROP_RADIO_SETUP_config_bNoAdi0Ovr           1
#define _BITPOS_CMD_PROP_RADIO_SETUP_config_bNoAdi1Setup        7
#define _NBITS_CMD_PROP_RADIO_SETUP_config_bNoAdi1Setup         1
#define _BITPOS_CMD_PROP_RADIO_SETUP_config_bNoAdi1Trim         8
#define _NBITS_CMD_PROP_RADIO_SETUP_config_bNoAdi1Trim          1
#define _BITPOS_CMD_PROP_RADIO_SETUP_config_bNoAdi1Ovr          9
#define _NBITS_CMD_PROP_RADIO_SETUP_config_bNoAdi1Ovr           1
#define _BITPOS_CMD_PROP_RADIO_SETUP_config_bNoFsPowerUp        10
#define _NBITS_CMD_PROP_RADIO_SETUP_config_bNoFsPowerUp         1
#define _POSITION_CMD_PROP_RADIO_SETUP_txPower                  26
#define _TYPE_CMD_PROP_RADIO_SETUP_txPower                      uint16_t
#define _BITPOS_CMD_PROP_RADIO_SETUP_txPower_IB                 0
#define _NBITS_CMD_PROP_RADIO_SETUP_txPower_IB                  6
#define _BITPOS_CMD_PROP_RADIO_SETUP_txPower_GC                 6
#define _NBITS_CMD_PROP_RADIO_SETUP_txPower_GC                  2
#define _BITPOS_CMD_PROP_RADIO_SETUP_txPower_tempCoeff          8
#define _NBITS_CMD_PROP_RADIO_SETUP_txPower_tempCoeff           8
#define _POSITION_CMD_PROP_RADIO_SETUP_pRegOverride             28
#define _TYPE_CMD_PROP_RADIO_SETUP_pRegOverride                 uint32_t*
#define _LAST_POSITION_CMD_PROP_RADIO_SETUP                     28
#define _LAST_TYPE_CMD_PROP_RADIO_SETUP                         uint32_t*

typedef struct {
   uint16_t commandNo;
   uint16_t status;
   uint8_t* pNextOp;
   ratmr_t startTime;
   struct {
      uint8_t triggerType:4;
      uint8_t bEnaCmd:1;
      uint8_t triggerNo:2;
      uint8_t pastTrig:1;
   } startTrigger;
   struct {
      uint8_t rule:4;
      uint8_t nSkip:4;
   } condition;
   struct {
      uint16_t modType:3;
      uint16_t deviation:13;
   } modulation;
   struct {
      uint32_t preScale:4;
      uint32_t :4;
      uint32_t rateWord:21;
   } symbolRate;
   uint8_t rxBw;
   struct {
      uint8_t nPreamBytes:6;
      uint8_t preamMode:2;
   } preamConf;
   struct {
      uint16_t nSwBits:6;
      uint16_t bBitReversal:1;
      uint16_t bMsbFirst:1;
      uint16_t fecMode:4;
      uint16_t bOuterCode:1;
      uint16_t whitenMode:2;
      uint16_t bAgcDisable:1;
   } formatConf;
   struct {
      uint16_t frontEndMode:3;
      uint16_t biasMode:1;
      uint16_t bNoAdi0Setup:1;
      uint16_t bNoAdi0Trim:1;
      uint16_t bNoAdi0Ovr:1;
      uint16_t bNoAdi1Setup:1;
      uint16_t bNoAdi1Trim:1;
      uint16_t bNoAdi1Ovr:1;
      uint16_t bNoFsPowerUp:1;
   } config;
   struct {
      uint16_t IB:6;
      uint16_t GC:2;
      uint16_t tempCoeff:8;
   } txPower;
   uint32_t* pRegOverride;
} rfCoreHal_CMD_PROP_RADIO_SETUP_t;

#define CMD_PROP_SET_LEN                                        0x3401
#define _POSITION_CMD_PROP_SET_LEN_rxLen                        2
#define _TYPE_CMD_PROP_SET_LEN_rxLen                            uint16_t
#define _LAST_POSITION_CMD_PROP_SET_LEN                         2
#define _LAST_TYPE_CMD_PROP_SET_LEN                             uint16_t

typedef struct {
   uint16_t commandNo;
   uint16_t rxLen;
} rfCoreHal_CMD_PROP_SET_LEN_t;

#define CMD_PROP_RESTART_RX                                     0x3402
#define _LAST_POSITION_CMD_PROP_RESTART_RX                      0
#define _LAST_TYPE_CMD_PROP_RESTART_RX                          uint16_t

typedef struct {
   uint16_t commandNo;
} rfCoreHal_CMD_PROP_RESTART_RX_t;

#define _POSITION_propRxOutput_nRxOk                            0
#define _TYPE_propRxOutput_nRxOk                                uint16_t
#define _POSITION_propRxOutput_nRxNok                           2
#define _TYPE_propRxOutput_nRxNok                               uint16_t
#define _POSITION_propRxOutput_nRxIgnored                       4
#define _TYPE_propRxOutput_nRxIgnored                           uint8_t
#define _POSITION_propRxOutput_nRxStopped                       5
#define _TYPE_propRxOutput_nRxStopped                           uint8_t
#define _POSITION_propRxOutput_nRxBufFull                       6
#define _TYPE_propRxOutput_nRxBufFull                           uint8_t
#define _POSITION_propRxOutput_lastRssi                         7
#define _TYPE_propRxOutput_lastRssi                             int8_t
#define _POSITION_propRxOutput_timeStamp                        8
#define _TYPE_propRxOutput_timeStamp                            ratmr_t
#define _LAST_POSITION_propRxOutput                             8
#define _LAST_TYPE_propRxOutput                                 ratmr_t

typedef struct {
   uint16_t nRxOk;
   uint16_t nRxNok;
   uint8_t nRxIgnored;
   uint8_t nRxStopped;
   uint8_t nRxBufFull;
   int8_t lastRssi;
   ratmr_t timeStamp;
} rfCoreHal_propRxOutput_t;

#define _POSITION_propRxStatus_status                           0
#define _TYPE_propRxStatus_status                               uint8_t
#define _BITPOS_propRxStatus_status_addressInd                  0
#define _NBITS_propRxStatus_status_addressInd                   5
#define _BITPOS_propRxStatus_status_syncWordId                  5
#define _NBITS_propRxStatus_status_syncWordId                   1
#define _BITPOS_propRxStatus_status_result                      6
#define _NBITS_propRxStatus_status_result                       2
#define _LAST_POSITION_propRxStatus                             0
#define _LAST_TYPE_propRxStatus                                 uint8_t

typedef struct {
   struct {
      uint8_t addressInd:5;
      uint8_t syncWordId:1;
      uint8_t result:2;
   } status;
} rfCoreHal_propRxStatus_t;

#endif
