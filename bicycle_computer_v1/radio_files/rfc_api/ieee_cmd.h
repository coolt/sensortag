//------------------------------------------------------------------------------
// TI Confidential - NDA Restrictions
//
// Copyright (c) 2011 Texas Instruments, Inc.
//
//    This is an unpublished work created in the year stated above.
//    Texas Instruments owns all rights in and to this work and
//    intends to maintain and protect it as an unpublished copyright.
//    In the event of either inadvertent or deliberate publication,
//    the above stated date shall be treated as the year of first
//    publication. In the event of such publication, Texas Instruments
//    intends to enforce its rights in the work under the copyright
//    laws as a published work.
//
//------------------------------------------------------------------------------
///
/// \file            ieee_cmd.h
/// \brief           Definitions of API for IEEE 802.15.4 commands
///
///                  This file is generated by create_command.pl
///
/// \author          Low Power RF Wireless Business Unit
///                  Helge Coward (h.coward@ti.com)
///
/// \date            Thu Nov 17 10:26:10 CET 2011
///
//------------------------------------------------------------------------------

#ifndef __IEEE_PAR_H
#define __IEEE_PAR_H

#include <stdint.h>
#include "mailbox.h"

#define CMD_IEEE_RX                                             0x2801
#define _POSITION_CMD_IEEE_RX_channel                           14
#define _TYPE_CMD_IEEE_RX_channel                               uint8_t
#define _POSITION_CMD_IEEE_RX_rxConfig                          15
#define _TYPE_CMD_IEEE_RX_rxConfig                              uint8_t
#define _BITPOS_CMD_IEEE_RX_rxConfig_bAutoFlushCrc              0
#define _NBITS_CMD_IEEE_RX_rxConfig_bAutoFlushCrc               1
#define _BITPOS_CMD_IEEE_RX_rxConfig_bAutoFlushIgn              1
#define _NBITS_CMD_IEEE_RX_rxConfig_bAutoFlushIgn               1
#define _BITPOS_CMD_IEEE_RX_rxConfig_bIncludePhyHdr             2
#define _NBITS_CMD_IEEE_RX_rxConfig_bIncludePhyHdr              1
#define _BITPOS_CMD_IEEE_RX_rxConfig_bIncludeCrc                3
#define _NBITS_CMD_IEEE_RX_rxConfig_bIncludeCrc                 1
#define _BITPOS_CMD_IEEE_RX_rxConfig_bAppendRssi                4
#define _NBITS_CMD_IEEE_RX_rxConfig_bAppendRssi                 1
#define _BITPOS_CMD_IEEE_RX_rxConfig_bAppendCorrCrc             5
#define _NBITS_CMD_IEEE_RX_rxConfig_bAppendCorrCrc              1
#define _BITPOS_CMD_IEEE_RX_rxConfig_bAppendSrcInd              6
#define _NBITS_CMD_IEEE_RX_rxConfig_bAppendSrcInd               1
#define _BITPOS_CMD_IEEE_RX_rxConfig_bAppendTimestamp           7
#define _NBITS_CMD_IEEE_RX_rxConfig_bAppendTimestamp            1
#define _POSITION_CMD_IEEE_RX_pRxQ                              16
#define _TYPE_CMD_IEEE_RX_pRxQ                                  dataQueue_t*
#define _POSITION_CMD_IEEE_RX_pOutput                           20
#define _TYPE_CMD_IEEE_RX_pOutput                               uint8_t*
#define _POSITION_CMD_IEEE_RX_frameFiltOpt                      24
#define _TYPE_CMD_IEEE_RX_frameFiltOpt                          uint16_t
#define _BITPOS_CMD_IEEE_RX_frameFiltOpt_frameFiltEn            0
#define _NBITS_CMD_IEEE_RX_frameFiltOpt_frameFiltEn             1
#define _BITPOS_CMD_IEEE_RX_frameFiltOpt_frameFiltStop          1
#define _NBITS_CMD_IEEE_RX_frameFiltOpt_frameFiltStop           1
#define _BITPOS_CMD_IEEE_RX_frameFiltOpt_autoAckEn              2
#define _NBITS_CMD_IEEE_RX_frameFiltOpt_autoAckEn               1
#define _BITPOS_CMD_IEEE_RX_frameFiltOpt_slottedAckEn           3
#define _NBITS_CMD_IEEE_RX_frameFiltOpt_slottedAckEn            1
#define _BITPOS_CMD_IEEE_RX_frameFiltOpt_autoPendEn             4
#define _NBITS_CMD_IEEE_RX_frameFiltOpt_autoPendEn              1
#define _BITPOS_CMD_IEEE_RX_frameFiltOpt_defaultPend            5
#define _NBITS_CMD_IEEE_RX_frameFiltOpt_defaultPend             1
#define _BITPOS_CMD_IEEE_RX_frameFiltOpt_bPendDataReqOnly       6
#define _NBITS_CMD_IEEE_RX_frameFiltOpt_bPendDataReqOnly        1
#define _BITPOS_CMD_IEEE_RX_frameFiltOpt_bPanCoord              7
#define _NBITS_CMD_IEEE_RX_frameFiltOpt_bPanCoord               1
#define _BITPOS_CMD_IEEE_RX_frameFiltOpt_maxFrameVersion        8
#define _NBITS_CMD_IEEE_RX_frameFiltOpt_maxFrameVersion         2
#define _BITPOS_CMD_IEEE_RX_frameFiltOpt_fcfReservedMask        10
#define _NBITS_CMD_IEEE_RX_frameFiltOpt_fcfReservedMask         3
#define _BITPOS_CMD_IEEE_RX_frameFiltOpt_modifyFtFilter         13
#define _NBITS_CMD_IEEE_RX_frameFiltOpt_modifyFtFilter          2
#define _BITPOS_CMD_IEEE_RX_frameFiltOpt_bStrictLenFilter       15
#define _NBITS_CMD_IEEE_RX_frameFiltOpt_bStrictLenFilter        1
#define _POSITION_CMD_IEEE_RX_frameTypes                        26
#define _TYPE_CMD_IEEE_RX_frameTypes                            uint8_t
#define _BITPOS_CMD_IEEE_RX_frameTypes_bAcceptFt0Beacon         0
#define _NBITS_CMD_IEEE_RX_frameTypes_bAcceptFt0Beacon          1
#define _BITPOS_CMD_IEEE_RX_frameTypes_bAcceptFt1Data           1
#define _NBITS_CMD_IEEE_RX_frameTypes_bAcceptFt1Data            1
#define _BITPOS_CMD_IEEE_RX_frameTypes_bAcceptFt2Ack            2
#define _NBITS_CMD_IEEE_RX_frameTypes_bAcceptFt2Ack             1
#define _BITPOS_CMD_IEEE_RX_frameTypes_bAcceptFt3MacCmd         3
#define _NBITS_CMD_IEEE_RX_frameTypes_bAcceptFt3MacCmd          1
#define _BITPOS_CMD_IEEE_RX_frameTypes_bAcceptFt4Reserved       4
#define _NBITS_CMD_IEEE_RX_frameTypes_bAcceptFt4Reserved        1
#define _BITPOS_CMD_IEEE_RX_frameTypes_bAcceptFt5Reserved       5
#define _NBITS_CMD_IEEE_RX_frameTypes_bAcceptFt5Reserved        1
#define _BITPOS_CMD_IEEE_RX_frameTypes_bAcceptFt6Reserved       6
#define _NBITS_CMD_IEEE_RX_frameTypes_bAcceptFt6Reserved        1
#define _BITPOS_CMD_IEEE_RX_frameTypes_bAcceptFt7Reserved       7
#define _NBITS_CMD_IEEE_RX_frameTypes_bAcceptFt7Reserved        1
#define _POSITION_CMD_IEEE_RX_ccaOpt                            27
#define _TYPE_CMD_IEEE_RX_ccaOpt                                uint8_t
#define _BITPOS_CMD_IEEE_RX_ccaOpt_ccaEnEnergy                  0
#define _NBITS_CMD_IEEE_RX_ccaOpt_ccaEnEnergy                   1
#define _BITPOS_CMD_IEEE_RX_ccaOpt_ccaEnCorr                    1
#define _NBITS_CMD_IEEE_RX_ccaOpt_ccaEnCorr                     1
#define _BITPOS_CMD_IEEE_RX_ccaOpt_ccaEnSync                    2
#define _NBITS_CMD_IEEE_RX_ccaOpt_ccaEnSync                     1
#define _BITPOS_CMD_IEEE_RX_ccaOpt_ccaCorrOp                    3
#define _NBITS_CMD_IEEE_RX_ccaOpt_ccaCorrOp                     1
#define _BITPOS_CMD_IEEE_RX_ccaOpt_ccaSyncOp                    4
#define _NBITS_CMD_IEEE_RX_ccaOpt_ccaSyncOp                     1
#define _BITPOS_CMD_IEEE_RX_ccaOpt_ccaCorrThr                   5
#define _NBITS_CMD_IEEE_RX_ccaOpt_ccaCorrThr                    2
#define _POSITION_CMD_IEEE_RX_ccaRssiThr                        28
#define _TYPE_CMD_IEEE_RX_ccaRssiThr                            int8_t
#define _POSITION_CMD_IEEE_RX_numExtEntries                     30
#define _TYPE_CMD_IEEE_RX_numExtEntries                         uint8_t
#define _POSITION_CMD_IEEE_RX_numShortEntries                   31
#define _TYPE_CMD_IEEE_RX_numShortEntries                       uint8_t
#define _POSITION_CMD_IEEE_RX_pExtEntryList                     32
#define _TYPE_CMD_IEEE_RX_pExtEntryList                         uint32_t*
#define _POSITION_CMD_IEEE_RX_pShortEntryList                   36
#define _TYPE_CMD_IEEE_RX_pShortEntryList                       uint32_t*
#define _POSITION_CMD_IEEE_RX_localExtAddr                      40
#define _TYPE_CMD_IEEE_RX_localExtAddr                          uint64_t
#define _POSITION_CMD_IEEE_RX_localShortAddr                    48
#define _TYPE_CMD_IEEE_RX_localShortAddr                        uint16_t
#define _POSITION_CMD_IEEE_RX_localPanID                        50
#define _TYPE_CMD_IEEE_RX_localPanID                            uint16_t
#define _POSITION_CMD_IEEE_RX_endTrigger                        55
#define _TYPE_CMD_IEEE_RX_endTrigger                            uint8_t
#define _BITPOS_CMD_IEEE_RX_endTrigger_triggerType              0
#define _NBITS_CMD_IEEE_RX_endTrigger_triggerType               4
#define _BITPOS_CMD_IEEE_RX_endTrigger_bEnaCmd                  4
#define _NBITS_CMD_IEEE_RX_endTrigger_bEnaCmd                   1
#define _BITPOS_CMD_IEEE_RX_endTrigger_triggerNo                5
#define _NBITS_CMD_IEEE_RX_endTrigger_triggerNo                 2
#define _BITPOS_CMD_IEEE_RX_endTrigger_pastTrig                 7
#define _NBITS_CMD_IEEE_RX_endTrigger_pastTrig                  1
#define _POSITION_CMD_IEEE_RX_endTime                           56
#define _TYPE_CMD_IEEE_RX_endTime                               ratmr_t
#define _LAST_POSITION_CMD_IEEE_RX                              56
#define _LAST_TYPE_CMD_IEEE_RX                                  ratmr_t

typedef struct {
   uint16_t commandNo;
   uint16_t status;
   uint8_t* pNextOp;
   ratmr_t startTime;
   struct {
      uint8_t triggerType:4;
      uint8_t bEnaCmd:1;
      uint8_t triggerNo:2;
      uint8_t pastTrig:1;
   } startTrigger;
   struct {
      uint8_t rule:4;
      uint8_t nSkip:4;
   } condition;
   uint8_t channel;
   struct {
      uint8_t bAutoFlushCrc:1;
      uint8_t bAutoFlushIgn:1;
      uint8_t bIncludePhyHdr:1;
      uint8_t bIncludeCrc:1;
      uint8_t bAppendRssi:1;
      uint8_t bAppendCorrCrc:1;
      uint8_t bAppendSrcInd:1;
      uint8_t bAppendTimestamp:1;
   } rxConfig;
   dataQueue_t* pRxQ;
   uint8_t* pOutput;
   struct {
      uint16_t frameFiltEn:1;
      uint16_t frameFiltStop:1;
      uint16_t autoAckEn:1;
      uint16_t slottedAckEn:1;
      uint16_t autoPendEn:1;
      uint16_t defaultPend:1;
      uint16_t bPendDataReqOnly:1;
      uint16_t bPanCoord:1;
      uint16_t maxFrameVersion:2;
      uint16_t fcfReservedMask:3;
      uint16_t modifyFtFilter:2;
      uint16_t bStrictLenFilter:1;
   } frameFiltOpt;
   struct {
      uint8_t bAcceptFt0Beacon:1;
      uint8_t bAcceptFt1Data:1;
      uint8_t bAcceptFt2Ack:1;
      uint8_t bAcceptFt3MacCmd:1;
      uint8_t bAcceptFt4Reserved:1;
      uint8_t bAcceptFt5Reserved:1;
      uint8_t bAcceptFt6Reserved:1;
      uint8_t bAcceptFt7Reserved:1;
   } frameTypes;
   struct {
      uint8_t ccaEnEnergy:1;
      uint8_t ccaEnCorr:1;
      uint8_t ccaEnSync:1;
      uint8_t ccaCorrOp:1;
      uint8_t ccaSyncOp:1;
      uint8_t ccaCorrThr:2;
   } ccaOpt;
   int8_t ccaRssiThr;
   uint8_t __dummy0;
   uint8_t numExtEntries;
   uint8_t numShortEntries;
   uint32_t* pExtEntryList;
   uint32_t* pShortEntryList;
   uint64_t localExtAddr;
   uint16_t localShortAddr;
   uint16_t localPanID;
   uint16_t __dummy1;
   uint8_t __dummy2;
   struct {
      uint8_t triggerType:4;
      uint8_t bEnaCmd:1;
      uint8_t triggerNo:2;
      uint8_t pastTrig:1;
   } endTrigger;
   ratmr_t endTime;
} rfCoreHal_CMD_IEEE_RX_t;

#define CMD_IEEE_ED_SCAN                                        0x2802
#define _POSITION_CMD_IEEE_ED_SCAN_channel                      14
#define _TYPE_CMD_IEEE_ED_SCAN_channel                          uint8_t
#define _POSITION_CMD_IEEE_ED_SCAN_ccaOpt                       15
#define _TYPE_CMD_IEEE_ED_SCAN_ccaOpt                           uint8_t
#define _BITPOS_CMD_IEEE_ED_SCAN_ccaOpt_ccaEnEnergy             0
#define _NBITS_CMD_IEEE_ED_SCAN_ccaOpt_ccaEnEnergy              1
#define _BITPOS_CMD_IEEE_ED_SCAN_ccaOpt_ccaEnCorr               1
#define _NBITS_CMD_IEEE_ED_SCAN_ccaOpt_ccaEnCorr                1
#define _BITPOS_CMD_IEEE_ED_SCAN_ccaOpt_ccaEnSync               2
#define _NBITS_CMD_IEEE_ED_SCAN_ccaOpt_ccaEnSync                1
#define _BITPOS_CMD_IEEE_ED_SCAN_ccaOpt_ccaCorrOp               3
#define _NBITS_CMD_IEEE_ED_SCAN_ccaOpt_ccaCorrOp                1
#define _BITPOS_CMD_IEEE_ED_SCAN_ccaOpt_ccaSyncOp               4
#define _NBITS_CMD_IEEE_ED_SCAN_ccaOpt_ccaSyncOp                1
#define _BITPOS_CMD_IEEE_ED_SCAN_ccaOpt_ccaCorrThr              5
#define _NBITS_CMD_IEEE_ED_SCAN_ccaOpt_ccaCorrThr               2
#define _POSITION_CMD_IEEE_ED_SCAN_ccaRssiThr                   16
#define _TYPE_CMD_IEEE_ED_SCAN_ccaRssiThr                       int8_t
#define _POSITION_CMD_IEEE_ED_SCAN_maxRssi                      18
#define _TYPE_CMD_IEEE_ED_SCAN_maxRssi                          int8_t
#define _POSITION_CMD_IEEE_ED_SCAN_endTrigger                   19
#define _TYPE_CMD_IEEE_ED_SCAN_endTrigger                       uint8_t
#define _BITPOS_CMD_IEEE_ED_SCAN_endTrigger_triggerType         0
#define _NBITS_CMD_IEEE_ED_SCAN_endTrigger_triggerType          4
#define _BITPOS_CMD_IEEE_ED_SCAN_endTrigger_bEnaCmd             4
#define _NBITS_CMD_IEEE_ED_SCAN_endTrigger_bEnaCmd              1
#define _BITPOS_CMD_IEEE_ED_SCAN_endTrigger_triggerNo           5
#define _NBITS_CMD_IEEE_ED_SCAN_endTrigger_triggerNo            2
#define _BITPOS_CMD_IEEE_ED_SCAN_endTrigger_pastTrig            7
#define _NBITS_CMD_IEEE_ED_SCAN_endTrigger_pastTrig             1
#define _POSITION_CMD_IEEE_ED_SCAN_endTime                      20
#define _TYPE_CMD_IEEE_ED_SCAN_endTime                          ratmr_t
#define _LAST_POSITION_CMD_IEEE_ED_SCAN                         20
#define _LAST_TYPE_CMD_IEEE_ED_SCAN                             ratmr_t

typedef struct {
   uint16_t commandNo;
   uint16_t status;
   uint8_t* pNextOp;
   ratmr_t startTime;
   struct {
      uint8_t triggerType:4;
      uint8_t bEnaCmd:1;
      uint8_t triggerNo:2;
      uint8_t pastTrig:1;
   } startTrigger;
   struct {
      uint8_t rule:4;
      uint8_t nSkip:4;
   } condition;
   uint8_t channel;
   struct {
      uint8_t ccaEnEnergy:1;
      uint8_t ccaEnCorr:1;
      uint8_t ccaEnSync:1;
      uint8_t ccaCorrOp:1;
      uint8_t ccaSyncOp:1;
      uint8_t ccaCorrThr:2;
   } ccaOpt;
   int8_t ccaRssiThr;
   uint8_t __dummy0;
   int8_t maxRssi;
   struct {
      uint8_t triggerType:4;
      uint8_t bEnaCmd:1;
      uint8_t triggerNo:2;
      uint8_t pastTrig:1;
   } endTrigger;
   ratmr_t endTime;
} rfCoreHal_CMD_IEEE_ED_SCAN_t;

#define CMD_IEEE_TX                                             0x2C01
#define _POSITION_CMD_IEEE_TX_txOpt                             14
#define _TYPE_CMD_IEEE_TX_txOpt                                 uint8_t
#define _BITPOS_CMD_IEEE_TX_txOpt_bIncludePhyHdr                0
#define _NBITS_CMD_IEEE_TX_txOpt_bIncludePhyHdr                 1
#define _BITPOS_CMD_IEEE_TX_txOpt_bIncludeCrc                   1
#define _NBITS_CMD_IEEE_TX_txOpt_bIncludeCrc                    1
#define _BITPOS_CMD_IEEE_TX_txOpt_payloadLenMsb                 3
#define _NBITS_CMD_IEEE_TX_txOpt_payloadLenMsb                  5
#define _POSITION_CMD_IEEE_TX_payloadLen                        15
#define _TYPE_CMD_IEEE_TX_payloadLen                            uint8_t
#define _POSITION_CMD_IEEE_TX_pPayload                          16
#define _TYPE_CMD_IEEE_TX_pPayload                              uint8_t*
#define _POSITION_CMD_IEEE_TX_timeStamp                         20
#define _TYPE_CMD_IEEE_TX_timeStamp                             ratmr_t
#define _LAST_POSITION_CMD_IEEE_TX                              20
#define _LAST_TYPE_CMD_IEEE_TX                                  ratmr_t

typedef struct {
   uint16_t commandNo;
   uint16_t status;
   uint8_t* pNextOp;
   ratmr_t startTime;
   struct {
      uint8_t triggerType:4;
      uint8_t bEnaCmd:1;
      uint8_t triggerNo:2;
      uint8_t pastTrig:1;
   } startTrigger;
   struct {
      uint8_t rule:4;
      uint8_t nSkip:4;
   } condition;
   struct {
      uint8_t bIncludePhyHdr:1;
      uint8_t bIncludeCrc:1;
      uint8_t :1;
      uint8_t payloadLenMsb:5;
   } txOpt;
   uint8_t payloadLen;
   uint8_t* pPayload;
   ratmr_t timeStamp;
} rfCoreHal_CMD_IEEE_TX_t;

#define CMD_IEEE_CSMA                                           0x2C02
#define _POSITION_CMD_IEEE_CSMA_randomState                     14
#define _TYPE_CMD_IEEE_CSMA_randomState                         uint16_t
#define _POSITION_CMD_IEEE_CSMA_macMaxBE                        16
#define _TYPE_CMD_IEEE_CSMA_macMaxBE                            uint8_t
#define _POSITION_CMD_IEEE_CSMA_macMaxCSMABackoffs              17
#define _TYPE_CMD_IEEE_CSMA_macMaxCSMABackoffs                  uint8_t
#define _POSITION_CMD_IEEE_CSMA_csmaConfig                      18
#define _TYPE_CMD_IEEE_CSMA_csmaConfig                          uint8_t
#define _BITPOS_CMD_IEEE_CSMA_csmaConfig_initCW                 0
#define _NBITS_CMD_IEEE_CSMA_csmaConfig_initCW                  5
#define _BITPOS_CMD_IEEE_CSMA_csmaConfig_bSlotted               5
#define _NBITS_CMD_IEEE_CSMA_csmaConfig_bSlotted                1
#define _BITPOS_CMD_IEEE_CSMA_csmaConfig_rxOffMode              6
#define _NBITS_CMD_IEEE_CSMA_csmaConfig_rxOffMode               2
#define _POSITION_CMD_IEEE_CSMA_NB                              19
#define _TYPE_CMD_IEEE_CSMA_NB                                  uint8_t
#define _POSITION_CMD_IEEE_CSMA_BE                              20
#define _TYPE_CMD_IEEE_CSMA_BE                                  uint8_t
#define _POSITION_CMD_IEEE_CSMA_remainingPeriods                21
#define _TYPE_CMD_IEEE_CSMA_remainingPeriods                    uint8_t
#define _POSITION_CMD_IEEE_CSMA_lastRssi                        22
#define _TYPE_CMD_IEEE_CSMA_lastRssi                            int8_t
#define _POSITION_CMD_IEEE_CSMA_endTrigger                      23
#define _TYPE_CMD_IEEE_CSMA_endTrigger                          uint8_t
#define _BITPOS_CMD_IEEE_CSMA_endTrigger_triggerType            0
#define _NBITS_CMD_IEEE_CSMA_endTrigger_triggerType             4
#define _BITPOS_CMD_IEEE_CSMA_endTrigger_bEnaCmd                4
#define _NBITS_CMD_IEEE_CSMA_endTrigger_bEnaCmd                 1
#define _BITPOS_CMD_IEEE_CSMA_endTrigger_triggerNo              5
#define _NBITS_CMD_IEEE_CSMA_endTrigger_triggerNo               2
#define _BITPOS_CMD_IEEE_CSMA_endTrigger_pastTrig               7
#define _NBITS_CMD_IEEE_CSMA_endTrigger_pastTrig                1
#define _POSITION_CMD_IEEE_CSMA_lastTimeStamp                   24
#define _TYPE_CMD_IEEE_CSMA_lastTimeStamp                       ratmr_t
#define _POSITION_CMD_IEEE_CSMA_endTime                         28
#define _TYPE_CMD_IEEE_CSMA_endTime                             ratmr_t
#define _LAST_POSITION_CMD_IEEE_CSMA                            28
#define _LAST_TYPE_CMD_IEEE_CSMA                                ratmr_t

typedef struct {
   uint16_t commandNo;
   uint16_t status;
   uint8_t* pNextOp;
   ratmr_t startTime;
   struct {
      uint8_t triggerType:4;
      uint8_t bEnaCmd:1;
      uint8_t triggerNo:2;
      uint8_t pastTrig:1;
   } startTrigger;
   struct {
      uint8_t rule:4;
      uint8_t nSkip:4;
   } condition;
   uint16_t randomState;
   uint8_t macMaxBE;
   uint8_t macMaxCSMABackoffs;
   struct {
      uint8_t initCW:5;
      uint8_t bSlotted:1;
      uint8_t rxOffMode:2;
   } csmaConfig;
   uint8_t NB;
   uint8_t BE;
   uint8_t remainingPeriods;
   int8_t lastRssi;
   struct {
      uint8_t triggerType:4;
      uint8_t bEnaCmd:1;
      uint8_t triggerNo:2;
      uint8_t pastTrig:1;
   } endTrigger;
   ratmr_t lastTimeStamp;
   ratmr_t endTime;
} rfCoreHal_CMD_IEEE_CSMA_t;

#define CMD_IEEE_RX_ACK                                         0x2C03
#define _POSITION_CMD_IEEE_RX_ACK_seqNo                         14
#define _TYPE_CMD_IEEE_RX_ACK_seqNo                             uint8_t
#define _POSITION_CMD_IEEE_RX_ACK_endTrigger                    15
#define _TYPE_CMD_IEEE_RX_ACK_endTrigger                        uint8_t
#define _BITPOS_CMD_IEEE_RX_ACK_endTrigger_triggerType          0
#define _NBITS_CMD_IEEE_RX_ACK_endTrigger_triggerType           4
#define _BITPOS_CMD_IEEE_RX_ACK_endTrigger_bEnaCmd              4
#define _NBITS_CMD_IEEE_RX_ACK_endTrigger_bEnaCmd               1
#define _BITPOS_CMD_IEEE_RX_ACK_endTrigger_triggerNo            5
#define _NBITS_CMD_IEEE_RX_ACK_endTrigger_triggerNo             2
#define _BITPOS_CMD_IEEE_RX_ACK_endTrigger_pastTrig             7
#define _NBITS_CMD_IEEE_RX_ACK_endTrigger_pastTrig              1
#define _POSITION_CMD_IEEE_RX_ACK_endTime                       16
#define _TYPE_CMD_IEEE_RX_ACK_endTime                           ratmr_t
#define _LAST_POSITION_CMD_IEEE_RX_ACK                          16
#define _LAST_TYPE_CMD_IEEE_RX_ACK                              ratmr_t

typedef struct {
   uint16_t commandNo;
   uint16_t status;
   uint8_t* pNextOp;
   ratmr_t startTime;
   struct {
      uint8_t triggerType:4;
      uint8_t bEnaCmd:1;
      uint8_t triggerNo:2;
      uint8_t pastTrig:1;
   } startTrigger;
   struct {
      uint8_t rule:4;
      uint8_t nSkip:4;
   } condition;
   uint8_t seqNo;
   struct {
      uint8_t triggerType:4;
      uint8_t bEnaCmd:1;
      uint8_t triggerNo:2;
      uint8_t pastTrig:1;
   } endTrigger;
   ratmr_t endTime;
} rfCoreHal_CMD_IEEE_RX_ACK_t;

#define CMD_IEEE_ABORT_BG                                       0x2C04
#define _LAST_POSITION_CMD_IEEE_ABORT_BG                        13
#define _LAST_TYPE_CMD_IEEE_ABORT_BG                            uint8_t

typedef struct {
   uint16_t commandNo;
   uint16_t status;
   uint8_t* pNextOp;
   ratmr_t startTime;
   struct {
      uint8_t triggerType:4;
      uint8_t bEnaCmd:1;
      uint8_t triggerNo:2;
      uint8_t pastTrig:1;
   } startTrigger;
   struct {
      uint8_t rule:4;
      uint8_t nSkip:4;
   } condition;
} rfCoreHal_CMD_IEEE_ABORT_BG_t;

#define CMD_IEEE_SETUP                                          0x2C05
#define _POSITION_CMD_IEEE_SETUP_pRegOverride                   16
#define _TYPE_CMD_IEEE_SETUP_pRegOverride                       uint32_t*
#define _LAST_POSITION_CMD_IEEE_SETUP                           16
#define _LAST_TYPE_CMD_IEEE_SETUP                               uint32_t*

typedef struct {
   uint16_t commandNo;
   uint16_t status;
   uint8_t* pNextOp;
   ratmr_t startTime;
   struct {
      uint8_t triggerType:4;
      uint8_t bEnaCmd:1;
      uint8_t triggerNo:2;
      uint8_t pastTrig:1;
   } startTrigger;
   struct {
      uint8_t rule:4;
      uint8_t nSkip:4;
   } condition;
   uint16_t __dummy0;
   uint32_t* pRegOverride;
} rfCoreHal_CMD_IEEE_SETUP_t;

#define CMD_IEEE_MOD_CCA                                        0x2001
#define _POSITION_CMD_IEEE_MOD_CCA_newCcaOpt                    2
#define _TYPE_CMD_IEEE_MOD_CCA_newCcaOpt                        uint8_t
#define _BITPOS_CMD_IEEE_MOD_CCA_newCcaOpt_ccaEnEnergy          0
#define _NBITS_CMD_IEEE_MOD_CCA_newCcaOpt_ccaEnEnergy           1
#define _BITPOS_CMD_IEEE_MOD_CCA_newCcaOpt_ccaEnCorr            1
#define _NBITS_CMD_IEEE_MOD_CCA_newCcaOpt_ccaEnCorr             1
#define _BITPOS_CMD_IEEE_MOD_CCA_newCcaOpt_ccaEnSync            2
#define _NBITS_CMD_IEEE_MOD_CCA_newCcaOpt_ccaEnSync             1
#define _BITPOS_CMD_IEEE_MOD_CCA_newCcaOpt_ccaCorrOp            3
#define _NBITS_CMD_IEEE_MOD_CCA_newCcaOpt_ccaCorrOp             1
#define _BITPOS_CMD_IEEE_MOD_CCA_newCcaOpt_ccaSyncOp            4
#define _NBITS_CMD_IEEE_MOD_CCA_newCcaOpt_ccaSyncOp             1
#define _BITPOS_CMD_IEEE_MOD_CCA_newCcaOpt_ccaCorrThr           5
#define _NBITS_CMD_IEEE_MOD_CCA_newCcaOpt_ccaCorrThr            2
#define _POSITION_CMD_IEEE_MOD_CCA_newCcaRssiThr                3
#define _TYPE_CMD_IEEE_MOD_CCA_newCcaRssiThr                    int8_t
#define _LAST_POSITION_CMD_IEEE_MOD_CCA                         3
#define _LAST_TYPE_CMD_IEEE_MOD_CCA                             int8_t

typedef struct {
   uint16_t commandNo;
   struct {
      uint8_t ccaEnEnergy:1;
      uint8_t ccaEnCorr:1;
      uint8_t ccaEnSync:1;
      uint8_t ccaCorrOp:1;
      uint8_t ccaSyncOp:1;
      uint8_t ccaCorrThr:2;
   } newCcaOpt;
   int8_t newCcaRssiThr;
} rfCoreHal_CMD_IEEE_MOD_CCA_t;

#define CMD_IEEE_MOD_FILT                                       0x2002
#define _POSITION_CMD_IEEE_MOD_FILT_newFrameFiltOpt             2
#define _TYPE_CMD_IEEE_MOD_FILT_newFrameFiltOpt                 uint16_t
#define _BITPOS_CMD_IEEE_MOD_FILT_newFrameFiltOpt_frameFiltEn   0
#define _NBITS_CMD_IEEE_MOD_FILT_newFrameFiltOpt_frameFiltEn    1
#define _BITPOS_CMD_IEEE_MOD_FILT_newFrameFiltOpt_frameFiltStop 1
#define _NBITS_CMD_IEEE_MOD_FILT_newFrameFiltOpt_frameFiltStop  1
#define _BITPOS_CMD_IEEE_MOD_FILT_newFrameFiltOpt_autoAckEn     2
#define _NBITS_CMD_IEEE_MOD_FILT_newFrameFiltOpt_autoAckEn      1
#define _BITPOS_CMD_IEEE_MOD_FILT_newFrameFiltOpt_slottedAckEn  3
#define _NBITS_CMD_IEEE_MOD_FILT_newFrameFiltOpt_slottedAckEn   1
#define _BITPOS_CMD_IEEE_MOD_FILT_newFrameFiltOpt_autoPendEn    4
#define _NBITS_CMD_IEEE_MOD_FILT_newFrameFiltOpt_autoPendEn     1
#define _BITPOS_CMD_IEEE_MOD_FILT_newFrameFiltOpt_defaultPend   5
#define _NBITS_CMD_IEEE_MOD_FILT_newFrameFiltOpt_defaultPend    1
#define _BITPOS_CMD_IEEE_MOD_FILT_newFrameFiltOpt_bPendDataReqOnly 6
#define _NBITS_CMD_IEEE_MOD_FILT_newFrameFiltOpt_bPendDataReqOnly 1
#define _BITPOS_CMD_IEEE_MOD_FILT_newFrameFiltOpt_bPanCoord     7
#define _NBITS_CMD_IEEE_MOD_FILT_newFrameFiltOpt_bPanCoord      1
#define _BITPOS_CMD_IEEE_MOD_FILT_newFrameFiltOpt_maxFrameVersion 8
#define _NBITS_CMD_IEEE_MOD_FILT_newFrameFiltOpt_maxFrameVersion 2
#define _BITPOS_CMD_IEEE_MOD_FILT_newFrameFiltOpt_fcfReservedMask 10
#define _NBITS_CMD_IEEE_MOD_FILT_newFrameFiltOpt_fcfReservedMask 3
#define _BITPOS_CMD_IEEE_MOD_FILT_newFrameFiltOpt_modifyFtFilter 13
#define _NBITS_CMD_IEEE_MOD_FILT_newFrameFiltOpt_modifyFtFilter 2
#define _BITPOS_CMD_IEEE_MOD_FILT_newFrameFiltOpt_bStrictLenFilter 15
#define _NBITS_CMD_IEEE_MOD_FILT_newFrameFiltOpt_bStrictLenFilter 1
#define _POSITION_CMD_IEEE_MOD_FILT_newFrameTypes               4
#define _TYPE_CMD_IEEE_MOD_FILT_newFrameTypes                   uint8_t
#define _BITPOS_CMD_IEEE_MOD_FILT_newFrameTypes_bAcceptFt0Beacon 0
#define _NBITS_CMD_IEEE_MOD_FILT_newFrameTypes_bAcceptFt0Beacon 1
#define _BITPOS_CMD_IEEE_MOD_FILT_newFrameTypes_bAcceptFt1Data  1
#define _NBITS_CMD_IEEE_MOD_FILT_newFrameTypes_bAcceptFt1Data   1
#define _BITPOS_CMD_IEEE_MOD_FILT_newFrameTypes_bAcceptFt2Ack   2
#define _NBITS_CMD_IEEE_MOD_FILT_newFrameTypes_bAcceptFt2Ack    1
#define _BITPOS_CMD_IEEE_MOD_FILT_newFrameTypes_bAcceptFt3MacCmd 3
#define _NBITS_CMD_IEEE_MOD_FILT_newFrameTypes_bAcceptFt3MacCmd 1
#define _BITPOS_CMD_IEEE_MOD_FILT_newFrameTypes_bAcceptFt4Reserved 4
#define _NBITS_CMD_IEEE_MOD_FILT_newFrameTypes_bAcceptFt4Reserved 1
#define _BITPOS_CMD_IEEE_MOD_FILT_newFrameTypes_bAcceptFt5Reserved 5
#define _NBITS_CMD_IEEE_MOD_FILT_newFrameTypes_bAcceptFt5Reserved 1
#define _BITPOS_CMD_IEEE_MOD_FILT_newFrameTypes_bAcceptFt6Reserved 6
#define _NBITS_CMD_IEEE_MOD_FILT_newFrameTypes_bAcceptFt6Reserved 1
#define _BITPOS_CMD_IEEE_MOD_FILT_newFrameTypes_bAcceptFt7Reserved 7
#define _NBITS_CMD_IEEE_MOD_FILT_newFrameTypes_bAcceptFt7Reserved 1
#define _LAST_POSITION_CMD_IEEE_MOD_FILT                        4
#define _LAST_TYPE_CMD_IEEE_MOD_FILT                            uint8_t

typedef struct {
   uint16_t commandNo;
   struct {
      uint16_t frameFiltEn:1;
      uint16_t frameFiltStop:1;
      uint16_t autoAckEn:1;
      uint16_t slottedAckEn:1;
      uint16_t autoPendEn:1;
      uint16_t defaultPend:1;
      uint16_t bPendDataReqOnly:1;
      uint16_t bPanCoord:1;
      uint16_t maxFrameVersion:2;
      uint16_t fcfReservedMask:3;
      uint16_t modifyFtFilter:2;
      uint16_t bStrictLenFilter:1;
   } newFrameFiltOpt;
   struct {
      uint8_t bAcceptFt0Beacon:1;
      uint8_t bAcceptFt1Data:1;
      uint8_t bAcceptFt2Ack:1;
      uint8_t bAcceptFt3MacCmd:1;
      uint8_t bAcceptFt4Reserved:1;
      uint8_t bAcceptFt5Reserved:1;
      uint8_t bAcceptFt6Reserved:1;
      uint8_t bAcceptFt7Reserved:1;
   } newFrameTypes;
} rfCoreHal_CMD_IEEE_MOD_FILT_t;

#define CMD_IEEE_MOD_SRC_MATCH                                  0x2003
#define _POSITION_CMD_IEEE_MOD_SRC_MATCH_options                2
#define _TYPE_CMD_IEEE_MOD_SRC_MATCH_options                    uint8_t
#define _BITPOS_CMD_IEEE_MOD_SRC_MATCH_options_bEnable          0
#define _NBITS_CMD_IEEE_MOD_SRC_MATCH_options_bEnable           1
#define _BITPOS_CMD_IEEE_MOD_SRC_MATCH_options_srcPend          1
#define _NBITS_CMD_IEEE_MOD_SRC_MATCH_options_srcPend           1
#define _BITPOS_CMD_IEEE_MOD_SRC_MATCH_options_entryType        2
#define _NBITS_CMD_IEEE_MOD_SRC_MATCH_options_entryType         1
#define _POSITION_CMD_IEEE_MOD_SRC_MATCH_entryNo                3
#define _TYPE_CMD_IEEE_MOD_SRC_MATCH_entryNo                    uint8_t
#define _LAST_POSITION_CMD_IEEE_MOD_SRC_MATCH                   3
#define _LAST_TYPE_CMD_IEEE_MOD_SRC_MATCH                       uint8_t

typedef struct {
   uint16_t commandNo;
   struct {
      uint8_t bEnable:1;
      uint8_t srcPend:1;
      uint8_t entryType:1;
   } options;
   uint8_t entryNo;
} rfCoreHal_CMD_IEEE_MOD_SRC_MATCH_t;

#define CMD_IEEE_ABORT_FG                                       0x2401
#define _LAST_POSITION_CMD_IEEE_ABORT_FG                        0
#define _LAST_TYPE_CMD_IEEE_ABORT_FG                            uint16_t

typedef struct {
   uint16_t commandNo;
} rfCoreHal_CMD_IEEE_ABORT_FG_t;

#define CMD_IEEE_STOP_FG                                        0x2402
#define _LAST_POSITION_CMD_IEEE_STOP_FG                         0
#define _LAST_TYPE_CMD_IEEE_STOP_FG                             uint16_t

typedef struct {
   uint16_t commandNo;
} rfCoreHal_CMD_IEEE_STOP_FG_t;

#define CMD_IEEE_CCA_REQ                                        0x2403
#define _POSITION_CMD_IEEE_CCA_REQ_currentRssi                  2
#define _TYPE_CMD_IEEE_CCA_REQ_currentRssi                      int8_t
#define _POSITION_CMD_IEEE_CCA_REQ_maxRssi                      3
#define _TYPE_CMD_IEEE_CCA_REQ_maxRssi                          int8_t
#define _POSITION_CMD_IEEE_CCA_REQ_ccaInfo                      4
#define _TYPE_CMD_IEEE_CCA_REQ_ccaInfo                          uint8_t
#define _BITPOS_CMD_IEEE_CCA_REQ_ccaInfo_ccaState               0
#define _NBITS_CMD_IEEE_CCA_REQ_ccaInfo_ccaState                2
#define _BITPOS_CMD_IEEE_CCA_REQ_ccaInfo_ccaEnergy              2
#define _NBITS_CMD_IEEE_CCA_REQ_ccaInfo_ccaEnergy               2
#define _BITPOS_CMD_IEEE_CCA_REQ_ccaInfo_ccaCorr                4
#define _NBITS_CMD_IEEE_CCA_REQ_ccaInfo_ccaCorr                 2
#define _BITPOS_CMD_IEEE_CCA_REQ_ccaInfo_ccaSync                6
#define _NBITS_CMD_IEEE_CCA_REQ_ccaInfo_ccaSync                 1
#define _LAST_POSITION_CMD_IEEE_CCA_REQ                         4
#define _LAST_TYPE_CMD_IEEE_CCA_REQ                             uint8_t

typedef struct {
   uint16_t commandNo;
   int8_t currentRssi;
   int8_t maxRssi;
   struct {
      uint8_t ccaState:2;
      uint8_t ccaEnergy:2;
      uint8_t ccaCorr:2;
      uint8_t ccaSync:1;
   } ccaInfo;
} rfCoreHal_CMD_IEEE_CCA_REQ_t;

#define _POSITION_ieeeRxOutput_nTxAck                           0
#define _TYPE_ieeeRxOutput_nTxAck                               uint8_t
#define _POSITION_ieeeRxOutput_nRxBeacon                        1
#define _TYPE_ieeeRxOutput_nRxBeacon                            uint8_t
#define _POSITION_ieeeRxOutput_nRxData                          2
#define _TYPE_ieeeRxOutput_nRxData                              uint8_t
#define _POSITION_ieeeRxOutput_nRxAck                           3
#define _TYPE_ieeeRxOutput_nRxAck                               uint8_t
#define _POSITION_ieeeRxOutput_nRxMacCmd                        4
#define _TYPE_ieeeRxOutput_nRxMacCmd                            uint8_t
#define _POSITION_ieeeRxOutput_nRxReserved                      5
#define _TYPE_ieeeRxOutput_nRxReserved                          uint8_t
#define _POSITION_ieeeRxOutput_nRxNok                           6
#define _TYPE_ieeeRxOutput_nRxNok                               uint8_t
#define _POSITION_ieeeRxOutput_nRxIgnored                       7
#define _TYPE_ieeeRxOutput_nRxIgnored                           uint8_t
#define _POSITION_ieeeRxOutput_nRxBufFull                       8
#define _TYPE_ieeeRxOutput_nRxBufFull                           uint8_t
#define _POSITION_ieeeRxOutput_lastRssi                         9
#define _TYPE_ieeeRxOutput_lastRssi                             int8_t
#define _POSITION_ieeeRxOutput_maxRssi                          10
#define _TYPE_ieeeRxOutput_maxRssi                              int8_t
#define _POSITION_ieeeRxOutput_beaconTimeStamp                  12
#define _TYPE_ieeeRxOutput_beaconTimeStamp                      ratmr_t
#define _LAST_POSITION_ieeeRxOutput                             12
#define _LAST_TYPE_ieeeRxOutput                                 ratmr_t

typedef struct {
   uint8_t nTxAck;
   uint8_t nRxBeacon;
   uint8_t nRxData;
   uint8_t nRxAck;
   uint8_t nRxMacCmd;
   uint8_t nRxReserved;
   uint8_t nRxNok;
   uint8_t nRxIgnored;
   uint8_t nRxBufFull;
   int8_t lastRssi;
   int8_t maxRssi;
   uint8_t __dummy0;
   ratmr_t beaconTimeStamp;
} rfCoreHal_ieeeRxOutput_t;

#define _POSITION_shortAddrEntry_shortAddr                      0
#define _TYPE_shortAddrEntry_shortAddr                          uint16_t
#define _POSITION_shortAddrEntry_panId                          2
#define _TYPE_shortAddrEntry_panId                              uint16_t
#define _LAST_POSITION_shortAddrEntry                           2
#define _LAST_TYPE_shortAddrEntry                               uint16_t

typedef struct {
   uint16_t shortAddr;
   uint16_t panId;
} rfCoreHal_shortAddrEntry_t;

#define _POSITION_ieeeRxCorrCrc_status                          0
#define _TYPE_ieeeRxCorrCrc_status                              uint8_t
#define _BITPOS_ieeeRxCorrCrc_status_corr                       0
#define _NBITS_ieeeRxCorrCrc_status_corr                        6
#define _BITPOS_ieeeRxCorrCrc_status_bIgnore                    6
#define _NBITS_ieeeRxCorrCrc_status_bIgnore                     1
#define _BITPOS_ieeeRxCorrCrc_status_bCrcErr                    7
#define _NBITS_ieeeRxCorrCrc_status_bCrcErr                     1
#define _LAST_POSITION_ieeeRxCorrCrc                            0
#define _LAST_TYPE_ieeeRxCorrCrc                                uint8_t

typedef struct {
   struct {
      uint8_t corr:6;
      uint8_t bIgnore:1;
      uint8_t bCrcErr:1;
   } status;
} rfCoreHal_ieeeRxCorrCrc_t;

#define _POSITION_ieeeMacHdr_frameControl                       0
#define _TYPE_ieeeMacHdr_frameControl                           uint16_t
#define _BITPOS_ieeeMacHdr_frameControl_frameType               0
#define _NBITS_ieeeMacHdr_frameControl_frameType                3
#define _BITPOS_ieeeMacHdr_frameControl_securityEnabled         3
#define _NBITS_ieeeMacHdr_frameControl_securityEnabled          1
#define _BITPOS_ieeeMacHdr_frameControl_framePending            4
#define _NBITS_ieeeMacHdr_frameControl_framePending             1
#define _BITPOS_ieeeMacHdr_frameControl_ackRequest              5
#define _NBITS_ieeeMacHdr_frameControl_ackRequest               1
#define _BITPOS_ieeeMacHdr_frameControl_panIdCompression        6
#define _NBITS_ieeeMacHdr_frameControl_panIdCompression         1
#define _BITPOS_ieeeMacHdr_frameControl_reserved                7
#define _NBITS_ieeeMacHdr_frameControl_reserved                 3
#define _BITPOS_ieeeMacHdr_frameControl_destAddressingMode      10
#define _NBITS_ieeeMacHdr_frameControl_destAddressingMode       2
#define _BITPOS_ieeeMacHdr_frameControl_frameVersion            12
#define _NBITS_ieeeMacHdr_frameControl_frameVersion             2
#define _BITPOS_ieeeMacHdr_frameControl_sourceAddressingMode    14
#define _NBITS_ieeeMacHdr_frameControl_sourceAddressingMode     2
#define _POSITION_ieeeMacHdr_sequenceNumber                     2
#define _TYPE_ieeeMacHdr_sequenceNumber                         uint8_t
#define _POSITION_ieeeMacHdr_addressingFields                   3
#define _TYPE_ieeeMacHdr_addressingFields                       uint8_t
#define _LAST_POSITION_ieeeMacHdr                               3
#define _LAST_TYPE_ieeeMacHdr                                   uint8_t

typedef struct {
   struct {
      uint16_t frameType:3;
      uint16_t securityEnabled:1;
      uint16_t framePending:1;
      uint16_t ackRequest:1;
      uint16_t panIdCompression:1;
      uint16_t reserved:3;
      uint16_t destAddressingMode:2;
      uint16_t frameVersion:2;
      uint16_t sourceAddressingMode:2;
   } frameControl;
   uint8_t sequenceNumber;
   uint8_t addressingFields;
} rfCoreHal_ieeeMacHdr_t;

#define _POSITION_ieeeAuxSecCtrl_securityCtrl                   0
#define _TYPE_ieeeAuxSecCtrl_securityCtrl                       uint8_t
#define _BITPOS_ieeeAuxSecCtrl_securityCtrl_securityLevel       0
#define _NBITS_ieeeAuxSecCtrl_securityCtrl_securityLevel        3
#define _BITPOS_ieeeAuxSecCtrl_securityCtrl_keyIdentifierMode   3
#define _NBITS_ieeeAuxSecCtrl_securityCtrl_keyIdentifierMode    2
#define _LAST_POSITION_ieeeAuxSecCtrl                           0
#define _LAST_TYPE_ieeeAuxSecCtrl                               uint8_t

typedef struct {
   struct {
      uint8_t securityLevel:3;
      uint8_t keyIdentifierMode:2;
   } securityCtrl;
} rfCoreHal_ieeeAuxSecCtrl_t;

#endif
