//------------------------------------------------------------------------------
// TI Confidential - NDA Restrictions
//
// Copyright (c) 2011 Texas Instruments, Inc.
//
//    This is an unpublished work created in the year stated above.
//    Texas Instruments owns all rights in and to this work and
//    intends to maintain and protect it as an unpublished copyright.
//    In the event of either inadvertent or deliberate publication,
//    the above stated date shall be treated as the year of first
//    publication. In the event of such publication, Texas Instruments
//    intends to enforce its rights in the work under the copyright
//    laws as a published work.
//
//------------------------------------------------------------------------------
///
/// \file            radio_par.h
/// \brief           Definition of radio parameter override registers
///
///                  This file is generated by create_command.pl
///
/// \author          Low Power RF Wireless Business Unit
///                  Helge Coward (h.coward@ti.com)
///
/// \date            Thu Nov 17 10:26:10 CET 2011
///
//------------------------------------------------------------------------------

#ifndef __RADIO_PAR_H
#define __RADIO_PAR_H

#include <stdint.h>

/// Type for the radio configuration defined in radio_par_def.txt
//
/// When accessed, a typecast is made to the structs defined below. The definition here is uint32_t 
/// to ensure the  correct alignment. It must be checked that the array is large enough for the structs.
///
typedef uint32_t radioCfg_t[48];

extern radioCfg_t radioCfg;

#define _POSITION_radioPar_maxFutureTime                        0
#define _TYPE_radioPar_maxFutureTime                            uint16_t
#define _POSITION_radioPar_numSwBits                            2
#define _TYPE_radioPar_numSwBits                                uint8_t
#define _POSITION_radioPar_preamCtrl                            3
#define _TYPE_radioPar_preamCtrl                                uint8_t
#define _POSITION_radioPar_preamPattern                         4
#define _TYPE_radioPar_preamPattern                             uint16_t
#define _POSITION_radioPar_bNoPtrCheck                          6
#define _TYPE_radioPar_bNoPtrCheck                              uint8_t
#define _POSITION_radioPar_rssiOverride                         7
#define _TYPE_radioPar_rssiOverride                             int8_t
#define _POSITION_radioPar_modIsfCfgVal                         8
#define _TYPE_radioPar_modIsfCfgVal                             uint32_t
#define _BITPOS_radioPar_modIsfCfgVal_moduleEn                  0
#define _NBITS_radioPar_modIsfCfgVal_moduleEn                   1
#define _BITPOS_radioPar_modIsfCfgVal_intpFactor                2
#define _NBITS_radioPar_modIsfCfgVal_intpFactor                 2
#define _BITPOS_radioPar_modIsfCfgVal_shapeGain                 4
#define _NBITS_radioPar_modIsfCfgVal_shapeGain                  2
#define _BITPOS_radioPar_modIsfCfgVal_useZU                     6
#define _NBITS_radioPar_modIsfCfgVal_useZU                      1
#define _BITPOS_radioPar_modIsfCfgVal_useShaped154              7
#define _NBITS_radioPar_modIsfCfgVal_useShaped154               1
#define _BITPOS_radioPar_modIsfCfgVal_txOff                     8
#define _NBITS_radioPar_modIsfCfgVal_txOff                      12
#define _BITPOS_radioPar_modIsfCfgVal_bDynamicTxFreq            20
#define _NBITS_radioPar_modIsfCfgVal_bDynamicTxFreq             1
#define _POSITION_radioPar_pModIsfShape                         12
#define _TYPE_radioPar_pModIsfShape                             uint32_t const *
#define _POSITION_radioPar_crcWhConfig                          16
#define _TYPE_radioPar_crcWhConfig                              uint8_t
#define _BITPOS_radioPar_crcWhConfig_bWhEn                      0
#define _NBITS_radioPar_crcWhConfig_bWhEn                       1
#define _BITPOS_radioPar_crcWhConfig_bWhBitRev                  1
#define _NBITS_radioPar_crcWhConfig_bWhBitRev                   1
#define _BITPOS_radioPar_crcWhConfig_bMsbFirst                  2
#define _NBITS_radioPar_crcWhConfig_bMsbFirst                   1
#define _BITPOS_radioPar_crcWhConfig_bNoSwPreamProg             3
#define _NBITS_radioPar_crcWhConfig_bNoSwPreamProg              1
#define _BITPOS_radioPar_crcWhConfig_bSwDepPream                4
#define _NBITS_radioPar_crcWhConfig_bSwDepPream                 1
#define _BITPOS_radioPar_crcWhConfig_bWhBeforeCrc               5
#define _NBITS_radioPar_crcWhConfig_bWhBeforeCrc                1
#define _BITPOS_radioPar_crcWhConfig_dualSwConfig               6
#define _NBITS_radioPar_crcWhConfig_dualSwConfig                2
#define _POSITION_radioPar_numCrcBits                           17
#define _TYPE_radioPar_numCrcBits                               uint8_t
#define _POSITION_radioPar_introduceCrcErr                      18
#define _TYPE_radioPar_introduceCrcErr                          uint16_t
#define _POSITION_radioPar_crcInit                              20
#define _TYPE_radioPar_crcInit                                  uint32_t
#define _POSITION_radioPar_crcXor                               24
#define _TYPE_radioPar_crcXor                                   uint32_t
#define _POSITION_radioPar_whInit                               28
#define _TYPE_radioPar_whInit                                   uint32_t
#define _POSITION_radioPar_startToTxRatOffset                   32
#define _TYPE_radioPar_startToTxRatOffset                       uint16_t
#define _POSITION_radioPar_startToRxRatOffset                   34
#define _TYPE_radioPar_startToRxRatOffset                       uint16_t
#define _POSITION_radioPar_startToSynthRatOffset                36
#define _TYPE_radioPar_startToSynthRatOffset                    uint16_t
#define _POSITION_radioPar_txToRxRatOffset                      38
#define _TYPE_radioPar_txToRxRatOffset                          uint16_t
#define _POSITION_radioPar_rxToTxRatOffset                      40
#define _TYPE_radioPar_rxToTxRatOffset                          uint16_t
#define _POSITION_radioPar_syncTimeAdjust                       42
#define _TYPE_radioPar_syncTimeAdjust                           uint16_t
#define _POSITION_radioPar_rxFifoThrSleep                       44
#define _TYPE_radioPar_rxFifoThrSleep                           uint8_t
#define _POSITION_radioPar_txFifoThrSleep                       45
#define _TYPE_radioPar_txFifoThrSleep                           uint8_t
#define _POSITION_radioPar_ratTicksPerBit                       46
#define _TYPE_radioPar_ratTicksPerBit                           uint16_t
#define _POSITION_radioPar_mdmFreqWordOvr                       48
#define _TYPE_radioPar_mdmFreqWordOvr                           uint16_t
#define _BITPOS_radioPar_mdmFreqWordOvr_freqWordOvr             0
#define _NBITS_radioPar_mdmFreqWordOvr_freqWordOvr              12
#define _BITPOS_radioPar_mdmFreqWordOvr_bOvrMdmRfCh             14
#define _NBITS_radioPar_mdmFreqWordOvr_bOvrMdmRfCh              1
#define _BITPOS_radioPar_mdmFreqWordOvr_bWrMdmRfCh              15
#define _NBITS_radioPar_mdmFreqWordOvr_bWrMdmRfCh               1
#define _POSITION_radioPar_mdmRxIntFreq                         50
#define _TYPE_radioPar_mdmRxIntFreq                             int16_t
#define _POSITION_radioPar_mdmTxIntFreq                         52
#define _TYPE_radioPar_mdmTxIntFreq                             int16_t
#define _POSITION_radioPar_mdmPShift                            54
#define _TYPE_radioPar_mdmPShift                                uint8_t
#define _POSITION_radioPar_mdmQShift                            55
#define _TYPE_radioPar_mdmQShift                                uint8_t
#define _POSITION_radioPar_txFreqBase                           56
#define _TYPE_radioPar_txFreqBase                               uint16_t
#define _POSITION_radioPar_freqOffset                           58
#define _TYPE_radioPar_freqOffset                               int16_t
#define _POSITION_radioPar_bawConfig                            60
#define _TYPE_radioPar_bawConfig                                uint32_t
#define _BITPOS_radioPar_bawConfig_preScale                     0
#define _NBITS_radioPar_bawConfig_preScale                      8
#define _BITPOS_radioPar_bawConfig_rateWord                     8
#define _NBITS_radioPar_bawConfig_rateWord                      21
#define _BITPOS_radioPar_bawConfig_bFsAdjust                    29
#define _NBITS_radioPar_bawConfig_bFsAdjust                     1
#define _BITPOS_radioPar_bawConfig_bSymbolRateAdjust            30
#define _NBITS_radioPar_bawConfig_bSymbolRateAdjust             1
#define _BITPOS_radioPar_bawConfig_bRatAdjust                   31
#define _NBITS_radioPar_bawConfig_bRatAdjust                    1
#define _LAST_POSITION_radioPar                                 60
#define _LAST_TYPE_radioPar                                     uint32_t

typedef struct {
   uint16_t maxFutureTime;
   uint8_t numSwBits;
   uint8_t preamCtrl;
   uint16_t preamPattern;
   uint8_t bNoPtrCheck;
   int8_t rssiOverride;
   struct {
      uint32_t moduleEn:1;
      uint32_t :1;
      uint32_t intpFactor:2;
      uint32_t shapeGain:2;
      uint32_t useZU:1;
      uint32_t useShaped154:1;
      uint32_t txOff:12;
      uint32_t bDynamicTxFreq:1;
   } modIsfCfgVal;
   uint32_t const * pModIsfShape;
   struct {
      uint8_t bWhEn:1;
      uint8_t bWhBitRev:1;
      uint8_t bMsbFirst:1;
      uint8_t bNoSwPreamProg:1;
      uint8_t bSwDepPream:1;
      uint8_t bWhBeforeCrc:1;
      uint8_t dualSwConfig:2;
   } crcWhConfig;
   uint8_t numCrcBits;
   uint16_t introduceCrcErr;
   uint32_t crcInit;
   uint32_t crcXor;
   uint32_t whInit;
   uint16_t startToTxRatOffset;
   uint16_t startToRxRatOffset;
   uint16_t startToSynthRatOffset;
   uint16_t txToRxRatOffset;
   uint16_t rxToTxRatOffset;
   uint16_t syncTimeAdjust;
   uint8_t rxFifoThrSleep;
   uint8_t txFifoThrSleep;
   uint16_t ratTicksPerBit;
   struct {
      uint16_t freqWordOvr:12;
      uint16_t :2;
      uint16_t bOvrMdmRfCh:1;
      uint16_t bWrMdmRfCh:1;
   } mdmFreqWordOvr;
   int16_t mdmRxIntFreq;
   int16_t mdmTxIntFreq;
   uint8_t mdmPShift;
   uint8_t mdmQShift;
   uint16_t txFreqBase;
   int16_t freqOffset;
   struct {
      uint32_t preScale:8;
      uint32_t rateWord:21;
      uint32_t bFsAdjust:1;
      uint32_t bSymbolRateAdjust:1;
      uint32_t bRatAdjust:1;
   } bawConfig;
} rfCoreHal_radioPar_t;

#define _N_INIT_SETS_radioPar 5
#define _N_INIT_WORDS_radioPar 16
#define _START_INIT_WIDX_radioPar 0
static uint32_t const __init_radioPar[_N_INIT_SETS_radioPar][_N_INIT_WORDS_radioPar] = {
   {
      0x0720C000, 0x8000AAAA, 0x00135E29, 0x000000C0, 0x00001891, 0x55555500, 0x00000000, 0xA6000000, 
      0x01000180, 0x01500400, 0x01950258, 0x00401830, 0x10000000, 0x06041000, 0x00000000, 0x0800000C
   },
   {
      0x0020C000, 0x80000000, 0x000000E1, 0x00000000, 0x00001008, 0x00000000, 0x00000000, 0x00000000, 
      0x01000180, 0x01500400, 0x02DB0300, 0x01001030, 0x00000000, 0x06050000, 0x00000000, 0x1000000C
   },
   {
      0x0720C000, 0x8000AAAA, 0x00135E35, 0x000000D8, 0x00001094, 0xFFFF0000, 0x00000000, 0xF0000000, 
      0x01000180, 0x01500400, 0x014B0243, 0x00201830, 0x10000000, 0x06051000, 0x00000000, 0x1000000C
   },
   {
      0x0010C000, 0x80000000, 0x00000025, 0x00000120, 0x00002008, 0xFFFFFFFF, 0x00000000, 0x00000000, 
      0x01000180, 0x01500400, 0x01180243, 0x0020282C, 0x00000000, 0x06050000, 0x00000000, 0x1000000C
   },
   {
      0x0710C000, 0x8000AAAA, 0x00135E29, 0x000000D8, 0x000010B7, 0xFFFF0000, 0x00000000, 0xF0000000, 
      0x01000180, 0x01500400, 0x01440243, 0x00401830, 0x10000000, 0x06041000, 0x00000000, 0x0800000C
   }
};

#define _POSITION_synthPar_config                               64
#define _TYPE_synthPar_config                                   uint16_t
#define _BITPOS_synthPar_config_b24MHzXtal                      0
#define _NBITS_synthPar_config_b24MHzXtal                       1
#define _BITPOS_synthPar_config_bSkipTdcCalib                   1
#define _NBITS_synthPar_config_bSkipTdcCalib                    1
#define _BITPOS_synthPar_config_bSkipCoarseCalib                2
#define _NBITS_synthPar_config_bSkipCoarseCalib                 1
#define _BITPOS_synthPar_config_bSkipMidCalib                   3
#define _NBITS_synthPar_config_bSkipMidCalib                    1
#define _BITPOS_synthPar_config_bForceTxMode                    4
#define _NBITS_synthPar_config_bForceTxMode                     1
#define _BITPOS_synthPar_config_bOpenLoop1Pt                    5
#define _NBITS_synthPar_config_bOpenLoop1Pt                     1
#define _BITPOS_synthPar_config_bDisableSynthProg               7
#define _NBITS_synthPar_config_bDisableSynthProg                1
#define _BITPOS_synthPar_config_bDisableSynthEnaPoll            8
#define _NBITS_synthPar_config_bDisableSynthEnaPoll             1
#define _BITPOS_synthPar_config_bPhaseErrorDiscard              9
#define _NBITS_synthPar_config_bPhaseErrorDiscard               1
#define _POSITION_synthPar_ktAvgOffset                          66
#define _TYPE_synthPar_ktAvgOffset                              int8_t
#define _POSITION_synthPar_tdcFactor                            67
#define _TYPE_synthPar_tdcFactor                                uint8_t
#define _POSITION_synthPar_tdcOffset1                           68
#define _TYPE_synthPar_tdcOffset1                               int8_t
#define _POSITION_synthPar_tdcOffset2                           69
#define _TYPE_synthPar_tdcOffset2                               int8_t
#define _POSITION_synthPar_peThreshFactor                       70
#define _TYPE_synthPar_peThreshFactor                           uint8_t
#define _POSITION_synthPar_peThreshOffset                       71
#define _TYPE_synthPar_peThreshOffset                           int8_t
#define _POSITION_synthPar_tdcSubtractFactor                    72
#define _TYPE_synthPar_tdcSubtractFactor                        uint8_t
#define _POSITION_synthPar_tdcSubtractOffset                    73
#define _TYPE_synthPar_tdcSubtractOffset                        int8_t
#define _POSITION_synthPar_defaultPreDivRatio24                 74
#define _TYPE_synthPar_defaultPreDivRatio24                     uint8_t
#define _POSITION_synthPar_fXtalInv                             76
#define _TYPE_synthPar_fXtalInv                                 uint32_t
#define _POSITION_synthPar_K1                                   80
#define _TYPE_synthPar_K1                                       uint32_t
#define _POSITION_synthPar_K2BL16                               84
#define _TYPE_synthPar_K2BL16                                   uint32_t
#define _POSITION_synthPar_K2AL16                               88
#define _TYPE_synthPar_K2AL16                                   uint32_t
#define _POSITION_synthPar_K3BL                                 92
#define _TYPE_synthPar_K3BL                                     uint32_t
#define _POSITION_synthPar_K3AL                                 96
#define _TYPE_synthPar_K3AL                                     uint32_t
#define _POSITION_synthPar_K5                                   100
#define _TYPE_synthPar_K5                                       uint32_t
#define _POSITION_synthPar_M2K                                  104
#define _TYPE_synthPar_M2K                                      uint8_t
#define _POSITION_synthPar_M3K                                  105
#define _TYPE_synthPar_M3K                                      uint8_t
#define _POSITION_synthPar_M4K                                  106
#define _TYPE_synthPar_M4K                                      uint8_t
#define _POSITION_synthPar_synthRegAnaDivLsbFsOnly              107
#define _TYPE_synthPar_synthRegAnaDivLsbFsOnly                  uint8_t
#define _POSITION_synthPar_synthRegAnaDivLsbRx                  108
#define _TYPE_synthPar_synthRegAnaDivLsbRx                      uint8_t
#define _POSITION_synthPar_synthRegAnaDivLsbTx                  109
#define _TYPE_synthPar_synthRegAnaDivLsbTx                      uint8_t
#define _POSITION_synthPar_ktPrecal                             110
#define _TYPE_synthPar_ktPrecal                                 uint8_t
#define _POSITION_synthPar_ktPrecal0                            110
#define _TYPE_synthPar_ktPrecal0                                uint8_t
#define _POSITION_synthPar_ktPrecal1                            111
#define _TYPE_synthPar_ktPrecal1                                uint8_t
#define _POSITION_synthPar_tdcPrecal                            112
#define _TYPE_synthPar_tdcPrecal                                uint16_t
#define _POSITION_synthPar_tdcPrecal0                           112
#define _TYPE_synthPar_tdcPrecal0                               uint16_t
#define _POSITION_synthPar_tdcPrecal1                           114
#define _TYPE_synthPar_tdcPrecal1                               uint16_t
#define _POSITION_synthPar_coarsePrecal                         116
#define _TYPE_synthPar_coarsePrecal                             uint8_t
#define _POSITION_synthPar_coarsePrecal0                        116
#define _TYPE_synthPar_coarsePrecal0                            uint8_t
#define _POSITION_synthPar_coarsePrecal1                        117
#define _TYPE_synthPar_coarsePrecal1                            uint8_t
#define _POSITION_synthPar_coarsePrecal2                        118
#define _TYPE_synthPar_coarsePrecal2                            uint8_t
#define _POSITION_synthPar_coarsePrecal3                        119
#define _TYPE_synthPar_coarsePrecal3                            uint8_t
#define _POSITION_synthPar_midPrecal                            120
#define _TYPE_synthPar_midPrecal                                uint8_t
#define _POSITION_synthPar_midPrecal00                          120
#define _TYPE_synthPar_midPrecal00                              uint8_t
#define _POSITION_synthPar_midPrecal01                          121
#define _TYPE_synthPar_midPrecal01                              uint8_t
#define _POSITION_synthPar_midPrecal02                          122
#define _TYPE_synthPar_midPrecal02                              uint8_t
#define _POSITION_synthPar_midPrecal03                          123
#define _TYPE_synthPar_midPrecal03                              uint8_t
#define _POSITION_synthPar_midPrecal04                          124
#define _TYPE_synthPar_midPrecal04                              uint8_t
#define _POSITION_synthPar_midPrecal05                          125
#define _TYPE_synthPar_midPrecal05                              uint8_t
#define _POSITION_synthPar_midPrecal06                          126
#define _TYPE_synthPar_midPrecal06                              uint8_t
#define _POSITION_synthPar_midPrecal07                          127
#define _TYPE_synthPar_midPrecal07                              uint8_t
#define _POSITION_synthPar_midPrecal08                          128
#define _TYPE_synthPar_midPrecal08                              uint8_t
#define _POSITION_synthPar_midPrecal09                          129
#define _TYPE_synthPar_midPrecal09                              uint8_t
#define _POSITION_synthPar_midPrecal10                          130
#define _TYPE_synthPar_midPrecal10                              uint8_t
#define _POSITION_synthPar_midPrecal11                          131
#define _TYPE_synthPar_midPrecal11                              uint8_t
#define _POSITION_synthPar_midPrecal12                          132
#define _TYPE_synthPar_midPrecal12                              uint8_t
#define _POSITION_synthPar_midPrecal13                          133
#define _TYPE_synthPar_midPrecal13                              uint8_t
#define _POSITION_synthPar_midPrecal14                          134
#define _TYPE_synthPar_midPrecal14                              uint8_t
#define _POSITION_synthPar_midPrecal15                          135
#define _TYPE_synthPar_midPrecal15                              uint8_t
#define _LAST_POSITION_synthPar                                 135
#define _LAST_TYPE_synthPar                                     uint8_t

typedef struct {
   uint32_t __dummy0;
   uint32_t __dummy1;
   uint32_t __dummy2;
   uint32_t __dummy3;
   uint32_t __dummy4;
   uint32_t __dummy5;
   uint32_t __dummy6;
   uint32_t __dummy7;
   uint32_t __dummy8;
   uint32_t __dummy9;
   uint32_t __dummy10;
   uint32_t __dummy11;
   uint32_t __dummy12;
   uint32_t __dummy13;
   uint32_t __dummy14;
   uint32_t __dummy15;
   struct {
      uint16_t b24MHzXtal:1;
      uint16_t bSkipTdcCalib:1;
      uint16_t bSkipCoarseCalib:1;
      uint16_t bSkipMidCalib:1;
      uint16_t bForceTxMode:1;
      uint16_t bOpenLoop1Pt:1;
      uint16_t :1;
      uint16_t bDisableSynthProg:1;
      uint16_t bDisableSynthEnaPoll:1;
      uint16_t bPhaseErrorDiscard:1;
   } config;
   int8_t ktAvgOffset;
   uint8_t tdcFactor;
   int8_t tdcOffset1;
   int8_t tdcOffset2;
   uint8_t peThreshFactor;
   int8_t peThreshOffset;
   uint8_t tdcSubtractFactor;
   int8_t tdcSubtractOffset;
   uint8_t defaultPreDivRatio24;
   uint8_t __dummy16;
   uint32_t fXtalInv;
   uint32_t K1;
   uint32_t K2BL16;
   uint32_t K2AL16;
   uint32_t K3BL;
   uint32_t K3AL;
   uint32_t K5;
   uint8_t M2K;
   uint8_t M3K;
   uint8_t M4K;
   uint8_t synthRegAnaDivLsbFsOnly;
   uint8_t synthRegAnaDivLsbRx;
   uint8_t synthRegAnaDivLsbTx;
   uint8_t ktPrecal;
   uint8_t ktPrecal1;
   uint16_t tdcPrecal;
   uint16_t tdcPrecal1;
   uint8_t coarsePrecal;
   uint8_t coarsePrecal1;
   uint8_t coarsePrecal2;
   uint8_t coarsePrecal3;
   uint8_t midPrecal;
   uint8_t midPrecal01;
   uint8_t midPrecal02;
   uint8_t midPrecal03;
   uint8_t midPrecal04;
   uint8_t midPrecal05;
   uint8_t midPrecal06;
   uint8_t midPrecal07;
   uint8_t midPrecal08;
   uint8_t midPrecal09;
   uint8_t midPrecal10;
   uint8_t midPrecal11;
   uint8_t midPrecal12;
   uint8_t midPrecal13;
   uint8_t midPrecal14;
   uint8_t midPrecal15;
} rfCoreHal_synthPar_t;

#define _N_INIT_SETS_synthPar 1
#define _N_INIT_WORDS_synthPar 18
#define _START_INIT_WIDX_synthPar 16
static uint32_t const __init_synthPar[_N_INIT_SETS_synthPar][_N_INIT_WORDS_synthPar] = {
   {
      0x06000001, 0x02082000, 0x00090010, 0x0AAAAAAB, 0x028A1DFC, 0x0001721C, 0x00002920, 0x0002E050, 
      0x0000F570, 0x00003D09, 0x21280105, 0x00003967, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000
   }
};

#define _POSITION_frontEndPar_lnaIbOffset                       136
#define _TYPE_frontEndPar_lnaIbOffset                           int8_t
#define _POSITION_frontEndPar_ifAmpTrimOffset                   137
#define _TYPE_frontEndPar_ifAmpTrimOffset                       int8_t
#define _POSITION_frontEndPar_rssiOffset                        138
#define _TYPE_frontEndPar_rssiOffset                            int8_t
#define _POSITION_frontEndPar_gpoContol                         139
#define _TYPE_frontEndPar_gpoContol                             uint8_t
#define _BITPOS_frontEndPar_gpoContol_bOutputLnaEn              0
#define _NBITS_frontEndPar_gpoContol_bOutputLnaEn               1
#define _BITPOS_frontEndPar_gpoContol_bOutputPaEn               1
#define _NBITS_frontEndPar_gpoContol_bOutputPaEn                1
#define _BITPOS_frontEndPar_gpoContol_bOutputSynthCal           2
#define _NBITS_frontEndPar_gpoContol_bOutputSynthCal            1
#define _BITPOS_frontEndPar_gpoContol_bOutputSyncFound          3
#define _NBITS_frontEndPar_gpoContol_bOutputSyncFound           1
#define _LAST_POSITION_frontEndPar                              139
#define _LAST_TYPE_frontEndPar                                  uint8_t

typedef struct {
   uint32_t __dummy0;
   uint32_t __dummy1;
   uint32_t __dummy2;
   uint32_t __dummy3;
   uint32_t __dummy4;
   uint32_t __dummy5;
   uint32_t __dummy6;
   uint32_t __dummy7;
   uint32_t __dummy8;
   uint32_t __dummy9;
   uint32_t __dummy10;
   uint32_t __dummy11;
   uint32_t __dummy12;
   uint32_t __dummy13;
   uint32_t __dummy14;
   uint32_t __dummy15;
   uint32_t __dummy16;
   uint32_t __dummy17;
   uint32_t __dummy18;
   uint32_t __dummy19;
   uint32_t __dummy20;
   uint32_t __dummy21;
   uint32_t __dummy22;
   uint32_t __dummy23;
   uint32_t __dummy24;
   uint32_t __dummy25;
   uint32_t __dummy26;
   uint32_t __dummy27;
   uint32_t __dummy28;
   uint32_t __dummy29;
   uint32_t __dummy30;
   uint32_t __dummy31;
   uint32_t __dummy32;
   uint32_t __dummy33;
   int8_t lnaIbOffset;
   int8_t ifAmpTrimOffset;
   int8_t rssiOffset;
   struct {
      uint8_t bOutputLnaEn:1;
      uint8_t bOutputPaEn:1;
      uint8_t bOutputSynthCal:1;
      uint8_t bOutputSyncFound:1;
   } gpoContol;
} rfCoreHal_frontEndPar_t;

#define _N_INIT_SETS_frontEndPar 4
#define _N_INIT_WORDS_frontEndPar 1
#define _START_INIT_WIDX_frontEndPar 34
static uint32_t const __init_frontEndPar[_N_INIT_SETS_frontEndPar][_N_INIT_WORDS_frontEndPar] = {
   {
      0x07000000
   },
   {
      0x070003FF
   },
   {
      0x07000001
   },
   {
      0x07000400
   }
};

#define _POSITION_bleRadioPar_advSyncWord                       144
#define _TYPE_bleRadioPar_advSyncWord                           uint32_t
#define _POSITION_bleRadioPar_maxCrcErr                         148
#define _TYPE_bleRadioPar_maxCrcErr                             uint8_t
#define _POSITION_bleRadioPar_numDfBytes                        149
#define _TYPE_bleRadioPar_numDfBytes                            uint8_t
#define _POSITION_bleRadioPar_dataHeaderAnd                     150
#define _TYPE_bleRadioPar_dataHeaderAnd                         uint8_t
#define _POSITION_bleRadioPar_dataAutoEmptyHdr                  151
#define _TYPE_bleRadioPar_dataAutoEmptyHdr                      uint8_t
#define _POSITION_bleRadioPar_advIndHdr                         152
#define _TYPE_bleRadioPar_advIndHdr                             uint8_t
#define _POSITION_bleRadioPar_advDirIndHdr                      153
#define _TYPE_bleRadioPar_advDirIndHdr                          uint8_t
#define _POSITION_bleRadioPar_advNcIndHdr                       154
#define _TYPE_bleRadioPar_advNcIndHdr                           uint8_t
#define _POSITION_bleRadioPar_advScanIndHdr                     155
#define _TYPE_bleRadioPar_advScanIndHdr                         uint8_t
#define _POSITION_bleRadioPar_scanReqHdr                        156
#define _TYPE_bleRadioPar_scanReqHdr                            uint8_t
#define _POSITION_bleRadioPar_connectReqHdr                     157
#define _TYPE_bleRadioPar_connectReqHdr                         uint8_t
#define _POSITION_bleRadioPar_scanRspHdr                        158
#define _TYPE_bleRadioPar_scanRspHdr                            uint8_t
#define _POSITION_bleRadioPar_dataLengthOr                      160
#define _TYPE_bleRadioPar_dataLengthOr                          uint8_t
#define _POSITION_bleRadioPar_advLengthOr                       161
#define _TYPE_bleRadioPar_advLengthOr                           uint8_t
#define _POSITION_bleRadioPar_dataLenMask                       162
#define _TYPE_bleRadioPar_dataLenMask                           uint8_t
#define _POSITION_bleRadioPar_maxDataLen                        163
#define _TYPE_bleRadioPar_maxDataLen                            uint8_t
#define _POSITION_bleRadioPar_advLenMask                        164
#define _TYPE_bleRadioPar_advLenMask                            uint8_t
#define _POSITION_bleRadioPar_maxAdvLen                         165
#define _TYPE_bleRadioPar_maxAdvLen                             uint8_t
#define _POSITION_bleRadioPar_rxIfsTimeout                      166
#define _TYPE_bleRadioPar_rxIfsTimeout                          uint16_t
#define _POSITION_bleRadioPar_minLogUpperLimit                  168
#define _TYPE_bleRadioPar_minLogUpperLimit                      uint8_t
#define _POSITION_bleRadioPar_maxLogUpperLimit                  169
#define _TYPE_bleRadioPar_maxLogUpperLimit                      uint8_t
#define _POSITION_bleRadioPar_winOffsetMargin                   170
#define _TYPE_bleRadioPar_winOffsetMargin                       uint16_t
#define _POSITION_bleRadioPar_extraWinSzLimit                   172
#define _TYPE_bleRadioPar_extraWinSzLimit                       uint16_t
#define _POSITION_bleRadioPar_minWinSz                          174
#define _TYPE_bleRadioPar_minWinSz                              uint8_t
#define _POSITION_bleRadioPar_bWinOffsetNotZero                 175
#define _TYPE_bleRadioPar_bWinOffsetNotZero                     uint8_t
#define _POSITION_bleRadioPar_ticksPerConnIntStep               176
#define _TYPE_bleRadioPar_ticksPerConnIntStep                   uint16_t
#define _LAST_POSITION_bleRadioPar                              176
#define _LAST_TYPE_bleRadioPar                                  uint16_t

typedef struct {
   uint32_t __dummy0;
   uint32_t __dummy1;
   uint32_t __dummy2;
   uint32_t __dummy3;
   uint32_t __dummy4;
   uint32_t __dummy5;
   uint32_t __dummy6;
   uint32_t __dummy7;
   uint32_t __dummy8;
   uint32_t __dummy9;
   uint32_t __dummy10;
   uint32_t __dummy11;
   uint32_t __dummy12;
   uint32_t __dummy13;
   uint32_t __dummy14;
   uint32_t __dummy15;
   uint32_t __dummy16;
   uint32_t __dummy17;
   uint32_t __dummy18;
   uint32_t __dummy19;
   uint32_t __dummy20;
   uint32_t __dummy21;
   uint32_t __dummy22;
   uint32_t __dummy23;
   uint32_t __dummy24;
   uint32_t __dummy25;
   uint32_t __dummy26;
   uint32_t __dummy27;
   uint32_t __dummy28;
   uint32_t __dummy29;
   uint32_t __dummy30;
   uint32_t __dummy31;
   uint32_t __dummy32;
   uint32_t __dummy33;
   uint32_t __dummy34;
   uint32_t __dummy35;
   uint32_t advSyncWord;
   uint8_t maxCrcErr;
   uint8_t numDfBytes;
   uint8_t dataHeaderAnd;
   uint8_t dataAutoEmptyHdr;
   uint8_t advIndHdr;
   uint8_t advDirIndHdr;
   uint8_t advNcIndHdr;
   uint8_t advScanIndHdr;
   uint8_t scanReqHdr;
   uint8_t connectReqHdr;
   uint8_t scanRspHdr;
   uint8_t __dummy36;
   uint8_t dataLengthOr;
   uint8_t advLengthOr;
   uint8_t dataLenMask;
   uint8_t maxDataLen;
   uint8_t advLenMask;
   uint8_t maxAdvLen;
   uint16_t rxIfsTimeout;
   uint8_t minLogUpperLimit;
   uint8_t maxLogUpperLimit;
   uint16_t winOffsetMargin;
   uint16_t extraWinSzLimit;
   uint8_t minWinSz;
   uint8_t bWinOffsetNotZero;
   uint16_t ticksPerConnIntStep;
} rfCoreHal_bleRadioPar_t;

#define _N_INIT_SETS_bleRadioPar 1
#define _N_INIT_WORDS_bleRadioPar 9
#define _START_INIT_WIDX_bleRadioPar 36
static uint32_t const __init_bleRadioPar[_N_INIT_SETS_bleRadioPar][_N_INIT_WORDS_bleRadioPar] = {
   {
      0x8E89BED6, 0x01FF0002, 0x06020100, 0x00040503, 0x1F1F0000, 0x03C0253F, 0x19880800, 0x01010600, 
      0x00001388
   }
};

#define _POSITION_ieeeRadioPar_numPreambleNibbles               144
#define _TYPE_ieeeRadioPar_numPreambleNibbles                   uint8_t
#define _POSITION_ieeeRadioPar_phyLenMask                       145
#define _TYPE_ieeeRadioPar_phyLenMask                           uint8_t
#define _POSITION_ieeeRadioPar_preambleWord                     146
#define _TYPE_ieeeRadioPar_preambleWord                         uint16_t
#define _POSITION_ieeeRadioPar_ackMacHdr                        148
#define _TYPE_ieeeRadioPar_ackMacHdr                            uint16_t
#define _POSITION_ieeeRadioPar_frameCtrlAnd                     150
#define _TYPE_ieeeRadioPar_frameCtrlAnd                         uint16_t
#define _POSITION_ieeeRadioPar_frameCtrlAndBeacon               150
#define _TYPE_ieeeRadioPar_frameCtrlAndBeacon                   uint16_t
#define _POSITION_ieeeRadioPar_frameCtrlAndData                 152
#define _TYPE_ieeeRadioPar_frameCtrlAndData                     uint16_t
#define _POSITION_ieeeRadioPar_frameCtrlAndAck                  154
#define _TYPE_ieeeRadioPar_frameCtrlAndAck                      uint16_t
#define _POSITION_ieeeRadioPar_frameCtrlAndMacCmd               156
#define _TYPE_ieeeRadioPar_frameCtrlAndMacCmd                   uint16_t
#define _POSITION_ieeeRadioPar_frameCtrlAndFt4                  158
#define _TYPE_ieeeRadioPar_frameCtrlAndFt4                      uint16_t
#define _POSITION_ieeeRadioPar_frameCtrlAndFt5                  160
#define _TYPE_ieeeRadioPar_frameCtrlAndFt5                      uint16_t
#define _POSITION_ieeeRadioPar_frameCtrlAndFt6                  162
#define _TYPE_ieeeRadioPar_frameCtrlAndFt6                      uint16_t
#define _POSITION_ieeeRadioPar_frameCtrlAndFt7                  164
#define _TYPE_ieeeRadioPar_frameCtrlAndFt7                      uint16_t
#define _POSITION_ieeeRadioPar_rxFrameEndOffset                 166
#define _TYPE_ieeeRadioPar_rxFrameEndOffset                     int16_t
#define _POSITION_ieeeRadioPar_txFrameEndOffset                 168
#define _TYPE_ieeeRadioPar_txFrameEndOffset                     int16_t
#define _POSITION_ieeeRadioPar_backoffPeriod                    170
#define _TYPE_ieeeRadioPar_backoffPeriod                        uint16_t
#define _POSITION_ieeeRadioPar_csmaSlottedWaitBeforeCca         172
#define _TYPE_ieeeRadioPar_csmaSlottedWaitBeforeCca             uint16_t
#define _POSITION_ieeeRadioPar_csmaUnslottedWaitBeforeCca       174
#define _TYPE_ieeeRadioPar_csmaUnslottedWaitBeforeCca           uint16_t
#define _POSITION_ieeeRadioPar_csmaUnslottedWaitAfterCca        176
#define _TYPE_ieeeRadioPar_csmaUnslottedWaitAfterCca            uint16_t
#define _POSITION_ieeeRadioPar_csmaUnslottedWait0Cca            178
#define _TYPE_ieeeRadioPar_csmaUnslottedWait0Cca                uint16_t
#define _POSITION_ieeeRadioPar_csmaRxWakeupTime                 180
#define _TYPE_ieeeRadioPar_csmaRxWakeupTime                     uint16_t
#define _POSITION_ieeeRadioPar_csmaRxWakeupMargin               182
#define _TYPE_ieeeRadioPar_csmaRxWakeupMargin                   uint16_t
#define _POSITION_ieeeRadioPar_ccaCorrWindow                    184
#define _TYPE_ieeeRadioPar_ccaCorrWindow                        uint16_t
#define _POSITION_ieeeRadioPar_rxCcaCorrValidTime               186
#define _TYPE_ieeeRadioPar_rxCcaCorrValidTime                   uint16_t
#define _POSITION_ieeeRadioPar_broadcastAckMode                 188
#define _TYPE_ieeeRadioPar_broadcastAckMode                     uint8_t
#define _LAST_POSITION_ieeeRadioPar                             188
#define _LAST_TYPE_ieeeRadioPar                                 uint8_t

typedef struct {
   uint32_t __dummy0;
   uint32_t __dummy1;
   uint32_t __dummy2;
   uint32_t __dummy3;
   uint32_t __dummy4;
   uint32_t __dummy5;
   uint32_t __dummy6;
   uint32_t __dummy7;
   uint32_t __dummy8;
   uint32_t __dummy9;
   uint32_t __dummy10;
   uint32_t __dummy11;
   uint32_t __dummy12;
   uint32_t __dummy13;
   uint32_t __dummy14;
   uint32_t __dummy15;
   uint32_t __dummy16;
   uint32_t __dummy17;
   uint32_t __dummy18;
   uint32_t __dummy19;
   uint32_t __dummy20;
   uint32_t __dummy21;
   uint32_t __dummy22;
   uint32_t __dummy23;
   uint32_t __dummy24;
   uint32_t __dummy25;
   uint32_t __dummy26;
   uint32_t __dummy27;
   uint32_t __dummy28;
   uint32_t __dummy29;
   uint32_t __dummy30;
   uint32_t __dummy31;
   uint32_t __dummy32;
   uint32_t __dummy33;
   uint32_t __dummy34;
   uint32_t __dummy35;
   uint8_t numPreambleNibbles;
   uint8_t phyLenMask;
   uint16_t preambleWord;
   uint16_t ackMacHdr;
   uint16_t frameCtrlAnd;
   uint16_t frameCtrlAndData;
   uint16_t frameCtrlAndAck;
   uint16_t frameCtrlAndMacCmd;
   uint16_t frameCtrlAndFt4;
   uint16_t frameCtrlAndFt5;
   uint16_t frameCtrlAndFt6;
   uint16_t frameCtrlAndFt7;
   int16_t rxFrameEndOffset;
   int16_t txFrameEndOffset;
   uint16_t backoffPeriod;
   uint16_t csmaSlottedWaitBeforeCca;
   uint16_t csmaUnslottedWaitBeforeCca;
   uint16_t csmaUnslottedWaitAfterCca;
   uint16_t csmaUnslottedWait0Cca;
   uint16_t csmaRxWakeupTime;
   uint16_t csmaRxWakeupMargin;
   uint16_t ccaCorrWindow;
   uint16_t rxCcaCorrValidTime;
   uint8_t broadcastAckMode;
} rfCoreHal_ieeeRadioPar_t;

#define _N_INIT_SETS_ieeeRadioPar 1
#define _N_INIT_WORDS_ieeeRadioPar 12
#define _START_INIT_WIDX_ieeeRadioPar 36
static uint32_t const __init_ieeeRadioPar[_N_INIT_SETS_ieeeRadioPar][_N_INIT_WORDS_ieeeRadioPar] = {
   {
      0x00007F08, 0xF39F0002, 0x3397FFFF, 0x338FFFFF, 0x338F338F, 0x0280338F, 0x050000E0, 0x00000200, 
      0x00000200, 0x00800360, 0x02400200, 0x00000000
   }
};

#define _POSITION_hsRadioPar_syncWord                           144
#define _TYPE_hsRadioPar_syncWord                               uint32_t
#define _LAST_POSITION_hsRadioPar                               144
#define _LAST_TYPE_hsRadioPar                                   uint32_t

typedef struct {
   uint32_t __dummy0;
   uint32_t __dummy1;
   uint32_t __dummy2;
   uint32_t __dummy3;
   uint32_t __dummy4;
   uint32_t __dummy5;
   uint32_t __dummy6;
   uint32_t __dummy7;
   uint32_t __dummy8;
   uint32_t __dummy9;
   uint32_t __dummy10;
   uint32_t __dummy11;
   uint32_t __dummy12;
   uint32_t __dummy13;
   uint32_t __dummy14;
   uint32_t __dummy15;
   uint32_t __dummy16;
   uint32_t __dummy17;
   uint32_t __dummy18;
   uint32_t __dummy19;
   uint32_t __dummy20;
   uint32_t __dummy21;
   uint32_t __dummy22;
   uint32_t __dummy23;
   uint32_t __dummy24;
   uint32_t __dummy25;
   uint32_t __dummy26;
   uint32_t __dummy27;
   uint32_t __dummy28;
   uint32_t __dummy29;
   uint32_t __dummy30;
   uint32_t __dummy31;
   uint32_t __dummy32;
   uint32_t __dummy33;
   uint32_t __dummy34;
   uint32_t __dummy35;
   uint32_t syncWord;
} rfCoreHal_hsRadioPar_t;

#define _N_INIT_SETS_hsRadioPar 1
#define _N_INIT_WORDS_hsRadioPar 1
#define _START_INIT_WIDX_hsRadioPar 36
static uint32_t const __init_hsRadioPar[_N_INIT_SETS_hsRadioPar][_N_INIT_WORDS_hsRadioPar] = {
   {
      0x9C8D6BE0
   }
};

#endif
